ID : 1
Received Java Code:@OptionsItem(R.id.pickFile) void pickFile(){	  int permissionCheck=ContextCompat.checkSelfPermission(this,READ_EXTERNAL_STORAGE);	  if (permissionCheck != PackageManager.PERMISSION_GRANTED) {	    ActivityCompat.requestPermissions(this,new String[]{READ_EXTERNAL_STORAGE},PERMISSION_CODE);	    return;	  }	  launchPicker();	}
Method Name:pick file
API seq: ContextCompat.checkSelfPermission ActivityCompat.requestPermissions launchPicker
Tokens: request read code package activity manager launch permission storage check granted external permissions context self picker compat

ID : 2
Received Java Code:void launchPicker(){	  Intent intent=new Intent(Intent.ACTION_GET_CONTENT);	  intent.setType("application/pdf");	  try {	    startActivityForResult(intent,REQUEST_CODE);	  }	 catch (  ActivityNotFoundException e) {	    Toast.makeText(this,R.string.toast_pick_file_error,Toast.LENGTH_SHORT).show();	  }	}
Method Name:launch picker
API seq: Intent Intent.setType startActivityForResult Toast.makeText Toast.show
Tokens: request code activity show length start type error intent content result toast found file pick get short action text make

ID : 3
Received Java Code:@AfterViews void afterViews(){	  pdfView.setBackgroundColor(Color.LTGRAY);	  if (uri != null) {	    displayFromUri(uri);	  }	 else {	    displayFromAsset(SAMPLE_FILE);	  }	  setTitle(pdfFileName);	}
Method Name:after views
API seq: pdfView.setBackgroundColor displayFromUri displayFromAsset setTitle
Tokens: color display title sample uri view file pdf null ltgray background name from asset

ID : 4
Received Java Code:private void displayFromAsset(String assetFileName){	  pdfFileName=assetFileName;	  pdfView.fromAsset(SAMPLE_FILE).defaultPage(pageNumber).onPageChange(this).enableAnnotationRendering(true).onLoad(this).scrollHandle(new DefaultScrollHandle(this)).spacing(10).onPageError(this).pageFitPolicy(FitPolicy.BOTH).load();	}
Method Name:display from asset
API seq: pdfView.fromAsset pdfView.defaultPage pdfView.onPageChange pdfView.enableAnnotationRendering pdfView.onLoad DefaultScrollHandle.new DefaultScrollHandle.scrollHandle DefaultScrollHandle.spacing DefaultScrollHandle.onPageError DefaultScrollHandle.pageFitPolicy DefaultScrollHandle.load
Tokens: annotation change scroll rendering handle error sample both fit number default view file pdf spacing load enable true name from page asset policy 10

ID : 5
Received Java Code:private void displayFromUri(Uri uri){	  pdfFileName=getFileName(uri);	  pdfView.fromUri(uri).defaultPage(pageNumber).onPageChange(this).enableAnnotationRendering(true).onLoad(this).scrollHandle(new DefaultScrollHandle(this)).spacing(10).onPageError(this).load();	}
Method Name:display from uri
API seq: getFileName pdfView.fromUri pdfView.defaultPage pdfView.onPageChange pdfView.enableAnnotationRendering pdfView.onLoad DefaultScrollHandle.new DefaultScrollHandle.scrollHandle DefaultScrollHandle.spacing DefaultScrollHandle.onPageError DefaultScrollHandle.load
Tokens: annotation change scroll rendering handle error uri number default view pdf spacing file load enable get true name from page 10

ID : 6
Received Java Code:@OnActivityResult(REQUEST_CODE) public void onResult(int resultCode,Intent intent){	  if (resultCode == RESULT_OK) {	    uri=intent.getData();	    displayFromUri(uri);	  }	}
Method Name:on result
API seq: Intent.getData displayFromUri
Tokens: result code data get display from ok uri intent

ID : 7
Received Java Code:@Override public void onPageChanged(int page,int pageCount){	  pageNumber=page;	  setTitle(String.format("%s %s / %s",pdfFileName,page + 1,pageCount));	}
Method Name:on page changed
API seq: String.format setTitle
Tokens: number pdf file count format name page title

ID : 8
Received Java Code:public String getFileName(Uri uri){	  String result=null;	  if (uri.getScheme().equals("content")) {	    Cursor cursor=getContentResolver().query(uri,null,null,null,null);	    try {	      if (cursor != null && cursor.moveToFirst()) {	        result=cursor.getString(cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME));	      }	    }	  finally {	      if (cursor != null) {	        cursor.close();	      }	    }	  }	  if (result == null) {	    result=uri.getLastPathSegment();	  }	  return result;	}
Method Name:get file name
API seq: Uri.getScheme Uri.equals getContentResolver getContentResolver.query Cursor.moveToFirst Cursor.getColumnIndex Cursor.getString Cursor.close Uri.getLastPathSegment
Tokens: cursor resolver move scheme last columns query finally display column index uri content result path null openable get equals segment name close first

ID : 9
Received Java Code:@Override public void loadComplete(int nbPages){	  PdfDocument.Meta meta=pdfView.getDocumentMeta();	  Log.e(TAG,"title = " + meta.getTitle());	  Log.e(TAG,"author = " + meta.getAuthor());	  Log.e(TAG,"subject = " + meta.getSubject());	  Log.e(TAG,"keywords = " + meta.getKeywords());	  Log.e(TAG,"creator = " + meta.getCreator());	  Log.e(TAG,"producer = " + meta.getProducer());	  Log.e(TAG,"creationDate = " + meta.getCreationDate());	  Log.e(TAG,"modDate = " + meta.getModDate());	  printBookmarksTree(pdfView.getTableOfContents(),"-");	}
Method Name:load complete
API seq: pdfView.getDocumentMeta PdfDocument.Meta.getTitle Log.e PdfDocument.Meta.getAuthor Log.e PdfDocument.Meta.getSubject Log.e PdfDocument.Meta.getKeywords Log.e PdfDocument.Meta.getCreator Log.e PdfDocument.Meta.getProducer Log.e PdfDocument.Meta.getCreationDate Log.e PdfDocument.Meta.getModDate Log.e pdfView.getTableOfContents printBookmarksTree
Tokens: date creator mod keywords log subject author document tree title bookmarks print view pdf contents meta get producer tag table creation

ID : 10
Received Java Code:public void printBookmarksTree(List<PdfDocument.Bookmark> tree,String sep){	  for (  PdfDocument.Bookmark b : tree) {	    Log.e(TAG,String.format("%s %s, p %d",sep,b.getTitle(),b.getPageIdx()));	    if (b.hasChildren()) {	      printBookmarksTree(b.getChildren(),sep + "-");	    }	  }	}
Method Name:print bookmarks tree
API seq: PdfDocument.Bookmark.getTitle PdfDocument.Bookmark.getPageIdx String.format Log.e PdfDocument.Bookmark.hasChildren PdfDocument.Bookmark.getChildren printBookmarksTree
Tokens: log document tree format title bookmarks bookmark print pdf children get has tag page idx sep

ID : 11
Received Java Code:@Override public void onRequestPermissionsResult(int requestCode,@NonNull String permissions[],@NonNull int[] grantResults){	  if (requestCode == PERMISSION_CODE) {	    if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {	      launchPicker();	    }	  }	}
Method Name:on request permissions result
API seq: launchPicker
Tokens: request code package manager length permission launch picker grant results granted

ID : 12
Received Java Code:@Override public void onPageError(int page,Throwable t){	  Log.e(TAG,"Cannot load page " + page);	}
Method Name:on page error
API seq: Log.e
Tokens: log tag page

ID : 13
Received Java Code:private MathUtils(){	}
Method Name:math utils
API seq:
Tokens:

ID : 14
Received Java Code:public static int limit(int number,int between,int and){	  if (number <= between) {	    return between;	  }	  if (number >= and) {	    return and;	  }	  return number;	}
Method Name:limit
API seq:
Tokens: number between

ID : 15
Received Java Code:public static float limit(float number,float between,float and){	  if (number <= between) {	    return between;	  }	  if (number >= and) {	    return and;	  }	  return number;	}
Method Name:limit
API seq:
Tokens: number between

ID : 16
Received Java Code:public static float max(float number,float max){	  if (number > max) {	    return max;	  }	  return number;	}
Method Name:max
API seq:
Tokens: number max

ID : 17
Received Java Code:public static float min(float number,float min){	  if (number < min) {	    return min;	  }	  return number;	}
Method Name:min
API seq:
Tokens: number min

ID : 18
Received Java Code:public static int max(int number,int max){	  if (number > max) {	    return max;	  }	  return number;	}
Method Name:max
API seq:
Tokens: number max

ID : 19
Received Java Code:public static int min(int number,int min){	  if (number < min) {	    return min;	  }	  return number;	}
Method Name:min
API seq:
Tokens: number min

ID : 20
Received Java Code:static public int floor(float value){	  return (int)(value + BIG_ENOUGH_FLOOR) - BIG_ENOUGH_INT;	}
Method Name:floor
API seq: return
Tokens: big enough floor value

ID : 21
Received Java Code:static public int ceil(float value){	  return (int)(value + BIG_ENOUGH_CEIL) - BIG_ENOUGH_INT;	}
Method Name:ceil
API seq: return
Tokens: big enough ceil value

ID : 22
Received Java Code:private ArrayUtils(){	}
Method Name:array utils
API seq:
Tokens:

ID : 23
Received Java Code:public static int[] deleteDuplicatedPages(int[] pages){	  List<Integer> result=new ArrayList<>();	  int lastInt=-1;	  for (  Integer currentInt : pages) {	    if (lastInt != currentInt) {	      result.add(currentInt);	    }	    lastInt=currentInt;	  }	  int[] arrayResult=new int[result.size()];	  for (int i=0; i < result.size(); i++) {	    arrayResult[i]=result.get(i);	  }	  return arrayResult;	}
Method Name:delete duplicated pages
API seq: result.add result.size result.size result.get
Tokens: add result current pages last size get integer

ID : 24
Received Java Code:public static int[] calculateIndexesInDuplicateArray(int[] originalUserPages){	  int[] result=new int[originalUserPages.length];	  if (originalUserPages.length == 0) {	    return result;	  }	  int index=0;	  result[0]=index;	  for (int i=1; i < originalUserPages.length; i++) {	    if (originalUserPages[i] != originalUserPages[i - 1]) {	      index++;	    }	    result[i]=index;	  }	  return result;	}
Method Name:calculate indexes in duplicate array
API seq:
Tokens: result original pages length index user

ID : 25
Received Java Code:public static String arrayToString(int[] array){	  StringBuilder builder=new StringBuilder("[");	  for (int i=0; i < array.length; i++) {	    builder.append(array[i]);	    if (i != array.length - 1) {	      builder.append(",");	    }	  }	  builder.append("]");	  return builder.toString();	}
Method Name:array to string
API seq: StringBuilder StringBuilder.append StringBuilder.append StringBuilder.append StringBuilder.toString
Tokens: builder length append

ID : 26
Received Java Code:public PageSizeCalculator(FitPolicy fitPolicy,Size originalMaxWidthPageSize,Size originalMaxHeightPageSize,Size viewSize){	  this.fitPolicy=fitPolicy;	  this.originalMaxWidthPageSize=originalMaxWidthPageSize;	  this.originalMaxHeightPageSize=originalMaxHeightPageSize;	  this.viewSize=viewSize;	  calculateMaxPages();	}
Method Name:page size calculator
API seq: calculateMaxPages
Tokens: fit view original pages size max width page calculate policy height

ID : 27
Received Java Code:public SizeF calculate(Size pageSize){	  if (pageSize.getWidth() <= 0 || pageSize.getHeight() <= 0) {	    return new SizeF(0,0);	  }	switch (fitPolicy) {	case HEIGHT:	    return fitHeight(pageSize,pageSize.getHeight() * heightRatio);	case BOTH:	  return fitBoth(pageSize,pageSize.getWidth() * widthRatio,pageSize.getHeight() * heightRatio);	default :	return fitWidth(pageSize,pageSize.getWidth() * widthRatio);	}	}
Method Name:calculate
API seq: Size.getWidth Size.getHeight SizeF switch Size.getHeight fitHeight Size.getWidth Size.getHeight fitBoth Size.getWidth fitWidth
Tokens: fit default size get width page case ratio policy height switch both

ID : 28
Received Java Code:public SizeF getOptimalMaxWidthPageSize(){	  return optimalMaxWidthPageSize;	}
Method Name:get optimal max width page size
API seq:
Tokens: optimal size max width page

ID : 29
Received Java Code:public SizeF getOptimalMaxHeightPageSize(){	  return optimalMaxHeightPageSize;	}
Method Name:get optimal max height page size
API seq:
Tokens: optimal size max page height

ID : 30
Received Java Code:private void calculateMaxPages(){	switch (fitPolicy) {	case HEIGHT:	    optimalMaxHeightPageSize=fitHeight(originalMaxHeightPageSize,viewSize.getHeight());	  heightRatio=optimalMaxHeightPageSize.getHeight() / originalMaxHeightPageSize.getHeight();	optimalMaxWidthPageSize=fitHeight(originalMaxWidthPageSize,originalMaxWidthPageSize.getHeight() * heightRatio);	break;	case BOTH:	SizeF localOptimalMaxWidth=fitBoth(originalMaxWidthPageSize,viewSize.getWidth(),viewSize.getHeight());	float localWidthRatio=localOptimalMaxWidth.getWidth() / originalMaxWidthPageSize.getWidth();	this.optimalMaxHeightPageSize=fitBoth(originalMaxHeightPageSize,originalMaxHeightPageSize.getWidth() * localWidthRatio,viewSize.getHeight());	heightRatio=optimalMaxHeightPageSize.getHeight() / originalMaxHeightPageSize.getHeight();	optimalMaxWidthPageSize=fitBoth(originalMaxWidthPageSize,viewSize.getWidth(),originalMaxWidthPageSize.getHeight() * heightRatio);	widthRatio=optimalMaxWidthPageSize.getWidth() / originalMaxWidthPageSize.getWidth();	break;	default :	optimalMaxWidthPageSize=fitWidth(originalMaxWidthPageSize,viewSize.getWidth());	widthRatio=optimalMaxWidthPageSize.getWidth() / originalMaxWidthPageSize.getWidth();	optimalMaxHeightPageSize=fitWidth(originalMaxHeightPageSize,originalMaxHeightPageSize.getWidth() * widthRatio);	break;	}	}
Method Name:calculate max pages
API seq: switch viewSize.getHeight fitHeight optimalMaxHeightPageSize.getHeight originalMaxHeightPageSize.getHeight originalMaxWidthPageSize.getHeight fitHeight viewSize.getWidth viewSize.getHeight fitBoth SizeF.getWidth originalMaxWidthPageSize.getWidth originalMaxHeightPageSize.getWidth viewSize.getHeight fitBoth optimalMaxHeightPageSize.getHeight originalMaxHeightPageSize.getHeight viewSize.getWidth originalMaxWidthPageSize.getHeight fitBoth optimalMaxWidthPageSize.getWidth originalMaxWidthPageSize.getWidth viewSize.getWidth fitWidth optimalMaxWidthPageSize.getWidth originalMaxWidthPageSize.getWidth originalMaxHeightPageSize.getWidth fitWidth
Tokens: original optimal max break float local switch both fit view default size get width page case ratio height policy

ID : 31
Received Java Code:private SizeF fitWidth(Size pageSize,float maxWidth){	  float w=pageSize.getWidth(), h=pageSize.getHeight();	  float ratio=w / h;	  w=maxWidth;	  h=(float)Math.floor(maxWidth / ratio);	  return new SizeF(w,h);	}
Method Name:fit width
API seq: Size.getWidth Size.getHeight Math.floor SizeF
Tokens: size max get width page math float floor height ratio

ID : 32
Received Java Code:private SizeF fitHeight(Size pageSize,float maxHeight){	  float w=pageSize.getWidth(), h=pageSize.getHeight();	  float ratio=h / w;	  h=maxHeight;	  w=(float)Math.floor(maxHeight / ratio);	  return new SizeF(w,h);	}
Method Name:fit height
API seq: Size.getWidth Size.getHeight Math.floor SizeF
Tokens: size max get width page math float floor height ratio

ID : 33
Received Java Code:private SizeF fitBoth(Size pageSize,float maxWidth,float maxHeight){	  float w=pageSize.getWidth(), h=pageSize.getHeight();	  float ratio=w / h;	  w=maxWidth;	  h=(float)Math.floor(maxWidth / ratio);	  if (h > maxHeight) {	    h=maxHeight;	    w=(float)Math.floor(maxHeight * ratio);	  }	  return new SizeF(w,h);	}
Method Name:fit both
API seq: Size.getWidth Size.getHeight Math.floor Math.floor SizeF
Tokens: size max get width page math float floor height ratio

ID : 34
Received Java Code:private FileUtils(){	}
Method Name:file utils
API seq:
Tokens:

ID : 35
Received Java Code:public static File fileFromAsset(Context context,String assetName) throws IOException {	  File outFile=new File(context.getCacheDir(),assetName + "-pdfview.pdf");	  if (assetName.contains("/")) {	    outFile.getParentFile().mkdirs();	  }	  copy(context.getAssets().open(assetName),outFile);	  return outFile;	}
Method Name:file from asset
API seq: Context.getCacheDir File String.contains File.getParentFile File.mkdirs Context.getAssets Context.open copy
Tokens: parent cache dir out contains file assets get mkdirs context name copy asset open

ID : 36
Received Java Code:public static void copy(InputStream inputStream,File output) throws IOException {	  OutputStream outputStream=null;	  try {	    outputStream=new FileOutputStream(output);	    int read=0;	    byte[] bytes=new byte[1024];	    while ((read=inputStream.read(bytes)) != -1) {	      outputStream.write(bytes,0,read);	    }	  }	  finally {	    try {	      if (inputStream != null) {	        inputStream.close();	      }	    }	  finally {	      if (outputStream != null) {	        outputStream.close();	      }	    }	  }	}
Method Name:copy
API seq: FileOutputStream InputStream.read InputStream.read OutputStream.write InputStream.close OutputStream.close
Tokens: output input read file null stream byte bytes 1024 finally write close

ID : 37
Received Java Code:public static int getDP(Context context,int dp){	  return (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,dp,context.getResources().getDisplayMetrics());	}
Method Name:get dp
API seq: return Context.getResources Context.getDisplayMetrics TypedValue.applyDimension
Tokens: apply display resources dip dp typed unit get complex context metrics dimension value

ID : 38
Received Java Code:public static byte[] toByteArray(InputStream inputStream) throws IOException {	  ByteArrayOutputStream os=new ByteArrayOutputStream();	  byte[] buffer=new byte[DEFAULT_BUFFER_SIZE];	  int n;	  while (-1 != (n=inputStream.read(buffer))) {	    os.write(buffer,0,n);	  }	  return os.toByteArray();	}
Method Name:to byte array
API seq: ByteArrayOutputStream ByteArrayOutputStream.write ByteArrayOutputStream.toByteArray
Tokens: output input default read os size stream byte buffer write

ID : 39
Received Java Code:public CacheManager(){	  activeCache=new PriorityQueue<>(CACHE_SIZE,orderComparator);	  passiveCache=new PriorityQueue<>(CACHE_SIZE,orderComparator);	  thumbnails=new ArrayList<>();	}
Method Name:cache manager
API seq:
Tokens: comparator cache size active priority thumbnails passive queue order

ID : 40
Received Java Code:public void cachePart(PagePart part){	synchronized (passiveActiveLock) {	    makeAFreeSpace();	    activeCache.offer(part);	  }	}
Method Name:cache part
API seq: synchronized makeAFreeSpace activeCache.offer
Tokens: offer cache part active lock afree make passive space

ID : 41
Received Java Code:public void makeANewSet(){	synchronized (passiveActiveLock) {	    passiveCache.addAll(activeCache);	    activeCache.clear();	  }	}
Method Name:make anew set
API seq: synchronized passiveCache.addAll activeCache.clear
Tokens: add all cache clear active lock passive

ID : 42
Received Java Code:private void makeAFreeSpace(){	synchronized (passiveActiveLock) {	    while ((activeCache.size() + passiveCache.size()) >= CACHE_SIZE && !passiveCache.isEmpty()) {	      PagePart part=passiveCache.poll();	      part.getRenderedBitmap().recycle();	    }	    while ((activeCache.size() + passiveCache.size()) >= CACHE_SIZE && !activeCache.isEmpty()) {	      activeCache.poll().getRenderedBitmap().recycle();	    }	  }	}
Method Name:make afree space
API seq: synchronized activeCache.size passiveCache.size activeCache.size passiveCache.isEmpty passiveCache.poll PagePart.getRenderedBitmap PagePart.recycle activeCache.size passiveCache.size activeCache.size activeCache.isEmpty activeCache.poll activeCache.getRenderedBitmap activeCache.recycle
Tokens: cache part active poll passive empty size rendered get bitmap recycle lock page

ID : 43
Received Java Code:public void cacheThumbnail(PagePart part){	synchronized (thumbnails) {	    while (thumbnails.size() >= THUMBNAILS_CACHE_SIZE) {	      thumbnails.remove(0).getRenderedBitmap().recycle();	    }	    addWithoutDuplicates(thumbnails,part);	  }	}
Method Name:cache thumbnail
API seq: synchronized thumbnails.size thumbnails.remove thumbnails.getRenderedBitmap thumbnails.recycle addWithoutDuplicates
Tokens: add duplicates cache size rendered get bitmap part recycle thumbnails without remove

ID : 44
Received Java Code:public boolean upPartIfContained(int page,RectF pageRelativeBounds,int toOrder){	  PagePart fakePart=new PagePart(page,null,pageRelativeBounds,false,0);	  PagePart found;	synchronized (passiveActiveLock) {	    if ((found=find(passiveCache,fakePart)) != null) {	      passiveCache.remove(found);	      found.setCacheOrder(toOrder);	      activeCache.offer(found);	      return true;	    }	    return find(activeCache,fakePart) != null;	  }	}
Method Name:up part if contained
API seq: PagePart synchronized find find passiveCache.remove PagePart.setCacheOrder activeCache.offer find
Tokens: cache part false active passive remove offer found null find bounds true lock fake page relative order

ID : 45
Received Java Code:public boolean containsThumbnail(int page,RectF pageRelativeBounds){	  PagePart fakePart=new PagePart(page,null,pageRelativeBounds,true,0);	synchronized (thumbnails) {	    for (    PagePart part : thumbnails) {	      if (part.equals(fakePart)) {	        return true;	      }	    }	    return false;	  }	}
Method Name:contains thumbnail
API seq: PagePart synchronized PagePart.equals
Tokens: null part equals bounds false true fake page thumbnails relative

ID : 46
Received Java Code:private void addWithoutDuplicates(Collection<PagePart> collection,PagePart newPart){	  for (  PagePart part : collection) {	    if (part.equals(newPart)) {	      newPart.getRenderedBitmap().recycle();	      return;	    }	  }	  collection.add(newPart);	}
Method Name:add without duplicates
API seq: PagePart.equals PagePart.getRenderedBitmap PagePart.recycle collection.add
Tokens: add rendered part get bitmap equals recycle page collection

ID : 47
Received Java Code:@Nullable private static PagePart find(PriorityQueue<PagePart> vector,PagePart fakePart){	  for (  PagePart part : vector) {	    if (part.equals(fakePart)) {	      return part;	    }	  }	  return null;	}
Method Name:find
API seq: PagePart.equals
Tokens: null part equals fake vector page

ID : 48
Received Java Code:public List<PagePart> getPageParts(){	synchronized (passiveActiveLock) {	    List<PagePart> parts=new ArrayList<>(passiveCache);	    parts.addAll(activeCache);	    return parts;	  }	}
Method Name:get page parts
API seq: synchronized parts.addAll
Tokens: add all cache part parts active lock page passive

ID : 49
Received Java Code:public List<PagePart> getThumbnails(){	synchronized (thumbnails) {	    return thumbnails;	  }	}
Method Name:get thumbnails
API seq: synchronized
Tokens: thumbnails

ID : 50
Received Java Code:public void recycle(){	synchronized (passiveActiveLock) {	    for (    PagePart part : passiveCache) {	      part.getRenderedBitmap().recycle();	    }	    passiveCache.clear();	    for (    PagePart part : activeCache) {	      part.getRenderedBitmap().recycle();	    }	    activeCache.clear();	  }	synchronized (thumbnails) {	    for (    PagePart part : thumbnails) {	      part.getRenderedBitmap().recycle();	    }	    thumbnails.clear();	  }	}
Method Name:recycle
API seq: synchronized PagePart.getRenderedBitmap PagePart.recycle passiveCache.clear PagePart.getRenderedBitmap PagePart.recycle activeCache.clear synchronized PagePart.getRenderedBitmap PagePart.recycle thumbnails.clear
Tokens: cache rendered part get bitmap recycle clear active lock page thumbnails passive

ID : 51
Received Java Code:public AnimationManager(PDFView pdfView){	  this.pdfView=pdfView;	  scroller=new OverScroller(pdfView.getContext());	}
Method Name:animation manager
API seq: PDFView.getContext OverScroller
Tokens: over view pdf get context scroller

ID : 52
Received Java Code:public void startXAnimation(float xFrom,float xTo){	  stopAll();	  animation=ValueAnimator.ofFloat(xFrom,xTo);	  XAnimation xAnimation=new XAnimation();	  animation.setInterpolator(new DecelerateInterpolator());	  animation.addUpdateListener(xAnimation);	  animation.addListener(xAnimation);	  animation.setDuration(400);	  animation.start();	}
Method Name:start xanimation
API seq: stopAll ValueAnimator.ofFloat XAnimation DecelerateInterpolator.new animation.setInterpolator animation.addUpdateListener animation.addListener animation.setDuration animation.start
Tokens: add all start listener update float animation duration xanimation stop 400 decelerate interpolator from value animator

ID : 53
Received Java Code:public void startYAnimation(float yFrom,float yTo){	  stopAll();	  animation=ValueAnimator.ofFloat(yFrom,yTo);	  YAnimation yAnimation=new YAnimation();	  animation.setInterpolator(new DecelerateInterpolator());	  animation.addUpdateListener(yAnimation);	  animation.addListener(yAnimation);	  animation.setDuration(400);	  animation.start();	}
Method Name:start yanimation
API seq: stopAll ValueAnimator.ofFloat YAnimation DecelerateInterpolator.new animation.setInterpolator animation.addUpdateListener animation.addListener animation.setDuration animation.start
Tokens: add all start listener update yanimation float animation duration stop 400 decelerate interpolator from value animator

ID : 54
Received Java Code:public void startZoomAnimation(float centerX,float centerY,float zoomFrom,float zoomTo){	  stopAll();	  animation=ValueAnimator.ofFloat(zoomFrom,zoomTo);	  animation.setInterpolator(new DecelerateInterpolator());	  ZoomAnimation zoomAnim=new ZoomAnimation(centerX,centerY);	  animation.addUpdateListener(zoomAnim);	  animation.addListener(zoomAnim);	  animation.setDuration(400);	  animation.start();	}
Method Name:start zoom animation
API seq: stopAll ValueAnimator.ofFloat DecelerateInterpolator.new animation.setInterpolator ZoomAnimation animation.addUpdateListener animation.addListener animation.setDuration animation.start
Tokens: add all center start listener update zoom float animation duration stop 400 decelerate interpolator from anim value animator

ID : 55
Received Java Code:public void startFlingAnimation(int startX,int startY,int velocityX,int velocityY,int minX,int maxX,int minY,int maxY){	  stopAll();	  flinging=true;	  scroller.fling(startX,startY,velocityX,velocityY,minX,maxX,minY,maxY);	}
Method Name:start fling animation
API seq: stopAll scroller.fling
Tokens: all flinging min stop max true start velocity fling scroller

ID : 56
Received Java Code:public void startPageFlingAnimation(float targetOffset){	  if (pdfView.isSwipeVertical()) {	    startYAnimation(pdfView.getCurrentYOffset(),targetOffset);	  }	 else {	    startXAnimation(pdfView.getCurrentXOffset(),targetOffset);	  }	  pageFlinging=true;	}
Method Name:start page fling animation
API seq: pdfView.isSwipeVertical pdfView.getCurrentYOffset startYAnimation pdfView.getCurrentXOffset startXAnimation
Tokens: flinging offset yoffset start xoffset vertical yanimation target view current pdf xanimation swipe get true page

ID : 57
Received Java Code:void computeFling(){	  if (scroller.computeScrollOffset()) {	    pdfView.moveTo(scroller.getCurrX(),scroller.getCurrY());	    pdfView.loadPageByOffset();	  }	 else   if (flinging) {	    flinging=false;	    pdfView.loadPages();	    hideHandle();	    pdfView.performPageSnap();	  }	}
Method Name:compute fling
API seq: scroller.computeScrollOffset scroller.getCurrX scroller.getCurrY pdfView.moveTo pdfView.loadPageByOffset pdfView.loadPages hideHandle pdfView.performPageSnap
Tokens: flinging move offset false perform scroll handle compute view hide pages pdf load get page curr scroller snap

ID : 58
Received Java Code:public void stopAll(){	  if (animation != null) {	    animation.cancel();	    animation=null;	  }	  stopFling();	}
Method Name:stop all
API seq: animation.cancel stopFling
Tokens: cancel null stop fling animation

ID : 59
Received Java Code:public void stopFling(){	  flinging=false;	  scroller.forceFinished(true);	}
Method Name:stop fling
API seq: scroller.forceFinished
Tokens: flinging false true force finished scroller

ID : 60
Received Java Code:public boolean isFlinging(){	  return flinging || pageFlinging;	}
Method Name:is flinging
API seq:
Tokens: flinging page

ID : 61
Received Java Code:private void hideHandle(){	  if (pdfView.getScrollHandle() != null) {	    pdfView.getScrollHandle().hideDelayed();	  }	}
Method Name:hide handle
API seq: pdfView.getScrollHandle pdfView.getScrollHandle pdfView.hideDelayed
Tokens: view hide pdf null get scroll handle delayed

ID : 62
Received Java Code:PagesLoader(PDFView pdfView){	  this.pdfView=pdfView;	  this.preloadOffset=Util.getDP(pdfView.getContext(),PRELOAD_OFFSET);	}
Method Name:pages loader
API seq: PDFView.getContext Util.getDP
Tokens: view pdf offset util get context dp preload

ID : 63
Received Java Code:private void getPageColsRows(GridSize grid,int pageIndex){	  SizeF size=pdfView.pdfFile.getPageSize(pageIndex);	  float ratioX=1f / size.getWidth();	  float ratioY=1f / size.getHeight();	  final float partHeight=(Constants.PART_SIZE * ratioY) / pdfView.getZoom();	  final float partWidth=(Constants.PART_SIZE * ratioX) / pdfView.getZoom();	  grid.rows=MathUtils.ceil(1f / partHeight);	  grid.cols=MathUtils.ceil(1f / partWidth);	}
Method Name:get page cols rows
API seq: pdfView.pdfFile.getPageSize SizeF.getWidth SizeF.getHeight pdfView.getZoom pdfView.getZoom MathUtils.ceil MathUtils.ceil
Tokens: part index zoom ceil float rows view pdf file size 1f grid utils get width constants page math cols height ratio

ID : 64
Received Java Code:private Holder getPageAndCoordsByOffset(Holder holder,GridSize grid,float localXOffset,float localYOffset,boolean endOffset){	  float fixedXOffset=-MathUtils.max(localXOffset,0);	  float fixedYOffset=-MathUtils.max(localYOffset,0);	  float offset=pdfView.isSwipeVertical() ? fixedYOffset : fixedXOffset;	  holder.page=pdfView.pdfFile.getPageAtOffset(offset,pdfView.getZoom());	  getPageColsRows(grid,holder.page);	  SizeF scaledPageSize=pdfView.pdfFile.getScaledPageSize(holder.page,pdfView.getZoom());	  float rowHeight=scaledPageSize.getHeight() / grid.rows;	  float colWidth=scaledPageSize.getWidth() / grid.cols;	  float row, col;	  float secondaryOffset=pdfView.pdfFile.getSecondaryPageOffset(holder.page,pdfView.getZoom());	  if (pdfView.isSwipeVertical()) {	    row=Math.abs(fixedYOffset - pdfView.pdfFile.getPageOffset(holder.page,pdfView.getZoom())) / rowHeight;	    col=MathUtils.min(fixedXOffset - secondaryOffset,0) / colWidth;	  }	 else {	    col=Math.abs(fixedXOffset - pdfView.pdfFile.getPageOffset(holder.page,pdfView.getZoom())) / colWidth;	    row=MathUtils.min(fixedYOffset - secondaryOffset,0) / rowHeight;	  }	  if (endOffset) {	    holder.row=MathUtils.ceil(row);	    holder.col=MathUtils.ceil(col);	  }	 else {	    holder.row=MathUtils.floor(row);	    holder.col=MathUtils.floor(col);	  }	  return holder;	}
Method Name:get page and coords by offset
API seq: MathUtils.max MathUtils.max pdfView.isSwipeVertical pdfView.getZoom pdfView.pdfFile.getPageAtOffset getPageColsRows pdfView.getZoom pdfView.pdfFile.getScaledPageSize SizeF.getHeight SizeF.getWidth pdfView.getZoom pdfView.pdfFile.getSecondaryPageOffset pdfView.isSwipeVertical pdfView.getZoom pdfView.pdfFile.getPageOffset Math.abs MathUtils.min pdfView.getZoom pdfView.pdfFile.getPageOffset Math.abs MathUtils.min MathUtils.ceil MathUtils.ceil MathUtils.floor MathUtils.floor
Tokens: col scaled yoffset vertical float local view file min utils get end row floor cols height offset max xoffset zoom holder ceil rows secondary pdf abs size swipe grid width fixed page math

ID : 65
Received Java Code:private void calculatePartSize(GridSize grid){	  pageRelativePartWidth=1f / (float)grid.cols;	  pageRelativePartHeight=1f / (float)grid.rows;	  partRenderWidth=Constants.PART_SIZE / pageRelativePartWidth;	  partRenderHeight=Constants.PART_SIZE / pageRelativePartHeight;	}
Method Name:calculate part size
API seq:
Tokens: part float rows size 1f grid width page constants cols render relative height

ID : 66
Received Java Code:private void loadVisible(){	  int parts=0;	  float scaledPreloadOffset=preloadOffset * pdfView.getZoom();	  float firstXOffset=-xOffset + scaledPreloadOffset;	  float lastXOffset=-xOffset - pdfView.getWidth() - scaledPreloadOffset;	  float firstYOffset=-yOffset + scaledPreloadOffset;	  float lastYOffset=-yOffset - pdfView.getHeight() - scaledPreloadOffset;	  getPageAndCoordsByOffset(firstHolder,firstGrid,firstXOffset,firstYOffset,false);	  getPageAndCoordsByOffset(lastHolder,lastGrid,lastXOffset,lastYOffset,true);	  for (int i=firstHolder.page; i <= lastHolder.page; i++) {	    loadThumbnail(i);	  }	  int pagesCount=lastHolder.page - firstHolder.page + 1;	  for (int page=firstHolder.page; page <= lastHolder.page && parts < CACHE_SIZE; page++) {	    if (page == firstHolder.page && pagesCount > 1) {	      parts+=loadPageEnd(firstHolder,firstGrid,CACHE_SIZE - parts);	    }	 else     if (page == lastHolder.page && pagesCount > 1) {	      parts+=loadPageStart(lastHolder,lastGrid,CACHE_SIZE - parts);	    }	 else     if (pagesCount == 1) {	      parts+=loadPageCenter(firstHolder,lastHolder,firstGrid,CACHE_SIZE - parts);	    }	 else {	      getPageColsRows(middleGrid,page);	      parts+=loadWholePage(page,middleGrid,CACHE_SIZE - parts);	    }	  }	}
Method Name:load visible
API seq: pdfView.getZoom pdfView.getWidth pdfView.getHeight getPageAndCoordsByOffset getPageAndCoordsByOffset loadThumbnail loadPageEnd loadPageStart loadPageCenter getPageColsRows loadWholePage
Tokens: scaled yoffset whole float preload view pages load get end cols coords height thumbnail cache middle last offset center xoffset start false count zoom holder rows pdf size grid width parts true page first

ID : 67
Received Java Code:private int loadWholePage(int page,GridSize grid,int nbOfPartsLoadable){	  calculatePartSize(grid);	  return loadPage(page,0,grid.rows - 1,0,grid.cols - 1,nbOfPartsLoadable);	}
Method Name:load whole page
API seq: calculatePartSize loadPage
Tokens: size load nb grid part loadable parts calculate page rows cols

ID : 68
Received Java Code:private int loadPageCenter(Holder firstHolder,Holder lastHolder,GridSize grid,int nbOfPartsLoadable){	  calculatePartSize(grid);	  return loadPage(firstHolder.page,firstHolder.row,lastHolder.row,firstHolder.col,lastHolder.col,nbOfPartsLoadable);	}
Method Name:load page center
API seq: calculatePartSize loadPage
Tokens: col last part loadable holder size load nb grid parts calculate page row first

ID : 69
Received Java Code:private int loadPageEnd(Holder holder,GridSize grid,int nbOfPartsLoadable){	  calculatePartSize(grid);	  if (pdfView.isSwipeVertical()) {	    int firstRow=holder.row;	    return loadPage(holder.page,firstRow,grid.rows - 1,0,grid.cols - 1,nbOfPartsLoadable);	  }	 else {	    int firstCol=holder.col;	    return loadPage(holder.page,0,grid.rows - 1,firstCol,grid.cols - 1,nbOfPartsLoadable);	  }	}
Method Name:load page end
API seq: calculatePartSize pdfView.isSwipeVertical loadPage loadPage
Tokens: col part loadable holder vertical rows view pdf size load nb swipe grid parts calculate page row cols first

ID : 70
Received Java Code:private int loadPageStart(Holder holder,GridSize grid,int nbOfPartsLoadable){	  calculatePartSize(grid);	  if (pdfView.isSwipeVertical()) {	    int lastRow=holder.row;	    return loadPage(holder.page,0,lastRow,0,grid.cols - 1,nbOfPartsLoadable);	  }	 else {	    int lastCol=holder.col;	    return loadPage(holder.page,0,grid.rows - 1,0,lastCol,nbOfPartsLoadable);	  }	}
Method Name:load page start
API seq: calculatePartSize pdfView.isSwipeVertical loadPage loadPage
Tokens: col last part loadable holder vertical rows view pdf size load nb swipe grid parts calculate page row cols

ID : 71
Received Java Code:private int loadPage(int page,int firstRow,int lastRow,int firstCol,int lastCol,int nbOfPartsLoadable){	  int loaded=0;	  for (int row=firstRow; row <= lastRow; row++) {	    for (int col=firstCol; col <= lastCol; col++) {	      if (loadCell(page,row,col,pageRelativePartWidth,pageRelativePartHeight)) {	        loaded++;	      }	      if (loaded >= nbOfPartsLoadable) {	        return loaded;	      }	    }	  }	  return loaded;	}
Method Name:load page
API seq: loadCell
Tokens: col last part loadable cell loaded load nb width parts page row first relative height

ID : 72
Received Java Code:private boolean loadCell(int page,int row,int col,float pageRelativePartWidth,float pageRelativePartHeight){	  float relX=pageRelativePartWidth * col;	  float relY=pageRelativePartHeight * row;	  float relWidth=pageRelativePartWidth;	  float relHeight=pageRelativePartHeight;	  float renderWidth=partRenderWidth;	  float renderHeight=partRenderHeight;	  if (relX + relWidth > 1) {	    relWidth=1 - relX;	  }	  if (relY + relHeight > 1) {	    relHeight=1 - relY;	  }	  renderWidth*=relWidth;	  renderHeight*=relHeight;	  RectF pageRelativeBounds=new RectF(relX,relY,relX + relWidth,relY + relHeight);	  if (renderWidth > 0 && renderHeight > 0) {	    if (!pdfView.cacheManager.upPartIfContained(page,pageRelativeBounds,cacheOrder)) {	      pdfView.renderingHandler.addRenderingTask(page,renderWidth,renderHeight,pageRelativeBounds,false,cacheOrder,pdfView.isBestQuality(),pdfView.isAnnotationRendering());	    }	    cacheOrder++;	    return true;	  }	  return false;	}
Method Name:load cell
API seq: RectF pdfView.cacheManager.upPartIfContained pdfView.isBestQuality pdfView.isAnnotationRendering pdfView.renderingHandler.addRenderingTask
Tokens: col handler part best float rect view rel row up render height order add annotation cache manager false rendering quality contained task pdf width bounds true page relative

ID : 73
Received Java Code:private void loadThumbnail(int page){	  SizeF pageSize=pdfView.pdfFile.getPageSize(page);	  float thumbnailWidth=pageSize.getWidth() * Constants.THUMBNAIL_RATIO;	  float thumbnailHeight=pageSize.getHeight() * Constants.THUMBNAIL_RATIO;	  if (!pdfView.cacheManager.containsThumbnail(page,thumbnailRect)) {	    pdfView.renderingHandler.addRenderingTask(page,thumbnailWidth,thumbnailHeight,thumbnailRect,true,0,pdfView.isBestQuality(),pdfView.isAnnotationRendering());	  }	}
Method Name:load thumbnail
API seq: pdfView.pdfFile.getPageSize SizeF.getWidth SizeF.getHeight pdfView.cacheManager.containsThumbnail pdfView.isBestQuality pdfView.isAnnotationRendering pdfView.renderingHandler.addRenderingTask
Tokens: add annotation handler thumbnail cache manager rendering best float quality rect contains view task pdf file size get width true page constants ratio height

ID : 74
Received Java Code:void loadPages(){	  cacheOrder=1;	  xOffset=-MathUtils.max(pdfView.getCurrentXOffset(),0);	  yOffset=-MathUtils.max(pdfView.getCurrentYOffset(),0);	  loadVisible();	}
Method Name:load pages
API seq: pdfView.getCurrentXOffset MathUtils.max pdfView.getCurrentYOffset MathUtils.max loadVisible
Tokens: cache visible offset max yoffset xoffset view current pdf load utils get math order

ID : 75
Received Java Code:PdfFile(PdfiumCore pdfiumCore,PdfDocument pdfDocument,FitPolicy pageFitPolicy,Size viewSize,int[] originalUserPages,boolean isVertical,int spacing,boolean autoSpacing){	  this.pdfiumCore=pdfiumCore;	  this.pdfDocument=pdfDocument;	  this.pageFitPolicy=pageFitPolicy;	  this.originalUserPages=originalUserPages;	  this.isVertical=isVertical;	  this.spacingPx=spacing;	  this.autoSpacing=autoSpacing;	  setup(viewSize);	}
Method Name:pdf file
API seq: setup
Tokens: pdfium auto original document px vertical fit core view spacing pdf pages size setup page user policy

ID : 76
Received Java Code:private void setup(Size viewSize){	  if (originalUserPages != null) {	    pagesCount=originalUserPages.length;	  }	 else {	    pagesCount=pdfiumCore.getPageCount(pdfDocument);	  }	  for (int i=0; i < pagesCount; i++) {	    Size pageSize=pdfiumCore.getPageSize(pdfDocument,documentPage(i));	    if (pageSize.getWidth() > originalMaxWidthPageSize.getWidth()) {	      originalMaxWidthPageSize=pageSize;	    }	    if (pageSize.getHeight() > originalMaxHeightPageSize.getHeight()) {	      originalMaxHeightPageSize=pageSize;	    }	    originalPageSizes.add(pageSize);	  }	  recalculatePageSizes(viewSize);	}
Method Name:setup
API seq: pdfiumCore.getPageCount documentPage pdfiumCore.getPageSize Size.getWidth originalMaxWidthPageSize.getWidth Size.getHeight originalMaxHeightPageSize.getHeight originalPageSizes.add recalculatePageSizes
Tokens: pdfium add original max document count length core view pdf pages size sizes null get width page recalculate user height

ID : 77
Received Java Code:public void recalculatePageSizes(Size viewSize){	  pageSizes.clear();	  PageSizeCalculator calculator=new PageSizeCalculator(pageFitPolicy,originalMaxWidthPageSize,originalMaxHeightPageSize,viewSize);	  maxWidthPageSize=calculator.getOptimalMaxWidthPageSize();	  maxHeightPageSize=calculator.getOptimalMaxHeightPageSize();	  for (  Size size : originalPageSizes) {	    pageSizes.add(calculator.calculate(size));	  }	  if (autoSpacing) {	    prepareAutoSpacing(viewSize);	  }	  prepareDocLen();	  preparePagesOffset();	}
Method Name:recalculate page sizes
API seq: pageSizes.clear PageSizeCalculator PageSizeCalculator.getOptimalMaxWidthPageSize PageSizeCalculator.getOptimalMaxHeightPageSize PageSizeCalculator.calculate pageSizes.add prepareAutoSpacing prepareDocLen preparePagesOffset
Tokens: add calculator prepare auto original optimal offset max clear fit view spacing pages size sizes len get width doc page calculate policy height

ID : 78
Received Java Code:public int getPagesCount(){	  return pagesCount;	}
Method Name:get pages count
API seq:
Tokens: pages count

ID : 79
Received Java Code:public SizeF getPageSize(int pageIndex){	  int docPage=documentPage(pageIndex);	  if (docPage < 0) {	    return new SizeF(0,0);	  }	  return pageSizes.get(pageIndex);	}
Method Name:get page size
API seq: documentPage SizeF pageSizes.get
Tokens: sizes size document get index doc page

ID : 80
Received Java Code:public SizeF getScaledPageSize(int pageIndex,float zoom){	  SizeF size=getPageSize(pageIndex);	  return new SizeF(size.getWidth() * zoom,size.getHeight() * zoom);	}
Method Name:get scaled page size
API seq: getPageSize SizeF.getWidth SizeF.getHeight SizeF
Tokens: size get width index zoom page height

ID : 81
Received Java Code:public SizeF getMaxPageSize(){	  return isVertical ? maxWidthPageSize : maxHeightPageSize;	}
Method Name:get max page size
API seq:
Tokens: size max width vertical page height

ID : 82
Received Java Code:public float getMaxPageWidth(){	  return getMaxPageSize().getWidth();	}
Method Name:get max page width
API seq: getMaxPageSize getMaxPageSize.getWidth
Tokens: size max get width page

ID : 83
Received Java Code:public float getMaxPageHeight(){	  return getMaxPageSize().getHeight();	}
Method Name:get max page height
API seq: getMaxPageSize getMaxPageSize.getHeight
Tokens: size max get page height

ID : 84
Received Java Code:private void prepareAutoSpacing(Size viewSize){	  pageSpacing.clear();	  for (int i=0; i < getPagesCount(); i++) {	    SizeF pageSize=pageSizes.get(i);	    float spacing=Math.max(0,isVertical ? viewSize.getHeight() - pageSize.getHeight() : viewSize.getWidth() - pageSize.getWidth());	    if (i < getPagesCount() - 1) {	      spacing+=spacingPx;	    }	    pageSpacing.add(spacing);	  }	}
Method Name:prepare auto spacing
API seq: pageSpacing.clear getPagesCount pageSizes.get Size.getHeight SizeF.getHeight Size.getWidth SizeF.getWidth Math.max getPagesCount pageSpacing.add
Tokens: add max count px clear vertical float view pages spacing size sizes get width page math height

ID : 85
Received Java Code:private void prepareDocLen(){	  float length=0;	  for (int i=0; i < getPagesCount(); i++) {	    SizeF pageSize=pageSizes.get(i);	    length+=isVertical ? pageSize.getHeight() : pageSize.getWidth();	    if (autoSpacing) {	      length+=pageSpacing.get(i);	    }	 else     if (i < getPagesCount() - 1) {	      length+=spacingPx;	    }	  }	  documentLength=length;	}
Method Name:prepare doc len
API seq: getPagesCount pageSizes.get SizeF.getHeight SizeF.getWidth pageSpacing.get getPagesCount
Tokens: auto document count px length vertical float pages spacing sizes size get width page height

ID : 86
Received Java Code:private void preparePagesOffset(){	  pageOffsets.clear();	  float offset=0;	  for (int i=0; i < getPagesCount(); i++) {	    SizeF pageSize=pageSizes.get(i);	    float size=isVertical ? pageSize.getHeight() : pageSize.getWidth();	    if (autoSpacing) {	      offset+=pageSpacing.get(i) / 2f;	      if (i == 0) {	        offset-=spacingPx / 2f;	      }	 else       if (i == getPagesCount() - 1) {	        offset+=spacingPx / 2f;	      }	      pageOffsets.add(offset);	      offset+=size + pageSpacing.get(i) / 2f;	    }	 else {	      pageOffsets.add(offset);	      offset+=size + spacingPx;	    }	  }	}
Method Name:prepare pages offset
API seq: pageOffsets.clear getPagesCount pageSizes.get SizeF.getHeight SizeF.getWidth pageSpacing.get getPagesCount pageOffsets.add pageSpacing.get pageOffsets.add
Tokens: add auto offset count px clear vertical float pages spacing sizes size 2f offsets get width page height

ID : 87
Received Java Code:public float getDocLen(float zoom){	  return documentLength * zoom;	}
Method Name:get doc len
API seq:
Tokens: document length zoom

ID : 88
Received Java Code:public float getPageLength(int pageIndex,float zoom){	  SizeF size=getPageSize(pageIndex);	  return (isVertical ? size.getHeight() : size.getWidth()) * zoom;	}
Method Name:get page length
API seq: getPageSize SizeF.getHeight SizeF.getWidth return
Tokens: size get width index vertical zoom page height

ID : 89
Received Java Code:public float getPageSpacing(int pageIndex,float zoom){	  float spacing=autoSpacing ? pageSpacing.get(pageIndex) : spacingPx;	  return spacing * zoom;	}
Method Name:get page spacing
API seq: pageSpacing.get
Tokens: auto spacing get px index zoom page float

ID : 90
Received Java Code:public float getPageOffset(int pageIndex,float zoom){	  int docPage=documentPage(pageIndex);	  if (docPage < 0) {	    return 0;	  }	  return pageOffsets.get(pageIndex) * zoom;	}
Method Name:get page offset
API seq: documentPage pageOffsets.get
Tokens: offsets document get index doc zoom page

ID : 91
Received Java Code:public float getSecondaryPageOffset(int pageIndex,float zoom){	  SizeF pageSize=getPageSize(pageIndex);	  if (isVertical) {	    float maxWidth=getMaxPageWidth();	    return zoom * (maxWidth - pageSize.getWidth()) / 2;	  }	 else {	    float maxHeight=getMaxPageHeight();	    return zoom * (maxHeight - pageSize.getHeight()) / 2;	  }	}
Method Name:get secondary page offset
API seq: getPageSize getMaxPageWidth SizeF.getWidth getMaxPageHeight SizeF.getHeight
Tokens: size max get width index zoom vertical page float height

ID : 92
Received Java Code:public int getPageAtOffset(float offset,float zoom){	  int currentPage=0;	  for (int i=0; i < getPagesCount(); i++) {	    float off=pageOffsets.get(i) * zoom - getPageSpacing(i,zoom) / 2f;	    if (off >= offset) {	      break;	    }	    currentPage++;	  }	  return --currentPage >= 0 ? currentPage : 0;	}
Method Name:get page at offset
API seq: getPagesCount pageOffsets.get getPageSpacing
Tokens: offset break count zoom float off current pages spacing 2f offsets get page

ID : 93
Received Java Code:public boolean openPage(int pageIndex) throws PageRenderingException {	  int docPage=documentPage(pageIndex);	  if (docPage < 0) {	    return false;	  }	synchronized (lock) {	    if (openedPages.indexOfKey(docPage) < 0) {	      try {	        pdfiumCore.openPage(pdfDocument,docPage);	        openedPages.put(docPage,true);	        return true;	      }	 catch (      Exception e) {	        openedPages.put(docPage,false);	        throw new PageRenderingException(pageIndex,e);	      }	    }	    return false;	  }	}
Method Name:open page
API seq: documentPage synchronized openedPages.indexOfKey pdfiumCore.openPage openedPages.put openedPages.put PageRenderingException
Tokens: pdfium document false index opened rendering put core pages pdf throw true doc lock page open key

ID : 94
Received Java Code:public boolean pageHasError(int pageIndex){	  int docPage=documentPage(pageIndex);	  return !openedPages.get(docPage,false);	}
Method Name:page has error
API seq: documentPage openedPages.get
Tokens: pages document get false index doc opened page

ID : 95
Received Java Code:public void renderPageBitmap(Bitmap bitmap,int pageIndex,Rect bounds,boolean annotationRendering){	  int docPage=documentPage(pageIndex);	  pdfiumCore.renderPageBitmap(pdfDocument,bitmap,docPage,bounds.left,bounds.top,bounds.width(),bounds.height(),annotationRendering);	}
Method Name:render page bitmap
API seq: documentPage Rect.width Rect.height pdfiumCore.renderPageBitmap
Tokens: annotation pdfium document index rendering core pdf top left bitmap bounds width doc page render height

ID : 96
Received Java Code:public PdfDocument.Meta getMetaData(){	  if (pdfDocument == null) {	    return null;	  }	  return pdfiumCore.getDocumentMeta(pdfDocument);	}
Method Name:get meta data
API seq: pdfiumCore.getDocumentMeta
Tokens: pdfium core pdf null meta document get

ID : 97
Received Java Code:public List<PdfDocument.Bookmark> getBookmarks(){	  if (pdfDocument == null) {	    return new ArrayList<>();	  }	  return pdfiumCore.getTableOfContents(pdfDocument);	}
Method Name:get bookmarks
API seq: pdfiumCore.getTableOfContents
Tokens: pdfium core pdf null contents document get table

ID : 98
Received Java Code:public List<PdfDocument.Link> getPageLinks(int pageIndex){	  int docPage=documentPage(pageIndex);	  return pdfiumCore.getPageLinks(pdfDocument,docPage);	}
Method Name:get page links
API seq: documentPage pdfiumCore.getPageLinks
Tokens: pdfium core pdf document get index doc links page

ID : 99
Received Java Code:public RectF mapRectToDevice(int pageIndex,int startX,int startY,int sizeX,int sizeY,RectF rect){	  int docPage=documentPage(pageIndex);	  return pdfiumCore.mapRectToDevice(pdfDocument,docPage,startX,startY,sizeX,sizeY,0,rect);	}
Method Name:map rect to device
API seq: documentPage pdfiumCore.mapRectToDevice
Tokens: pdfium core rect pdf size document start index doc page map device

ID : 100
Received Java Code:public void dispose(){	  if (pdfiumCore != null && pdfDocument != null) {	    pdfiumCore.closeDocument(pdfDocument);	  }	  pdfDocument=null;	  originalUserPages=null;	}
Method Name:dispose
API seq: pdfiumCore.closeDocument
Tokens: pdfium core pdf original pages null document user close

ID : 101
Received Java Code:public int determineValidPageNumberFrom(int userPage){	  if (userPage <= 0) {	    return 0;	  }	  if (originalUserPages != null) {	    if (userPage >= originalUserPages.length) {	      return originalUserPages.length - 1;	    }	  }	 else {	    if (userPage >= getPagesCount()) {	      return getPagesCount() - 1;	    }	  }	  return userPage;	}
Method Name:determine valid page number from
API seq: getPagesCount getPagesCount
Tokens: pages original null get count length page user

ID : 102
Received Java Code:public int documentPage(int userPage){	  int documentPage=userPage;	  if (originalUserPages != null) {	    if (userPage < 0 || userPage >= originalUserPages.length) {	      return -1;	    }	 else {	      documentPage=originalUserPages[userPage];	    }	  }	  if (documentPage < 0 || userPage >= getPagesCount()) {	    return -1;	  }	  return documentPage;	}
Method Name:document page
API seq: getPagesCount
Tokens: pages original null get document count length page user

ID : 103
Received Java Code:DragPinchManager(PDFView pdfView,AnimationManager animationManager){	  this.pdfView=pdfView;	  this.animationManager=animationManager;	  gestureDetector=new GestureDetector(pdfView.getContext(),this);	  scaleGestureDetector=new ScaleGestureDetector(pdfView.getContext(),this);	  pdfView.setOnTouchListener(this);	}
Method Name:gesture detector
API seq: PDFView.getContext GestureDetector PDFView.getContext ScaleGestureDetector PDFView.setOnTouchListener
Tokens: view pdf manager get context listener scale touch detector animation gesture

ID : 104
Received Java Code:void enable(){	  enabled=true;	}
Method Name:enable
API seq:
Tokens: true enabled

ID : 105
Received Java Code:void disable(){	  enabled=false;	}
Method Name:disable
API seq:
Tokens: false enabled

ID : 106
Received Java Code:@Override public boolean onSingleTapConfirmed(MotionEvent e){	  boolean onTapHandled=pdfView.callbacks.callOnTap(e);	  boolean linkTapped=checkLinkTapped(e.getX(),e.getY());	  if (!onTapHandled && !linkTapped) {	    ScrollHandle ps=pdfView.getScrollHandle();	    if (ps != null && !pdfView.documentFitsView()) {	      if (!ps.shown()) {	        ps.show();	      }	 else {	        ps.hide();	      }	    }	  }	  pdfView.performClick();	  return true;	}
Method Name:on single tap confirmed
API seq: pdfView.callbacks.callOnTap MotionEvent.getX MotionEvent.getY checkLinkTapped pdfView.getScrollHandle pdfView.documentFitsView ScrollHandle.shown ScrollHandle.show ScrollHandle.hide pdfView.performClick
Tokens: tap ps document link scroll show perform callbacks handle check fits click call tapped view hide boolean pdf null shown handled get true

ID : 107
Received Java Code:private boolean checkLinkTapped(float x,float y){	  PdfFile pdfFile=pdfView.pdfFile;	  float mappedX=-pdfView.getCurrentXOffset() + x;	  float mappedY=-pdfView.getCurrentYOffset() + y;	  int page=pdfFile.getPageAtOffset(pdfView.isSwipeVertical() ? mappedY : mappedX,pdfView.getZoom());	  SizeF pageSize=pdfFile.getScaledPageSize(page,pdfView.getZoom());	  int pageX, pageY;	  if (pdfView.isSwipeVertical()) {	    pageX=(int)pdfFile.getSecondaryPageOffset(page,pdfView.getZoom());	    pageY=(int)pdfFile.getPageOffset(page,pdfView.getZoom());	  }	 else {	    pageY=(int)pdfFile.getSecondaryPageOffset(page,pdfView.getZoom());	    pageX=(int)pdfFile.getPageOffset(page,pdfView.getZoom());	  }	  for (  PdfDocument.Link link : pdfFile.getPageLinks(page)) {	    RectF mapped=pdfFile.mapRectToDevice(page,pageX,pageY,(int)pageSize.getWidth(),(int)pageSize.getHeight(),link.getBounds());	    mapped.sort();	    if (mapped.contains(mappedX,mappedY)) {	      pdfView.callbacks.callLinkHandler(new LinkTapEvent(x,y,mappedX,mappedY,mapped,link));	      return true;	    }	  }	  return false;	}
Method Name:check link tapped
API seq: pdfView.getCurrentXOffset pdfView.getCurrentYOffset pdfView.isSwipeVertical pdfView.getZoom PdfFile.getPageAtOffset pdfView.getZoom PdfFile.getScaledPageSize pdfView.isSwipeVertical pdfView.getZoom PdfFile.getSecondaryPageOffset pdfView.getZoom PdfFile.getPageOffset pdfView.getZoom PdfFile.getSecondaryPageOffset pdfView.getZoom PdfFile.getPageOffset PdfFile.getPageLinks SizeF.getWidth SizeF.getHeight PdfDocument.Link.getBounds PdfFile.mapRectToDevice RectF.sort RectF.contains LinkTapEvent.new pdfView.callbacks.callLinkHandler
Tokens: handler scaled yoffset document link callbacks vertical float rect view current file get links event map height tap offset false xoffset zoom sort secondary call contains pdf size swipe width bounds mapped true page device

ID : 108
Received Java Code:private void startPageFling(MotionEvent downEvent,MotionEvent ev,float velocityX,float velocityY){	  if (!checkDoPageFling(velocityX,velocityY)) {	    return;	  }	  int direction;	  if (pdfView.isSwipeVertical()) {	    direction=velocityY > 0 ? -1 : 1;	  }	 else {	    direction=velocityX > 0 ? -1 : 1;	  }	  float delta=pdfView.isSwipeVertical() ? ev.getY() - downEvent.getY() : ev.getX() - downEvent.getX();	  float offsetX=pdfView.getCurrentXOffset() - delta * pdfView.getZoom();	  float offsetY=pdfView.getCurrentYOffset() - delta * pdfView.getZoom();	  int startingPage=pdfView.findFocusPage(offsetX,offsetY);	  int targetPage=Math.max(0,Math.min(pdfView.getPageCount() - 1,startingPage + direction));	  SnapEdge edge=pdfView.findSnapEdge(targetPage);	  float offset=pdfView.snapOffsetForPage(targetPage,edge);	  animationManager.startPageFlingAnimation(-offset);	}
Method Name:start page fling
API seq: checkDoPageFling pdfView.isSwipeVertical pdfView.isSwipeVertical MotionEvent.getY MotionEvent.getY MotionEvent.getX MotionEvent.getX pdfView.getCurrentXOffset pdfView.getZoom pdfView.getCurrentYOffset pdfView.getZoom pdfView.findFocusPage pdfView.getPageCount Math.min Math.max pdfView.findSnapEdge pdfView.snapOffsetForPage animationManager.startPageFlingAnimation
Tokens: yoffset delta focus vertical do float fling down edge view current min find get event direction manager offset max count xoffset start zoom velocity check animation target ev pdf swipe page math starting snap

ID : 109
Received Java Code:@Override public boolean onDoubleTap(MotionEvent e){	  if (!pdfView.isDoubletapEnabled()) {	    return false;	  }	  if (pdfView.getZoom() < pdfView.getMidZoom()) {	    pdfView.zoomWithAnimation(e.getX(),e.getY(),pdfView.getMidZoom());	  }	 else   if (pdfView.getZoom() < pdfView.getMaxZoom()) {	    pdfView.zoomWithAnimation(e.getX(),e.getY(),pdfView.getMaxZoom());	  }	 else {	    pdfView.resetZoomWithAnimation();	  }	  return true;	}
Method Name:on double tap
API seq: pdfView.isDoubletapEnabled pdfView.getZoom pdfView.getMidZoom MotionEvent.getX MotionEvent.getY pdfView.getMidZoom pdfView.zoomWithAnimation pdfView.getZoom pdfView.getMaxZoom MotionEvent.getX MotionEvent.getY pdfView.getMaxZoom pdfView.zoomWithAnimation pdfView.resetZoomWithAnimation
Tokens: doubletap view pdf max get false true mid reset zoom enabled animation

ID : 110
Received Java Code:@Override public boolean onDoubleTapEvent(MotionEvent e){	  return false;	}
Method Name:on double tap event
API seq:
Tokens: false

ID : 111
Received Java Code:@Override public boolean onDown(MotionEvent e){	  animationManager.stopFling();	  return true;	}
Method Name:on down
API seq: animationManager.stopFling
Tokens: manager stop true fling animation

ID : 112
Received Java Code:@Override public void onShowPress(MotionEvent e){	}
Method Name:on show press
API seq:
Tokens:

ID : 113
Received Java Code:@Override public boolean onSingleTapUp(MotionEvent e){	  return false;	}
Method Name:on single tap up
API seq:
Tokens: false

ID : 114
Received Java Code:@Override public boolean onScroll(MotionEvent e1,MotionEvent e2,float distanceX,float distanceY){	  scrolling=true;	  if (pdfView.isZooming() || pdfView.isSwipeEnabled()) {	    pdfView.moveRelativeTo(-distanceX,-distanceY);	  }	  if (!scaling || pdfView.doRenderDuringScale()) {	    pdfView.loadPageByOffset();	  }	  return true;	}
Method Name:on scroll
API seq: pdfView.isZooming pdfView.isSwipeEnabled pdfView.moveRelativeTo pdfView.doRenderDuringScale pdfView.loadPageByOffset
Tokens: scaling move offset distance scale do during enabled scrolling view pdf load swipe true page render zooming relative

ID : 115
Received Java Code:private void onScrollEnd(MotionEvent event){	  pdfView.loadPages();	  hideHandle();	  if (!animationManager.isFlinging()) {	    pdfView.performPageSnap();	  }	}
Method Name:on scroll end
API seq: pdfView.loadPages hideHandle animationManager.isFlinging pdfView.performPageSnap
Tokens: view hide flinging pdf pages manager load perform handle page animation snap

ID : 116
Received Java Code:@Override public void onLongPress(MotionEvent e){	  pdfView.callbacks.callOnLongPress(e);	}
Method Name:on long press
API seq: pdfView.callbacks.callOnLongPress
Tokens: call view pdf callbacks press long

ID : 117
Received Java Code:@Override public boolean onFling(MotionEvent e1,MotionEvent e2,float velocityX,float velocityY){	  if (!pdfView.isSwipeEnabled()) {	    return false;	  }	  if (pdfView.doPageFling()) {	    if (pdfView.pageFillsScreen()) {	      onBoundedFling(velocityX,velocityY);	    }	 else {	      startPageFling(e1,e2,velocityX,velocityY);	    }	    return true;	  }	  int xOffset=(int)pdfView.getCurrentXOffset();	  int yOffset=(int)pdfView.getCurrentYOffset();	  float minX, minY;	  PdfFile pdfFile=pdfView.pdfFile;	  if (pdfView.isSwipeVertical()) {	    minX=-(pdfView.toCurrentScale(pdfFile.getMaxPageWidth()) - pdfView.getWidth());	    minY=-(pdfFile.getDocLen(pdfView.getZoom()) - pdfView.getHeight());	  }	 else {	    minX=-(pdfFile.getDocLen(pdfView.getZoom()) - pdfView.getWidth());	    minY=-(pdfView.toCurrentScale(pdfFile.getMaxPageHeight()) - pdfView.getHeight());	  }	  animationManager.startFlingAnimation(xOffset,yOffset,(int)(velocityX),(int)(velocityY),(int)minX,0,(int)minY,0);	  return true;	}
Method Name:on fling
API seq: pdfView.isSwipeEnabled pdfView.doPageFling pdfView.pageFillsScreen onBoundedFling startPageFling pdfView.getCurrentXOffset pdfView.getCurrentYOffset pdfView.isSwipeVertical PdfFile.getMaxPageWidth pdfView.toCurrentScale pdfView.getWidth pdfView.getZoom PdfFile.getDocLen pdfView.getHeight pdfView.getZoom PdfFile.getDocLen pdfView.getWidth PdfFile.getMaxPageHeight pdfView.toCurrentScale pdfView.getHeight animationManager.startFlingAnimation
Tokens: yoffset scale screen vertical do float fling enabled view current file min len get fills height offset manager max start false xoffset zoom velocity e1 bounded e2 animation pdf swipe width true doc page

ID : 118
Received Java Code:private void onBoundedFling(float velocityX,float velocityY){	  int xOffset=(int)pdfView.getCurrentXOffset();	  int yOffset=(int)pdfView.getCurrentYOffset();	  PdfFile pdfFile=pdfView.pdfFile;	  float pageStart=-pdfFile.getPageOffset(pdfView.getCurrentPage(),pdfView.getZoom());	  float pageEnd=pageStart - pdfFile.getPageLength(pdfView.getCurrentPage(),pdfView.getZoom());	  float minX, minY, maxX, maxY;	  if (pdfView.isSwipeVertical()) {	    minX=-(pdfView.toCurrentScale(pdfFile.getMaxPageWidth()) - pdfView.getWidth());	    minY=pageEnd + pdfView.getHeight();	    maxX=0;	    maxY=pageStart;	  }	 else {	    minX=pageEnd + pdfView.getWidth();	    minY=-(pdfView.toCurrentScale(pdfFile.getMaxPageHeight()) - pdfView.getHeight());	    maxX=pageStart;	    maxY=0;	  }	  animationManager.startFlingAnimation(xOffset,yOffset,(int)(velocityX),(int)(velocityY),(int)minX,(int)maxX,(int)minY,(int)maxY);	}
Method Name:on bounded fling
API seq: pdfView.getCurrentXOffset pdfView.getCurrentYOffset pdfView.getCurrentPage pdfView.getZoom PdfFile.getPageOffset pdfView.getCurrentPage pdfView.getZoom PdfFile.getPageLength pdfView.isSwipeVertical PdfFile.getMaxPageWidth pdfView.toCurrentScale pdfView.getWidth pdfView.getHeight pdfView.getWidth PdfFile.getMaxPageHeight pdfView.toCurrentScale pdfView.getHeight animationManager.startFlingAnimation
Tokens: yoffset scale vertical float fling view current file min get end height offset manager max start xoffset length zoom velocity animation pdf swipe width page

ID : 119
Received Java Code:@Override public boolean onScale(ScaleGestureDetector detector){	  float dr=detector.getScaleFactor();	  float wantedZoom=pdfView.getZoom() * dr;	  if (wantedZoom < MINIMUM_ZOOM) {	    dr=MINIMUM_ZOOM / pdfView.getZoom();	  }	 else   if (wantedZoom > MAXIMUM_ZOOM) {	    dr=MAXIMUM_ZOOM / pdfView.getZoom();	  }	  pdfView.zoomCenteredRelativeTo(dr,new PointF(detector.getFocusX(),detector.getFocusY()));	  return true;	}
Method Name:on scale
API seq: ScaleGestureDetector.getScaleFactor pdfView.getZoom pdfView.getZoom pdfView.getZoom ScaleGestureDetector.getFocusX ScaleGestureDetector.getFocusY PointF.new pdfView.zoomCenteredRelativeTo
Tokens: centered focus scale zoom float point dr view pdf wanted get true maximum factor minimum detector relative

ID : 120
Received Java Code:@Override public boolean onScaleBegin(ScaleGestureDetector detector){	  scaling=true;	  return true;	}
Method Name:on scale begin
API seq:
Tokens: scaling true

ID : 121
Received Java Code:@Override public void onScaleEnd(ScaleGestureDetector detector){	  pdfView.loadPages();	  hideHandle();	  scaling=false;	}
Method Name:on scale end
API seq: pdfView.loadPages hideHandle
Tokens: scaling view hide pdf pages load false handle

ID : 122
Received Java Code:@Override public boolean onTouch(View v,MotionEvent event){	  if (!enabled) {	    return false;	  }	  boolean retVal=scaleGestureDetector.onTouchEvent(event);	  retVal=gestureDetector.onTouchEvent(event) || retVal;	  if (event.getAction() == MotionEvent.ACTION_UP) {	    if (scrolling) {	      scrolling=false;	      onScrollEnd(event);	    }	  }	  return retVal;	}
Method Name:on touch
API seq: scaleGestureDetector.onTouchEvent gestureDetector.onTouchEvent onScrollEnd
Tokens: ret val motion false scroll touch scale enabled gesture scrolling boolean get action end up event detector

ID : 123
Received Java Code:private void hideHandle(){	  ScrollHandle scrollHandle=pdfView.getScrollHandle();	  if (scrollHandle != null && scrollHandle.shown()) {	    scrollHandle.hideDelayed();	  }	}
Method Name:hide handle
API seq: pdfView.getScrollHandle ScrollHandle.shown ScrollHandle.hideDelayed
Tokens: view hide pdf null shown get scroll handle delayed

ID : 124
Received Java Code:private boolean checkDoPageFling(float velocityX,float velocityY){	  float absX=Math.abs(velocityX);	  float absY=Math.abs(velocityY);	  return pdfView.isSwipeVertical() ? absY > absX : absX > absY;	}
Method Name:check do page fling
API seq: Math.abs Math.abs pdfView.isSwipeVertical
Tokens: view abs pdf swipe vertical velocity math float

ID : 125
Received Java Code:DecodingAsyncTask(DocumentSource docSource,String password,int[] userPages,PDFView pdfView,PdfiumCore pdfiumCore){	  this.docSource=docSource;	  this.userPages=userPages;	  this.cancelled=false;	  this.pdfView=pdfView;	  this.password=password;	  this.pdfiumCore=pdfiumCore;	}
Method Name:decoding async task
API seq:
Tokens: pdfium core password view pdf pages false cancelled doc source user

ID : 126
Received Java Code:@Override protected Throwable doInBackground(Void... params){	  try {	    PdfDocument pdfDocument=docSource.createDocument(pdfView.getContext(),pdfiumCore,password);	    pdfFile=new PdfFile(pdfiumCore,pdfDocument,pdfView.getPageFitPolicy(),getViewSize(),userPages,pdfView.isSwipeVertical(),pdfView.getSpacingPx(),pdfView.doAutoSpacing());	    return null;	  }	 catch (  Throwable t) {	    return t;	  }	}
Method Name:do in background
API seq: pdfView.getContext docSource.createDocument pdfView.getPageFitPolicy getViewSize pdfView.isSwipeVertical pdfView.getSpacingPx pdfView.doAutoSpacing PdfFile
Tokens: pdfium auto document px vertical do source fit password view spacing file pages get context create policy throwable core pdf null size swipe doc page user

ID : 127
Received Java Code:private Size getViewSize(){	  return new Size(pdfView.getWidth(),pdfView.getHeight());	}
Method Name:get view size
API seq: pdfView.getWidth pdfView.getHeight Size
Tokens: view pdf size get width height

ID : 128
Received Java Code:@Override protected void onPostExecute(Throwable t){	  if (t != null) {	    pdfView.loadError(t);	    return;	  }	  if (!cancelled) {	    pdfView.loadComplete(pdfFile);	  }	}
Method Name:on post execute
API seq: pdfView.loadError pdfView.loadComplete
Tokens: view pdf file null load cancelled complete error

ID : 129
Received Java Code:@Override protected void onCancelled(){	  cancelled=true;	}
Method Name:on cancelled
API seq:
Tokens: true cancelled

ID : 130
Received Java Code:ScrollHandle getScrollHandle(){	  return scrollHandle;	}
Method Name:get scroll handle
API seq:
Tokens: scroll handle

ID : 131
Received Java Code:public PDFView(Context context,AttributeSet set){	  super(context,set);	  renderingHandlerThread=new HandlerThread("PDF renderer");	  if (isInEditMode()) {	    return;	  }	  cacheManager=new CacheManager();	  animationManager=new AnimationManager(this);	  dragPinchManager=new DragPinchManager(this,animationManager);	  pagesLoader=new PagesLoader(this);	  paint=new Paint();	  debugPaint=new Paint();	  debugPaint.setStyle(Style.STROKE);	  pdfiumCore=new PdfiumCore(context);	  setWillNotDraw(false);	}
Method Name:pdfview
API seq: super HandlerThread isInEditMode CacheManager AnimationManager DragPinchManager PagesLoader Paint Paint debugPaint.setStyle PdfiumCore setWillNotDraw
Tokens: pdfium pinch handler cache debug manager edit loader false paint rendering draw thread stroke animation mode super core pages context style drag

ID : 132
Received Java Code:private void load(DocumentSource docSource,String password){	  load(docSource,password,null);	}
Method Name:load
API seq: load
Tokens: password load null doc source

ID : 133
Received Java Code:private void load(DocumentSource docSource,String password,int[] userPages){	  if (!recycled) {	    throw new IllegalStateException("Don't call load on a PDF View without recycling it first.");	  }	  recycled=false;	  decodingAsyncTask=new DecodingAsyncTask(docSource,password,userPages,this,pdfiumCore);	  decodingAsyncTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);	}
Method Name:load
API seq: IllegalStateException DecodingAsyncTask decodingAsyncTask.executeOnExecutor
Tokens: pdfium false pool source thread execute illegal decoding async core password task recycled pages throw executor doc state user

ID : 134
Received Java Code:public void jumpTo(int page,boolean withAnimation){	  if (pdfFile == null) {	    return;	  }	  page=pdfFile.determineValidPageNumberFrom(page);	  float offset=page == 0 ? 0 : -pdfFile.getPageOffset(page,zoom);	  if (swipeVertical) {	    if (withAnimation) {	      animationManager.startYAnimation(currentYOffset,offset);	    }	 else {	      moveTo(currentXOffset,offset);	    }	  }	 else {	    if (withAnimation) {	      animationManager.startXAnimation(currentXOffset,offset);	    }	 else {	      moveTo(offset,currentYOffset);	    }	  }	  showPage(page);	}
Method Name:jump to
API seq: pdfFile.determineValidPageNumberFrom pdfFile.getPageOffset animationManager.startYAnimation moveTo animationManager.startXAnimation moveTo showPage
Tokens: move offset manager determine yoffset start show xoffset vertical zoom yanimation float animation valid number current pdf file xanimation null swipe get from page

ID : 135
Received Java Code:public void jumpTo(int page){	  jumpTo(page,false);	}
Method Name:jump to
API seq: jumpTo
Tokens: false page jump

ID : 136
Received Java Code:void showPage(int pageNb){	  if (recycled) {	    return;	  }	  pageNb=pdfFile.determineValidPageNumberFrom(pageNb);	  currentPage=pageNb;	  loadPages();	  if (scrollHandle != null && !documentFitsView()) {	    scrollHandle.setPageNum(currentPage + 1);	  }	  callbacks.callOnPageChange(currentPage,pdfFile.getPagesCount());	}
Method Name:show page
API seq: pdfFile.determineValidPageNumberFrom loadPages documentFitsView scrollHandle.setPageNum pdfFile.getPagesCount callbacks.callOnPageChange
Tokens: determine document num change count scroll callbacks handle fits valid call number view current pages recycled pdf file nb load null get from page

ID : 137
Received Java Code:public float getPositionOffset(){	  float offset;	  if (swipeVertical) {	    offset=-currentYOffset / (pdfFile.getDocLen(zoom) - getHeight());	  }	 else {	    offset=-currentXOffset / (pdfFile.getDocLen(zoom) - getWidth());	  }	  return MathUtils.limit(offset,0,1);	}
Method Name:get position offset
API seq: pdfFile.getDocLen getHeight pdfFile.getDocLen getWidth MathUtils.limit
Tokens: offset yoffset xoffset vertical zoom float current pdf file len swipe utils get width limit doc math height

ID : 138
Received Java Code:public void setPositionOffset(float progress,boolean moveHandle){	  if (swipeVertical) {	    moveTo(currentXOffset,(-pdfFile.getDocLen(zoom) + getHeight()) * progress,moveHandle);	  }	 else {	    moveTo((-pdfFile.getDocLen(zoom) + getWidth()) * progress,currentYOffset,moveHandle);	  }	  loadPageByOffset();	}
Method Name:set position offset
API seq: pdfFile.getDocLen getHeight pdfFile.getDocLen moveTo pdfFile.getDocLen getWidth pdfFile.getDocLen moveTo loadPageByOffset
Tokens: move offset yoffset xoffset handle vertical zoom current pdf file load len swipe get width doc progress page height

ID : 139
Received Java Code:public void setPositionOffset(float progress){	  setPositionOffset(progress,true);	}
Method Name:set position offset
API seq: setPositionOffset
Tokens: offset true progress position

ID : 140
Received Java Code:public void stopFling(){	  animationManager.stopFling();	}
Method Name:stop fling
API seq: animationManager.stopFling
Tokens: manager stop fling animation

ID : 141
Received Java Code:public int getPageCount(){	  if (pdfFile == null) {	    return 0;	  }	  return pdfFile.getPagesCount();	}
Method Name:get page count
API seq: pdfFile.getPagesCount
Tokens: pages pdf file null get count

ID : 142
Received Java Code:public void setSwipeEnabled(boolean enableSwipe){	  this.enableSwipe=enableSwipe;	}
Method Name:set swipe enabled
API seq:
Tokens: enable swipe

ID : 143
Received Java Code:public void setNightMode(boolean nightMode){	  this.nightMode=nightMode;	  if (nightMode) {	    ColorMatrix colorMatrixInverted=new ColorMatrix(new float[]{-1,0,0,0,255,0,-1,0,0,255,0,0,-1,0,255,0,0,0,1,0});	    ColorMatrixColorFilter filter=new ColorMatrixColorFilter(colorMatrixInverted);	    paint.setColorFilter(filter);	  }	 else {	    paint.setColorFilter(null);	  }	}
Method Name:set night mode
API seq: ColorMatrix ColorMatrixColorFilter paint.setColorFilter paint.setColorFilter
Tokens: filter mode 255 color null night paint matrix float inverted

ID : 144
Received Java Code:void enableDoubletap(boolean enableDoubletap){	  this.doubletapEnabled=enableDoubletap;	}
Method Name:enable doubletap
API seq:
Tokens: doubletap enable enabled

ID : 145
Received Java Code:boolean isDoubletapEnabled(){	  return doubletapEnabled;	}
Method Name:is doubletap enabled
API seq:
Tokens: doubletap enabled

ID : 146
Received Java Code:void onPageError(PageRenderingException ex){	  if (!callbacks.callOnPageError(ex.getPage(),ex.getCause())) {	    Log.e(TAG,"Cannot open page " + ex.getPage(),ex.getCause());	  }	}
Method Name:on page error
API seq: PageRenderingException.getPage PageRenderingException.getCause callbacks.callOnPageError PageRenderingException.getPage PageRenderingException.getCause Log.e
Tokens: call ex log get callbacks cause page tag error

ID : 147
Received Java Code:public void recycle(){	  waitingDocumentConfigurator=null;	  animationManager.stopAll();	  dragPinchManager.disable();	  if (renderingHandler != null) {	    renderingHandler.stop();	    renderingHandler.removeMessages(RenderingHandler.MSG_RENDER_TASK);	  }	  if (decodingAsyncTask != null) {	    decodingAsyncTask.cancel(true);	  }	  cacheManager.recycle();	  if (scrollHandle != null && isScrollHandleInit) {	    scrollHandle.destroyLayout();	  }	  if (pdfFile != null) {	    pdfFile.dispose();	    pdfFile=null;	  }	  renderingHandler=null;	  scrollHandle=null;	  isScrollHandleInit=false;	  currentXOffset=currentYOffset=0;	  zoom=1f;	  recycled=true;	  callbacks=new Callbacks();	  state=State.DEFAULT;	}
Method Name:recycle
API seq: animationManager.stopAll dragPinchManager.disable renderingHandler.stop renderingHandler.removeMessages decodingAsyncTask.cancel cacheManager.recycle scrollHandle.destroyLayout pdfFile.dispose Callbacks
Tokens: cancel msg handler waiting yoffset document callbacks remove current default file recycled 1f recycle state drag render all init pinch cache manager scroll false xoffset destroy handle rendering zoom decoding animation layout async configurator task pdf stop null disable true messages dispose

ID : 148
Received Java Code:public boolean isRecycled(){	  return recycled;	}
Method Name:is recycled
API seq:
Tokens: recycled

ID : 149
Received Java Code:@Override public void computeScroll(){	  super.computeScroll();	  if (isInEditMode()) {	    return;	  }	  animationManager.computeFling();	}
Method Name:compute scroll
API seq: super.computeScroll isInEditMode animationManager.computeFling
Tokens: super compute mode manager edit scroll fling animation

ID : 150
Received Java Code:@Override protected void onDetachedFromWindow(){	  recycle();	  super.onDetachedFromWindow();	}
Method Name:on detached from window
API seq: recycle super.onDetachedFromWindow
Tokens: super detached recycle from window

ID : 151
Received Java Code:@Override protected void onSizeChanged(int w,int h,int oldw,int oldh){	  hasSize=true;	  if (waitingDocumentConfigurator != null) {	    waitingDocumentConfigurator.load();	  }	  if (isInEditMode() || state != State.SHOWN) {	    return;	  }	  animationManager.stopAll();	  pdfFile.recalculatePageSizes(new Size(w,h));	  if (swipeVertical) {	    moveTo(currentXOffset,-pdfFile.getPageOffset(currentPage,zoom));	  }	 else {	    moveTo(-pdfFile.getPageOffset(currentPage,zoom),currentYOffset);	  }	  loadPageByOffset();	}
Method Name:on size changed
API seq: waitingDocumentConfigurator.load isInEditMode animationManager.stopAll Size.new pdfFile.recalculatePageSizes pdfFile.getPageOffset moveTo pdfFile.getPageOffset moveTo loadPageByOffset
Tokens: waiting yoffset document vertical mode current file shown sizes load get state has recalculate all move manager offset edit xoffset zoom animation configurator pdf size stop null swipe true page

ID : 152
Received Java Code:@Override public boolean canScrollHorizontally(int direction){	  if (pdfFile == null) {	    return true;	  }	  if (swipeVertical) {	    if (direction < 0 && currentXOffset < 0) {	      return true;	    }	 else     if (direction > 0 && currentXOffset + toCurrentScale(pdfFile.getMaxPageWidth()) > getWidth()) {	      return true;	    }	  }	 else {	    if (direction < 0 && currentXOffset < 0) {	      return true;	    }	 else     if (direction > 0 && currentXOffset + pdfFile.getDocLen(zoom) > getWidth()) {	      return true;	    }	  }	  return false;	}
Method Name:can scroll horizontally
API seq: pdfFile.getMaxPageWidth toCurrentScale getWidth pdfFile.getDocLen getWidth
Tokens: max false xoffset scale vertical zoom current pdf file null len swipe get width true doc page direction

ID : 153
Received Java Code:@Override public boolean canScrollVertically(int direction){	  if (pdfFile == null) {	    return true;	  }	  if (swipeVertical) {	    if (direction < 0 && currentYOffset < 0) {	      return true;	    }	 else     if (direction > 0 && currentYOffset + pdfFile.getDocLen(zoom) > getHeight()) {	      return true;	    }	  }	 else {	    if (direction < 0 && currentYOffset < 0) {	      return true;	    }	 else     if (direction > 0 && currentYOffset + toCurrentScale(pdfFile.getMaxPageHeight()) > getHeight()) {	      return true;	    }	  }	  return false;	}
Method Name:can scroll vertically
API seq: pdfFile.getDocLen getHeight pdfFile.getMaxPageHeight toCurrentScale getHeight
Tokens: yoffset max false scale vertical zoom current pdf file null len swipe get true doc page height direction

ID : 154
Received Java Code:@Override protected void onDraw(Canvas canvas){	  if (isInEditMode()) {	    return;	  }	  if (enableAntialiasing) {	    canvas.setDrawFilter(antialiasFilter);	  }	  Drawable bg=getBackground();	  if (bg == null) {	    canvas.drawColor(nightMode ? Color.BLACK : Color.WHITE);	  }	 else {	    bg.draw(canvas);	  }	  if (recycled) {	    return;	  }	  if (state != State.SHOWN) {	    return;	  }	  float currentXOffset=this.currentXOffset;	  float currentYOffset=this.currentYOffset;	  canvas.translate(currentXOffset,currentYOffset);	  for (  PagePart part : cacheManager.getThumbnails()) {	    drawPart(canvas,part);	  }	  for (  PagePart part : cacheManager.getPageParts()) {	    drawPart(canvas,part);	    if (callbacks.getOnDrawAll() != null && !onDrawPagesNums.contains(part.getPage())) {	      onDrawPagesNums.add(part.getPage());	    }	  }	  for (  Integer page : onDrawPagesNums) {	    drawWithListener(canvas,page,callbacks.getOnDrawAll());	  }	  onDrawPagesNums.clear();	  drawWithListener(canvas,currentPage,callbacks.getOnDraw());	  canvas.translate(-currentXOffset,-currentYOffset);	}
Method Name:on draw
API seq: isInEditMode Canvas.setDrawFilter getBackground Canvas.drawColor Drawable.draw Canvas.translate cacheManager.getThumbnails drawPart cacheManager.getPageParts drawPart callbacks.getOnDrawAll PagePart.getPage onDrawPagesNums.contains PagePart.getPage onDrawPagesNums.add callbacks.getOnDrawAll drawWithListener onDrawPagesNums.clear callbacks.getOnDraw drawWithListener Canvas.translate
Tokens: color bg yoffset part listener callbacks integer float translate mode current pages recycled shown white antialias enable get state nums add all canvas drawable cache manager edit night black clear xoffset draw antialiasing filter contains null background parts page thumbnails

ID : 155
Received Java Code:private void drawWithListener(Canvas canvas,int page,OnDrawListener listener){	  if (listener != null) {	    float translateX, translateY;	    if (swipeVertical) {	      translateX=0;	      translateY=pdfFile.getPageOffset(page,zoom);	    }	 else {	      translateY=0;	      translateX=pdfFile.getPageOffset(page,zoom);	    }	    canvas.translate(translateX,translateY);	    SizeF size=pdfFile.getPageSize(page);	    listener.onLayerDrawn(canvas,toCurrentScale(size.getWidth()),toCurrentScale(size.getHeight()),page);	    canvas.translate(-translateX,-translateY);	  }	}
Method Name:draw with listener
API seq: pdfFile.getPageOffset pdfFile.getPageOffset Canvas.translate pdfFile.getPageSize SizeF.getWidth toCurrentScale SizeF.getHeight toCurrentScale OnDrawListener.onLayerDrawn Canvas.translate
Tokens: canvas offset listener scale vertical zoom float translate layer current pdf file size null swipe get width page drawn height

ID : 156
Received Java Code:private void drawPart(Canvas canvas,PagePart part){	  RectF pageRelativeBounds=part.getPageRelativeBounds();	  Bitmap renderedBitmap=part.getRenderedBitmap();	  if (renderedBitmap.isRecycled()) {	    return;	  }	  float localTranslationX=0;	  float localTranslationY=0;	  SizeF size=pdfFile.getPageSize(part.getPage());	  if (swipeVertical) {	    localTranslationY=pdfFile.getPageOffset(part.getPage(),zoom);	    float maxWidth=pdfFile.getMaxPageWidth();	    localTranslationX=toCurrentScale(maxWidth - size.getWidth()) / 2;	  }	 else {	    localTranslationX=pdfFile.getPageOffset(part.getPage(),zoom);	    float maxHeight=pdfFile.getMaxPageHeight();	    localTranslationY=toCurrentScale(maxHeight - size.getHeight()) / 2;	  }	  canvas.translate(localTranslationX,localTranslationY);	  Rect srcRect=new Rect(0,0,renderedBitmap.getWidth(),renderedBitmap.getHeight());	  float offsetX=toCurrentScale(pageRelativeBounds.left * size.getWidth());	  float offsetY=toCurrentScale(pageRelativeBounds.top * size.getHeight());	  float width=toCurrentScale(pageRelativeBounds.width() * size.getWidth());	  float height=toCurrentScale(pageRelativeBounds.height() * size.getHeight());	  RectF dstRect=new RectF((int)offsetX,(int)offsetY,(int)(offsetX + width),(int)(offsetY + height));	  float translationX=currentXOffset + localTranslationX;	  float translationY=currentYOffset + localTranslationY;	  if (translationX + dstRect.left >= getWidth() || translationX + dstRect.right <= 0 || translationY + dstRect.top >= getHeight() || translationY + dstRect.bottom <= 0) {	    canvas.translate(-localTranslationX,-localTranslationY);	    return;	  }	  canvas.drawBitmap(renderedBitmap,srcRect,dstRect,paint);	  if (Constants.DEBUG_MODE) {	    debugPaint.setColor(part.getPage() % 2 == 0 ? Color.RED : Color.BLUE);	    canvas.drawRect(dstRect,debugPaint);	  }	  canvas.translate(-localTranslationX,-localTranslationY);	}
Method Name:draw part
API seq: PagePart.getPageRelativeBounds PagePart.getRenderedBitmap Bitmap.isRecycled PagePart.getPage pdfFile.getPageSize PagePart.getPage pdfFile.getPageOffset pdfFile.getMaxPageWidth SizeF.getWidth toCurrentScale PagePart.getPage pdfFile.getPageOffset pdfFile.getMaxPageHeight SizeF.getHeight toCurrentScale Canvas.translate Bitmap.getWidth Bitmap.getHeight Rect SizeF.getWidth toCurrentScale SizeF.getHeight toCurrentScale RectF.width SizeF.getWidth toCurrentScale RectF.height SizeF.getHeight toCurrentScale RectF getWidth getHeight Canvas.translate Canvas.drawBitmap PagePart.getPage debugPaint.setColor Canvas.drawRect Canvas.translate
Tokens: color dst yoffset part paint scale vertical float local translate mode red rect current file recycled top get bitmap constants height canvas debug offset max src bottom xoffset zoom draw right pdf size rendered blue left swipe translation bounds width page relative

ID : 157
Received Java Code:public void loadPages(){	  if (pdfFile == null || renderingHandler == null) {	    return;	  }	  renderingHandler.removeMessages(RenderingHandler.MSG_RENDER_TASK);	  cacheManager.makeANewSet();	  pagesLoader.loadPages();	  redraw();	}
Method Name:load pages
API seq: renderingHandler.removeMessages cacheManager.makeANewSet pagesLoader.loadPages redraw
Tokens: msg handler cache manager loader rendering remove redraw anew pages task pdf file load null messages render make

ID : 158
Received Java Code:void loadComplete(PdfFile pdfFile){	  state=State.LOADED;	  this.pdfFile=pdfFile;	  if (!renderingHandlerThread.isAlive()) {	    renderingHandlerThread.start();	  }	  renderingHandler=new RenderingHandler(renderingHandlerThread.getLooper(),this);	  renderingHandler.start();	  if (scrollHandle != null) {	    scrollHandle.setupLayout(this);	    isScrollHandleInit=true;	  }	  dragPinchManager.enable();	  callbacks.callOnLoadComplete(pdfFile.getPagesCount());	  jumpTo(defaultPage,false);	}
Method Name:load complete
API seq: renderingHandlerThread.isAlive renderingHandlerThread.start renderingHandlerThread.getLooper RenderingHandler renderingHandler.start scrollHandle.setupLayout dragPinchManager.enable PdfFile.getPagesCount callbacks.callOnLoadComplete jumpTo
Tokens: handler alive callbacks looper loaded default pages file load enable get state drag jump init pinch manager scroll count start false handle rendering thread call layout pdf null true setup page complete

ID : 159
Received Java Code:void loadError(Throwable t){	  state=State.ERROR;	  OnErrorListener onErrorListener=callbacks.getOnError();	  recycle();	  invalidate();	  if (onErrorListener != null) {	    onErrorListener.onError(t);	  }	 else {	    Log.e("PDFView","load pdf error",t);	  }	}
Method Name:load error
API seq: callbacks.getOnError recycle invalidate OnErrorListener.onError Log.e
Tokens: null log get listener recycle callbacks invalidate state error

ID : 160
Received Java Code:void redraw(){	  invalidate();	}
Method Name:redraw
API seq: invalidate
Tokens: invalidate

ID : 161
Received Java Code:public void onBitmapRendered(PagePart part){	  if (state == State.LOADED) {	    state=State.SHOWN;	    callbacks.callOnRender(pdfFile.getPagesCount());	  }	  if (part.isThumbnail()) {	    cacheManager.cacheThumbnail(part);	  }	 else {	    cacheManager.cachePart(part);	  }	  redraw();	}
Method Name:on bitmap rendered
API seq: pdfFile.getPagesCount callbacks.callOnRender PagePart.isThumbnail cacheManager.cacheThumbnail cacheManager.cachePart redraw
Tokens: thumbnail cache manager part count callbacks loaded call redraw pages pdf file shown get state render

ID : 162
Received Java Code:public void moveTo(float offsetX,float offsetY){	  moveTo(offsetX,offsetY,true);	}
Method Name:move to
API seq: moveTo
Tokens: move offset true

ID : 163
Received Java Code:public void moveTo(float offsetX,float offsetY,boolean moveHandle){	  if (swipeVertical) {	    float scaledPageWidth=toCurrentScale(pdfFile.getMaxPageWidth());	    if (scaledPageWidth < getWidth()) {	      offsetX=getWidth() / 2 - scaledPageWidth / 2;	    }	 else {	      if (offsetX > 0) {	        offsetX=0;	      }	 else       if (offsetX + scaledPageWidth < getWidth()) {	        offsetX=getWidth() - scaledPageWidth;	      }	    }	    float contentHeight=pdfFile.getDocLen(zoom);	    if (contentHeight < getHeight()) {	      offsetY=(getHeight() - contentHeight) / 2;	    }	 else {	      if (offsetY > 0) {	        offsetY=0;	      }	 else       if (offsetY + contentHeight < getHeight()) {	        offsetY=-contentHeight + getHeight();	      }	    }	    if (offsetY < currentYOffset) {	      scrollDir=ScrollDir.END;	    }	 else     if (offsetY > currentYOffset) {	      scrollDir=ScrollDir.START;	    }	 else {	      scrollDir=ScrollDir.NONE;	    }	  }	 else {	    float scaledPageHeight=toCurrentScale(pdfFile.getMaxPageHeight());	    if (scaledPageHeight < getHeight()) {	      offsetY=getHeight() / 2 - scaledPageHeight / 2;	    }	 else {	      if (offsetY > 0) {	        offsetY=0;	      }	 else       if (offsetY + scaledPageHeight < getHeight()) {	        offsetY=getHeight() - scaledPageHeight;	      }	    }	    float contentWidth=pdfFile.getDocLen(zoom);	    if (contentWidth < getWidth()) {	      offsetX=(getWidth() - contentWidth) / 2;	    }	 else {	      if (offsetX > 0) {	        offsetX=0;	      }	 else       if (offsetX + contentWidth < getWidth()) {	        offsetX=-contentWidth + getWidth();	      }	    }	    if (offsetX < currentXOffset) {	      scrollDir=ScrollDir.END;	    }	 else     if (offsetX > currentXOffset) {	      scrollDir=ScrollDir.START;	    }	 else {	      scrollDir=ScrollDir.NONE;	    }	  }	  currentXOffset=offsetX;	  currentYOffset=offsetY;	  float positionOffset=getPositionOffset();	  if (moveHandle && scrollHandle != null && !documentFitsView()) {	    scrollHandle.setScroll(positionOffset);	  }	  callbacks.callOnPageScroll(getCurrentPage(),positionOffset);	  redraw();	}
Method Name:move to
API seq: pdfFile.getMaxPageWidth toCurrentScale getWidth getWidth getWidth getWidth pdfFile.getDocLen getHeight getHeight getHeight getHeight pdfFile.getMaxPageHeight toCurrentScale getHeight getHeight getHeight getHeight pdfFile.getDocLen getWidth getWidth getWidth getWidth getPositionOffset documentFitsView scrollHandle.setScroll getCurrentPage callbacks.callOnPageScroll redraw
Tokens: scaled yoffset document callbacks scale vertical none float dir content current view file len get end height move offset max scroll xoffset start handle zoom fits call redraw pdf null swipe width doc page position

ID : 164
Received Java Code:void loadPageByOffset(){	  if (0 == pdfFile.getPagesCount()) {	    return;	  }	  float offset, screenCenter;	  if (swipeVertical) {	    offset=currentYOffset;	    screenCenter=((float)getHeight()) / 2;	  }	 else {	    offset=currentXOffset;	    screenCenter=((float)getWidth()) / 2;	  }	  int page=pdfFile.getPageAtOffset(-(offset - screenCenter),zoom);	  if (page >= 0 && page <= pdfFile.getPagesCount() - 1 && page != getCurrentPage()) {	    showPage(page);	  }	 else {	    loadPages();	  }	}
Method Name:load page by offset
API seq: pdfFile.getPagesCount getHeight getWidth pdfFile.getPageAtOffset pdfFile.getPagesCount getCurrentPage showPage loadPages
Tokens: offset yoffset center count show xoffset screen vertical zoom float current pages pdf file load swipe get width page height

ID : 165
Received Java Code:public void performPageSnap(){	  if (!pageSnap || pdfFile == null || pdfFile.getPagesCount() == 0) {	    return;	  }	  int centerPage=findFocusPage(currentXOffset,currentYOffset);	  SnapEdge edge=findSnapEdge(centerPage);	  if (edge == SnapEdge.NONE) {	    return;	  }	  float offset=snapOffsetForPage(centerPage,edge);	  if (swipeVertical) {	    animationManager.startYAnimation(currentYOffset,-offset);	  }	 else {	    animationManager.startXAnimation(currentXOffset,-offset);	  }	}
Method Name:perform page snap
API seq: pdfFile.getPagesCount findFocusPage findSnapEdge snapOffsetForPage animationManager.startYAnimation animationManager.startXAnimation
Tokens: yoffset focus yanimation vertical none float edge current pages file xanimation find get manager offset center count start xoffset animation pdf null swipe page snap

ID : 166
Received Java Code:SnapEdge findSnapEdge(int page){	  if (!pageSnap || page < 0) {	    return SnapEdge.NONE;	  }	  float currentOffset=swipeVertical ? currentYOffset : currentXOffset;	  float offset=-pdfFile.getPageOffset(page,zoom);	  int length=swipeVertical ? getHeight() : getWidth();	  float pageLength=pdfFile.getPageLength(page,zoom);	  if (length >= pageLength) {	    return SnapEdge.CENTER;	  }	 else   if (currentOffset >= offset) {	    return SnapEdge.START;	  }	 else   if (offset - pageLength > currentOffset - length) {	    return SnapEdge.END;	  }	 else {	    return SnapEdge.NONE;	  }	}
Method Name:find snap edge
API seq: pdfFile.getPageOffset getHeight getWidth pdfFile.getPageLength
Tokens: offset yoffset center length xoffset start vertical zoom none float edge current pdf file swipe get width end page snap height

ID : 167
Received Java Code:float snapOffsetForPage(int pageIndex,SnapEdge edge){	  float offset=pdfFile.getPageOffset(pageIndex,zoom);	  float length=swipeVertical ? getHeight() : getWidth();	  float pageLength=pdfFile.getPageLength(pageIndex,zoom);	  if (edge == SnapEdge.CENTER) {	    offset=offset - length / 2f + pageLength / 2f;	  }	 else   if (edge == SnapEdge.END) {	    offset=offset - length + pageLength;	  }	  return offset;	}
Method Name:snap offset for page
API seq: pdfFile.getPageOffset getHeight getWidth pdfFile.getPageLength
Tokens: offset center length index vertical zoom float edge pdf file 2f swipe get width end page snap height

ID : 168
Received Java Code:int findFocusPage(float xOffset,float yOffset){	  float currOffset=swipeVertical ? yOffset : xOffset;	  float length=swipeVertical ? getHeight() : getWidth();	  if (currOffset > -1) {	    return 0;	  }	 else   if (currOffset < -pdfFile.getDocLen(zoom) + length + 1) {	    return pdfFile.getPagesCount() - 1;	  }	  float center=currOffset - length / 2f;	  return pdfFile.getPageAtOffset(-center,zoom);	}
Method Name:find focus page
API seq: getHeight getWidth pdfFile.getDocLen pdfFile.getPagesCount pdfFile.getPageAtOffset
Tokens: offset center count length vertical zoom float pages pdf file 2f len swipe get width doc page curr height

ID : 169
Received Java Code:public boolean pageFillsScreen(){	  float start=-pdfFile.getPageOffset(currentPage,zoom);	  float end=start - pdfFile.getPageLength(currentPage,zoom);	  if (isSwipeVertical()) {	    return start > currentYOffset && end < currentYOffset - getHeight();	  }	 else {	    return start > currentXOffset && end < currentXOffset - getWidth();	  }	}
Method Name:page fills screen
API seq: pdfFile.getPageOffset pdfFile.getPageLength isSwipeVertical getHeight getWidth
Tokens: offset yoffset start xoffset length zoom vertical float current pdf file swipe get width end page height

ID : 170
Received Java Code:public void moveRelativeTo(float dx,float dy){	  moveTo(currentXOffset + dx,currentYOffset + dy);	}
Method Name:move relative to
API seq: moveTo
Tokens: current move dx dy yoffset xoffset

ID : 171
Received Java Code:public void zoomTo(float zoom){	  this.zoom=zoom;	}
Method Name:zoom to
API seq:
Tokens: zoom

ID : 172
Received Java Code:public void zoomCenteredTo(float zoom,PointF pivot){	  float dzoom=zoom / this.zoom;	  zoomTo(zoom);	  float baseX=currentXOffset * dzoom;	  float baseY=currentYOffset * dzoom;	  baseX+=(pivot.x - pivot.x * dzoom);	  baseY+=(pivot.y - pivot.y * dzoom);	  moveTo(baseX,baseY);	}
Method Name:zoom centered to
API seq: zoomTo moveTo
Tokens: current move yoffset xoffset pivot zoom float dzoom base

ID : 173
Received Java Code:public void zoomCenteredRelativeTo(float dzoom,PointF pivot){	  zoomCenteredTo(zoom * dzoom,pivot);	}
Method Name:zoom centered relative to
API seq: zoomCenteredTo
Tokens: centered pivot zoom dzoom

ID : 174
Received Java Code:public boolean documentFitsView(){	  float len=pdfFile.getDocLen(1);	  if (swipeVertical) {	    return len < getHeight();	  }	 else {	    return len < getWidth();	  }	}
Method Name:document fits view
API seq: pdfFile.getDocLen getHeight getWidth
Tokens: pdf file len swipe get width doc vertical float height

ID : 175
Received Java Code:public void fitToWidth(int page){	  if (state != State.SHOWN) {	    Log.e(TAG,"Cannot fit, document not rendered yet");	    return;	  }	  zoomTo(getWidth() / pdfFile.getPageSize(page).getWidth());	  jumpTo(page);	}
Method Name:fit to width
API seq: Log.e getWidth pdfFile.getPageSize pdfFile.getWidth zoomTo jumpTo
Tokens: pdf file shown size log get width zoom page state tag jump

ID : 176
Received Java Code:public SizeF getPageSize(int pageIndex){	  if (pdfFile == null) {	    return new SizeF(0,0);	  }	  return pdfFile.getPageSize(pageIndex);	}
Method Name:get page size
API seq: SizeF pdfFile.getPageSize
Tokens: pdf file size null get index page

ID : 177
Received Java Code:public int getCurrentPage(){	  return currentPage;	}
Method Name:get current page
API seq:
Tokens: current page

ID : 178
Received Java Code:public float getCurrentXOffset(){	  return currentXOffset;	}
Method Name:get current xoffset
API seq:
Tokens: current xoffset

ID : 179
Received Java Code:public float getCurrentYOffset(){	  return currentYOffset;	}
Method Name:get current yoffset
API seq:
Tokens: current yoffset

ID : 180
Received Java Code:public float toRealScale(float size){	  return size / zoom;	}
Method Name:to real scale
API seq:
Tokens: size zoom

ID : 181
Received Java Code:public float toCurrentScale(float size){	  return size * zoom;	}
Method Name:to current scale
API seq:
Tokens: size zoom

ID : 182
Received Java Code:public float getZoom(){	  return zoom;	}
Method Name:get zoom
API seq:
Tokens: zoom

ID : 183
Received Java Code:public boolean isZooming(){	  return zoom != minZoom;	}
Method Name:is zooming
API seq:
Tokens: min zoom

ID : 184
Received Java Code:private void setDefaultPage(int defaultPage){	  this.defaultPage=defaultPage;	}
Method Name:set default page
API seq:
Tokens: default page

ID : 185
Received Java Code:public void resetZoom(){	  zoomTo(minZoom);	}
Method Name:reset zoom
API seq: zoomTo
Tokens: min zoom

ID : 186
Received Java Code:public void resetZoomWithAnimation(){	  zoomWithAnimation(minZoom);	}
Method Name:reset zoom with animation
API seq: zoomWithAnimation
Tokens: min zoom animation

ID : 187
Received Java Code:public void zoomWithAnimation(float centerX,float centerY,float scale){	  animationManager.startZoomAnimation(centerX,centerY,zoom,scale);	}
Method Name:zoom with animation
API seq: animationManager.startZoomAnimation
Tokens: manager center start scale zoom animation

ID : 188
Received Java Code:public void zoomWithAnimation(float scale){	  animationManager.startZoomAnimation(getWidth() / 2,getHeight() / 2,zoom,scale);	}
Method Name:zoom with animation
API seq: getWidth getHeight animationManager.startZoomAnimation
Tokens: manager get start width scale zoom animation height

ID : 189
Received Java Code:private void setScrollHandle(ScrollHandle scrollHandle){	  this.scrollHandle=scrollHandle;	}
Method Name:set scroll handle
API seq:
Tokens: scroll handle

ID : 190
Received Java Code:public int getPageAtPositionOffset(float positionOffset){	  return pdfFile.getPageAtOffset(pdfFile.getDocLen(zoom) * positionOffset,zoom);	}
Method Name:get page at position offset
API seq: pdfFile.getDocLen pdfFile.getPageAtOffset
Tokens: pdf file offset len get doc zoom page position

ID : 191
Received Java Code:public float getMinZoom(){	  return minZoom;	}
Method Name:get min zoom
API seq:
Tokens: min zoom

ID : 192
Received Java Code:public void setMinZoom(float minZoom){	  this.minZoom=minZoom;	}
Method Name:set min zoom
API seq:
Tokens: min zoom

ID : 193
Received Java Code:public float getMidZoom(){	  return midZoom;	}
Method Name:get mid zoom
API seq:
Tokens: mid zoom

ID : 194
Received Java Code:public void setMidZoom(float midZoom){	  this.midZoom=midZoom;	}
Method Name:set mid zoom
API seq:
Tokens: mid zoom

ID : 195
Received Java Code:public float getMaxZoom(){	  return maxZoom;	}
Method Name:get max zoom
API seq:
Tokens: max zoom

ID : 196
Received Java Code:public void setMaxZoom(float maxZoom){	  this.maxZoom=maxZoom;	}
Method Name:set max zoom
API seq:
Tokens: max zoom

ID : 197
Received Java Code:public void useBestQuality(boolean bestQuality){	  this.bestQuality=bestQuality;	}
Method Name:use best quality
API seq:
Tokens: best quality

ID : 198
Received Java Code:public boolean isBestQuality(){	  return bestQuality;	}
Method Name:is best quality
API seq:
Tokens: best quality

ID : 199
Received Java Code:public boolean isSwipeVertical(){	  return swipeVertical;	}
Method Name:is swipe vertical
API seq:
Tokens: swipe vertical

ID : 200
Received Java Code:public boolean isSwipeEnabled(){	  return enableSwipe;	}
Method Name:is swipe enabled
API seq:
Tokens: enable swipe

ID : 201
Received Java Code:private void setSwipeVertical(boolean swipeVertical){	  this.swipeVertical=swipeVertical;	}
Method Name:set swipe vertical
API seq:
Tokens: swipe vertical

ID : 202
Received Java Code:public void enableAnnotationRendering(boolean annotationRendering){	  this.annotationRendering=annotationRendering;	}
Method Name:enable annotation rendering
API seq:
Tokens: annotation rendering

ID : 203
Received Java Code:public boolean isAnnotationRendering(){	  return annotationRendering;	}
Method Name:is annotation rendering
API seq:
Tokens: annotation rendering

ID : 204
Received Java Code:public void enableRenderDuringScale(boolean renderDuringScale){	  this.renderDuringScale=renderDuringScale;	}
Method Name:enable render during scale
API seq:
Tokens: scale during render

ID : 205
Received Java Code:public boolean isAntialiasing(){	  return enableAntialiasing;	}
Method Name:is antialiasing
API seq:
Tokens: enable antialiasing

ID : 206
Received Java Code:public void enableAntialiasing(boolean enableAntialiasing){	  this.enableAntialiasing=enableAntialiasing;	}
Method Name:enable antialiasing
API seq:
Tokens: enable antialiasing

ID : 207
Received Java Code:public int getSpacingPx(){	  return spacingPx;	}
Method Name:get spacing px
API seq:
Tokens: spacing px

ID : 208
Received Java Code:public boolean doAutoSpacing(){	  return autoSpacing;	}
Method Name:do auto spacing
API seq:
Tokens: auto spacing

ID : 209
Received Java Code:public void setPageFling(boolean pageFling){	  this.pageFling=pageFling;	}
Method Name:set page fling
API seq:
Tokens: page fling

ID : 210
Received Java Code:public boolean doPageFling(){	  return pageFling;	}
Method Name:do page fling
API seq:
Tokens: page fling

ID : 211
Received Java Code:private void setSpacing(int spacing){	  this.spacingPx=Util.getDP(getContext(),spacing);	}
Method Name:set spacing
API seq: getContext Util.getDP
Tokens: spacing util get px context dp

ID : 212
Received Java Code:private void setAutoSpacing(boolean autoSpacing){	  this.autoSpacing=autoSpacing;	}
Method Name:set auto spacing
API seq:
Tokens: auto spacing

ID : 213
Received Java Code:private void setPageFitPolicy(FitPolicy pageFitPolicy){	  this.pageFitPolicy=pageFitPolicy;	}
Method Name:set page fit policy
API seq:
Tokens: fit page policy

ID : 214
Received Java Code:public FitPolicy getPageFitPolicy(){	  return pageFitPolicy;	}
Method Name:get page fit policy
API seq:
Tokens: fit page policy

ID : 215
Received Java Code:public boolean doPageSnap(){	  return pageSnap;	}
Method Name:do page snap
API seq:
Tokens: page snap

ID : 216
Received Java Code:public void setPageSnap(boolean pageSnap){	  this.pageSnap=pageSnap;	}
Method Name:set page snap
API seq:
Tokens: page snap

ID : 217
Received Java Code:public boolean doRenderDuringScale(){	  return renderDuringScale;	}
Method Name:do render during scale
API seq:
Tokens: scale during render

ID : 218
Received Java Code:public PdfDocument.Meta getDocumentMeta(){	  if (pdfFile == null) {	    return null;	  }	  return pdfFile.getMetaData();	}
Method Name:get document meta
API seq: pdfFile.getMetaData
Tokens: pdf file null data meta get

ID : 219
Received Java Code:public List<PdfDocument.Bookmark> getTableOfContents(){	  if (pdfFile == null) {	    return Collections.emptyList();	  }	  return pdfFile.getBookmarks();	}
Method Name:get table of contents
API seq: Collections.emptyList pdfFile.getBookmarks
Tokens: bookmarks pdf file null collections get empty

ID : 220
Received Java Code:public List<PdfDocument.Link> getLinks(int page){	  if (pdfFile == null) {	    return Collections.emptyList();	  }	  return pdfFile.getPageLinks(page);	}
Method Name:get links
API seq: Collections.emptyList pdfFile.getPageLinks
Tokens: pdf file null collections get links page empty

ID : 221
Received Java Code:public Configurator fromAsset(String assetName){	  return new Configurator(new AssetSource(assetName));	}
Method Name:from asset
API seq: AssetSource.new Configurator
Tokens: configurator name source asset

ID : 222
Received Java Code:public Configurator fromFile(File file){	  return new Configurator(new FileSource(file));	}
Method Name:from file
API seq: FileSource.new Configurator
Tokens: configurator file source

ID : 223
Received Java Code:public Configurator fromUri(Uri uri){	  return new Configurator(new UriSource(uri));	}
Method Name:from uri
API seq: UriSource.new Configurator
Tokens: configurator source uri

ID : 224
Received Java Code:public Configurator fromBytes(byte[] bytes){	  return new Configurator(new ByteArraySource(bytes));	}
Method Name:from bytes
API seq: ByteArraySource.new Configurator
Tokens: configurator bytes byte source

ID : 225
Received Java Code:public Configurator fromStream(InputStream stream){	  return new Configurator(new InputStreamSource(stream));	}
Method Name:from stream
API seq: InputStreamSource.new Configurator
Tokens: input configurator stream source

ID : 226
Received Java Code:public Configurator fromSource(DocumentSource docSource){	  return new Configurator(docSource);	}
Method Name:from source
API seq: Configurator
Tokens: configurator doc source

ID : 227
Received Java Code:RenderingHandler(Looper looper,PDFView pdfView){	  super(looper);	  this.pdfView=pdfView;	}
Method Name:rendering handler
API seq: super
Tokens: super view pdf looper

ID : 228
Received Java Code:void addRenderingTask(int page,float width,float height,RectF bounds,boolean thumbnail,int cacheOrder,boolean bestQuality,boolean annotationRendering){	  RenderingTask task=new RenderingTask(width,height,bounds,page,thumbnail,cacheOrder,bestQuality,annotationRendering);	  Message msg=obtainMessage(MSG_RENDER_TASK,task);	  sendMessage(msg);	}
Method Name:add rendering task
API seq: RenderingTask obtainMessage sendMessage
Tokens: annotation msg obtain thumbnail cache rendering best message quality task width bounds page send render order height

ID : 229
Received Java Code:@Override public void handleMessage(Message message){	  RenderingTask task=(RenderingTask)message.obj;	  try {	    final PagePart part=proceed(task);	    if (part != null) {	      if (running) {	        pdfView.post(new Runnable(){	          @Override public void run(){	            pdfView.onBitmapRendered(part);	          }	        }	);	      }	 else {	        part.getRenderedBitmap().recycle();	      }	    }	  }	 catch (  final PageRenderingException ex) {	    pdfView.post(new Runnable(){	      @Override public void run(){	        pdfView.onPageError(ex);	      }	    }	);	  }	}
Method Name:handle message
API seq: proceed Runnable.new pdfView.post PagePart.getRenderedBitmap PagePart.recycle Runnable.new pdfView.post
Tokens: proceed part rendering message running view runnable task pdf ex null post rendered obj get bitmap recycle page

ID : 230
Received Java Code:@Override public void run(){	  pdfView.onBitmapRendered(part);	}
Method Name:run
API seq: pdfView.onBitmapRendered
Tokens: view pdf rendered bitmap part

ID : 231
Received Java Code:@Override public void run(){	  pdfView.onPageError(ex);	}
Method Name:run
API seq: pdfView.onPageError
Tokens: view pdf ex page error

ID : 232
Received Java Code:private PagePart proceed(RenderingTask renderingTask) throws PageRenderingException {	  PdfFile pdfFile=pdfView.pdfFile;	  pdfFile.openPage(renderingTask.page);	  int w=Math.round(renderingTask.width);	  int h=Math.round(renderingTask.height);	  if (w == 0 || h == 0 || pdfFile.pageHasError(renderingTask.page)) {	    return null;	  }	  Bitmap render;	  try {	    render=Bitmap.createBitmap(w,h,renderingTask.bestQuality ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);	  }	 catch (  IllegalArgumentException e) {	    Log.e(TAG,"Cannot create bitmap",e);	    return null;	  }	  calculateBounds(w,h,renderingTask.bounds);	  pdfFile.renderPageBitmap(render,renderingTask.page,roundedRenderBounds,renderingTask.annotationRendering);	  return new PagePart(renderingTask.page,render,renderingTask.bounds,renderingTask.thumbnail,renderingTask.cacheOrder);	}
Method Name:proceed
API seq: PdfFile.openPage Math.round Math.round PdfFile.pageHasError Bitmap.createBitmap Log.e calculateBounds PdfFile.renderPageBitmap PagePart
Tokens: argument log part best error rgb view file bitmap create 8888 has calculate tag render height order annotation argb thumbnail cache rendering illegal quality task pdf 565 round null bounds width rounded page math config open

ID : 233
Received Java Code:private void calculateBounds(int width,int height,RectF pageSliceBounds){	  renderMatrix.reset();	  renderMatrix.postTranslate(-pageSliceBounds.left * width,-pageSliceBounds.top * height);	  renderMatrix.postScale(1 / pageSliceBounds.width(),1 / pageSliceBounds.height());	  renderBounds.set(0,0,width,height);	  renderMatrix.mapRect(renderBounds);	  renderBounds.round(roundedRenderBounds);	}
Method Name:calculate bounds
API seq: renderMatrix.reset renderMatrix.postTranslate RectF.width RectF.height renderMatrix.postScale renderBounds.set renderMatrix.mapRect renderBounds.round
Tokens: scale matrix translate rect top round post left slice bounds width rounded reset page render map height

ID : 234
Received Java Code:void stop(){	  running=false;	}
Method Name:stop
API seq:
Tokens: running false

ID : 235
Received Java Code:void start(){	  running=true;	}
Method Name:start
API seq:
Tokens: running true

ID : 236
Received Java Code:boolean onTap(MotionEvent e);
Method Name:on tap
API seq: onTap
Tokens: tap boolean motion event

ID : 237
Received Java Code:void onLongPress(MotionEvent e);
Method Name:on long press
API seq: onLongPress
Tokens: motion press event long

ID : 238
Received Java Code:public void setOnLoadComplete(OnLoadCompleteListener onLoadCompleteListener){	  this.onLoadCompleteListener=onLoadCompleteListener;	}
Method Name:set on load complete
API seq:
Tokens: load listener complete

ID : 239
Received Java Code:public void callOnLoadComplete(int pagesCount){	  if (onLoadCompleteListener != null) {	    onLoadCompleteListener.loadComplete(pagesCount);	  }	}
Method Name:call on load complete
API seq: onLoadCompleteListener.loadComplete
Tokens: pages null load count listener complete

ID : 240
Received Java Code:public void setOnError(OnErrorListener onErrorListener){	  this.onErrorListener=onErrorListener;	}
Method Name:set on error
API seq:
Tokens: listener error

ID : 241
Received Java Code:public OnErrorListener getOnError(){	  return onErrorListener;	}
Method Name:get on error
API seq:
Tokens: listener error

ID : 242
Received Java Code:public void setOnPageError(OnPageErrorListener onPageErrorListener){	  this.onPageErrorListener=onPageErrorListener;	}
Method Name:set on page error
API seq:
Tokens: listener page error

ID : 243
Received Java Code:public boolean callOnPageError(int page,Throwable error){	  if (onPageErrorListener != null) {	    onPageErrorListener.onPageError(page,error);	    return true;	  }	  return false;	}
Method Name:call on page error
API seq: onPageErrorListener.onPageError
Tokens: null listener true false page error

ID : 244
Received Java Code:public void setOnRender(OnRenderListener onRenderListener){	  this.onRenderListener=onRenderListener;	}
Method Name:set on render
API seq:
Tokens: listener render

ID : 245
Received Java Code:public void callOnRender(int pagesCount){	  if (onRenderListener != null) {	    onRenderListener.onInitiallyRendered(pagesCount);	  }	}
Method Name:call on render
API seq: onRenderListener.onInitiallyRendered
Tokens: pages null rendered listener count initially render

ID : 246
Received Java Code:public void setOnPageChange(OnPageChangeListener onPageChangeListener){	  this.onPageChangeListener=onPageChangeListener;	}
Method Name:set on page change
API seq:
Tokens: change listener page

ID : 247
Received Java Code:public void callOnPageChange(int page,int pagesCount){	  if (onPageChangeListener != null) {	    onPageChangeListener.onPageChanged(page,pagesCount);	  }	}
Method Name:call on page change
API seq: onPageChangeListener.onPageChanged
Tokens: pages null change count listener page changed

ID : 248
Received Java Code:public void setOnPageScroll(OnPageScrollListener onPageScrollListener){	  this.onPageScrollListener=onPageScrollListener;	}
Method Name:set on page scroll
API seq:
Tokens: scroll listener page

ID : 249
Received Java Code:public void callOnPageScroll(int currentPage,float offset){	  if (onPageScrollListener != null) {	    onPageScrollListener.onPageScrolled(currentPage,offset);	  }	}
Method Name:call on page scroll
API seq: onPageScrollListener.onPageScrolled
Tokens: current null offset scroll listener page scrolled

ID : 250
Received Java Code:public void setOnDraw(OnDrawListener onDrawListener){	  this.onDrawListener=onDrawListener;	}
Method Name:set on draw
API seq:
Tokens: listener draw

ID : 251
Received Java Code:public OnDrawListener getOnDraw(){	  return onDrawListener;	}
Method Name:get on draw
API seq:
Tokens: listener draw

ID : 252
Received Java Code:public void setOnDrawAll(OnDrawListener onDrawAllListener){	  this.onDrawAllListener=onDrawAllListener;	}
Method Name:set on draw all
API seq:
Tokens: all listener draw

ID : 253
Received Java Code:public OnDrawListener getOnDrawAll(){	  return onDrawAllListener;	}
Method Name:get on draw all
API seq:
Tokens: all listener draw

ID : 254
Received Java Code:public void setOnTap(OnTapListener onTapListener){	  this.onTapListener=onTapListener;	}
Method Name:set on tap
API seq:
Tokens: tap listener

ID : 255
Received Java Code:public boolean callOnTap(MotionEvent event){	  return onTapListener != null && onTapListener.onTap(event);	}
Method Name:call on tap
API seq: onTapListener.onTap
Tokens: tap null listener event

ID : 256
Received Java Code:public void setOnLongPress(OnLongPressListener onLongPressListener){	  this.onLongPressListener=onLongPressListener;	}
Method Name:set on long press
API seq:
Tokens: listener press long

ID : 257
Received Java Code:public void callOnLongPress(MotionEvent event){	  if (onLongPressListener != null) {	    onLongPressListener.onLongPress(event);	  }	}
Method Name:call on long press
API seq: onLongPressListener.onLongPress
Tokens: null listener press event long

ID : 258
Received Java Code:public void setLinkHandler(LinkHandler linkHandler){	  this.linkHandler=linkHandler;	}
Method Name:set link handler
API seq:
Tokens: handler link

ID : 259
Received Java Code:public void callLinkHandler(LinkTapEvent event){	  if (linkHandler != null) {	    linkHandler.handleLinkEvent(event);	  }	}
Method Name:call link handler
API seq: linkHandler.handleLinkEvent
Tokens: handler null link handle event

ID : 260
Received Java Code:void onError(Throwable t);
Method Name:on error
API seq: onError
Tokens: throwable error

ID : 261
Received Java Code:void onPageError(int page,Throwable t);
Method Name:on page error
API seq: onPageError
Tokens: throwable page error

ID : 262
Received Java Code:void onPageChanged(int page,int pageCount);
Method Name:on page changed
API seq: onPageChanged
Tokens: count page changed

ID : 263
Received Java Code:void onPageScrolled(int page,float positionOffset);
Method Name:on page scrolled
API seq: onPageScrolled
Tokens: offset page scrolled position float

ID : 264
Received Java Code:void onInitiallyRendered(int nbPages);
Method Name:on initially rendered
API seq: onInitiallyRendered
Tokens: pages rendered nb initially

ID : 265
Received Java Code:void loadComplete(int nbPages);
Method Name:load complete
API seq: loadComplete
Tokens: pages load nb complete

ID : 266
Received Java Code:void onLayerDrawn(Canvas canvas,float pageWidth,float pageHeight,int displayedPage);
Method Name:on layer drawn
API seq: onLayerDrawn
Tokens: displayed canvas width page float drawn layer height

ID : 267
Received Java Code:public InputStreamSource(InputStream inputStream){	  this.inputStream=inputStream;	}
Method Name:input stream source
API seq:
Tokens: input stream

ID : 268
Received Java Code:@Override public PdfDocument createDocument(Context context,PdfiumCore core,String password) throws IOException {	  return core.newDocument(Util.toByteArray(inputStream),password);	}
Method Name:create document
API seq: Util.toByteArray PdfiumCore.newDocument
Tokens: core input password util stream byte document

ID : 269
Received Java Code:public UriSource(Uri uri){	  this.uri=uri;	}
Method Name:uri source
API seq:
Tokens: uri

ID : 270
Received Java Code:@Override public PdfDocument createDocument(Context context,PdfiumCore core,String password) throws IOException {	  ParcelFileDescriptor pfd=context.getContentResolver().openFileDescriptor(uri,"r");	  return core.newDocument(pfd,password);	}
Method Name:create document
API seq: Context.getContentResolver Context.openFileDescriptor PdfiumCore.newDocument
Tokens: resolver parcel document descriptor uri content pfd core password file get context open

ID : 271
Received Java Code:public FileSource(File file){	  this.file=file;	}
Method Name:file source
API seq:
Tokens: file

ID : 272
Received Java Code:@Override public PdfDocument createDocument(Context context,PdfiumCore core,String password) throws IOException {	  ParcelFileDescriptor pfd=ParcelFileDescriptor.open(file,ParcelFileDescriptor.MODE_READ_ONLY);	  return core.newDocument(pfd,password);	}
Method Name:create document
API seq: ParcelFileDescriptor.open PdfiumCore.newDocument
Tokens: mode core password parcel file read document only descriptor open pfd

ID : 273
Received Java Code:public ByteArraySource(byte[] data){	  this.data=data;	}
Method Name:byte array source
API seq:
Tokens: data

ID : 274
Received Java Code:@Override public PdfDocument createDocument(Context context,PdfiumCore core,String password) throws IOException {	  return core.newDocument(data,password);	}
Method Name:create document
API seq: PdfiumCore.newDocument
Tokens: core password data document

ID : 275
Received Java Code:PdfDocument createDocument(Context context,PdfiumCore core,String password) throws IOException ;
Method Name:create document
API seq: createDocument
Tokens: pdfium core password pdf document context create ioexception throws

ID : 276
Received Java Code:public AssetSource(String assetName){	  this.assetName=assetName;	}
Method Name:asset source
API seq:
Tokens: name asset

ID : 277
Received Java Code:@Override public PdfDocument createDocument(Context context,PdfiumCore core,String password) throws IOException {	  File f=FileUtils.fileFromAsset(context,assetName);	  ParcelFileDescriptor pfd=ParcelFileDescriptor.open(f,ParcelFileDescriptor.MODE_READ_ONLY);	  return core.newDocument(pfd,password);	}
Method Name:create document
API seq: FileUtils.fileFromAsset ParcelFileDescriptor.open PdfiumCore.newDocument
Tokens: parcel read document descriptor pfd mode core password file utils only context name from asset open

ID : 278
Received Java Code:public PagePart(int page,Bitmap renderedBitmap,RectF pageRelativeBounds,boolean thumbnail,int cacheOrder){	  super();	  this.page=page;	  this.renderedBitmap=renderedBitmap;	  this.pageRelativeBounds=pageRelativeBounds;	  this.thumbnail=thumbnail;	  this.cacheOrder=cacheOrder;	}
Method Name:page part
API seq: super
Tokens: super thumbnail cache rendered bitmap bounds page relative order

ID : 279
Received Java Code:public int getCacheOrder(){	  return cacheOrder;	}
Method Name:get cache order
API seq:
Tokens: cache order

ID : 280
Received Java Code:public int getPage(){	  return page;	}
Method Name:get page
API seq:
Tokens: page

ID : 281
Received Java Code:public Bitmap getRenderedBitmap(){	  return renderedBitmap;	}
Method Name:get rendered bitmap
API seq:
Tokens: rendered bitmap

ID : 282
Received Java Code:public RectF getPageRelativeBounds(){	  return pageRelativeBounds;	}
Method Name:get page relative bounds
API seq:
Tokens: bounds page relative

ID : 283
Received Java Code:public boolean isThumbnail(){	  return thumbnail;	}
Method Name:is thumbnail
API seq:
Tokens: thumbnail

ID : 284
Received Java Code:public void setCacheOrder(int cacheOrder){	  this.cacheOrder=cacheOrder;	}
Method Name:set cache order
API seq:
Tokens: cache order

ID : 285
Received Java Code:@Override public boolean equals(Object obj){	  if (!(obj instanceof PagePart)) {	    return false;	  }	  PagePart part=(PagePart)obj;	  return part.getPage() == page && part.getPageRelativeBounds().left == pageRelativeBounds.left && part.getPageRelativeBounds().right == pageRelativeBounds.right && part.getPageRelativeBounds().top == pageRelativeBounds.top && part.getPageRelativeBounds().bottom == pageRelativeBounds.bottom;	}
Method Name:equals
API seq: PagePart.getPage PagePart.getPageRelativeBounds PagePart.getPageRelativeBounds PagePart.getPageRelativeBounds PagePart.getPageRelativeBounds
Tokens: top left bottom obj get part bounds false page right relative instanceof

ID : 286
Received Java Code:public LinkTapEvent(float originalX,float originalY,float documentX,float documentY,RectF mappedLinkRect,PdfDocument.Link link){	  this.originalX=originalX;	  this.originalY=originalY;	  this.documentX=documentX;	  this.documentY=documentY;	  this.mappedLinkRect=mappedLinkRect;	  this.link=link;	}
Method Name:link tap event
API seq:
Tokens: rect original document mapped link

ID : 287
Received Java Code:public float getOriginalX(){	  return originalX;	}
Method Name:get original x
API seq:
Tokens: original

ID : 288
Received Java Code:public float getOriginalY(){	  return originalY;	}
Method Name:get original y
API seq:
Tokens: original

ID : 289
Received Java Code:public float getDocumentX(){	  return documentX;	}
Method Name:get document x
API seq:
Tokens: document

ID : 290
Received Java Code:public float getDocumentY(){	  return documentY;	}
Method Name:get document y
API seq:
Tokens: document

ID : 291
Received Java Code:public RectF getMappedLinkRect(){	  return mappedLinkRect;	}
Method Name:get mapped link rect
API seq:
Tokens: rect mapped link

ID : 292
Received Java Code:public PdfDocument.Link getLink(){	  return link;	}
Method Name:get link
API seq:
Tokens: link

ID : 293
Received Java Code:void setScroll(float position);
Method Name:set scroll
API seq: setScroll
Tokens: scroll position float

ID : 294
Received Java Code:void setupLayout(PDFView pdfView);
Method Name:setup layout
API seq: setupLayout
Tokens: layout view pdf pdfview setup

ID : 295
Received Java Code:void destroyLayout();
Method Name:destroy layout
API seq: destroyLayout
Tokens: layout destroy

ID : 296
Received Java Code:void setPageNum(int pageNum);
Method Name:set page num
API seq: setPageNum
Tokens: num page

ID : 297
Received Java Code:boolean shown();
Method Name:shown
API seq: shown
Tokens: boolean shown

ID : 298
Received Java Code:void show();
Method Name:show
API seq: show
Tokens: show

ID : 299
Received Java Code:void hide();
Method Name:hide
API seq: hide
Tokens: hide

ID : 300
Received Java Code:void hideDelayed();
Method Name:hide delayed
API seq: hideDelayed
Tokens: hide delayed

ID : 301
Received Java Code:@Override public void run(){	  hide();	}
Method Name:run
API seq: hide
Tokens: hide

ID : 302
Received Java Code:public DefaultScrollHandle(Context context){	  this(context,false);	}
Method Name:default scroll handle
API seq: this
Tokens: context false

ID : 303
Received Java Code:public DefaultScrollHandle(Context context,boolean inverted){	  super(context);	  this.context=context;	  this.inverted=inverted;	  textView=new TextView(context);	  setVisibility(INVISIBLE);	  setTextColor(Color.BLACK);	  setTextSize(DEFAULT_TEXT_SIZE);	}
Method Name:default scroll handle
API seq: super TextView setVisibility setTextColor setTextSize
Tokens: super view default color visibility size context black invisible text inverted

ID : 304
Received Java Code:@Override public void setupLayout(PDFView pdfView){	  int align, width, height;	  Drawable background;	  if (pdfView.isSwipeVertical()) {	    width=HANDLE_LONG;	    height=HANDLE_SHORT;	    if (inverted) {	      align=ALIGN_PARENT_LEFT;	      background=ContextCompat.getDrawable(context,R.drawable.default_scroll_handle_left);	    }	 else {	      align=ALIGN_PARENT_RIGHT;	      background=ContextCompat.getDrawable(context,R.drawable.default_scroll_handle_right);	    }	  }	 else {	    width=HANDLE_SHORT;	    height=HANDLE_LONG;	    if (inverted) {	      align=ALIGN_PARENT_TOP;	      background=ContextCompat.getDrawable(context,R.drawable.default_scroll_handle_top);	    }	 else {	      align=ALIGN_PARENT_BOTTOM;	      background=ContextCompat.getDrawable(context,R.drawable.default_scroll_handle_bottom);	    }	  }	  if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.JELLY_BEAN) {	    setBackgroundDrawable(background);	  }	 else {	    setBackground(background);	  }	  LayoutParams lp=new LayoutParams(Util.getDP(context,width),Util.getDP(context,height));	  lp.setMargins(0,0,0,0);	  LayoutParams tvlp=new LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);	  tvlp.addRule(RelativeLayout.CENTER_IN_PARENT,RelativeLayout.TRUE);	  addView(textView,tvlp);	  lp.addRule(align);	  pdfView.addView(this,lp);	  this.pdfView=pdfView;	}
Method Name:setup layout
API seq: PDFView.isSwipeVertical ContextCompat.getDrawable ContextCompat.getDrawable ContextCompat.getDrawable ContextCompat.getDrawable setBackgroundDrawable setBackground Util.getDP Util.getDP LayoutParams LayoutParams.setMargins LayoutParams LayoutParams.addRule addView LayoutParams.addRule PDFView.addView
Tokens: margins parent codes lp android rule vertical align dp long content view default top get context jelly text inverted bean height group add drawable os bottom center scroll handle right params version tvlp layout pdf util build left background swipe true width short sdk compat wrap relative

ID : 305
Received Java Code:@Override public void destroyLayout(){	  pdfView.removeView(this);	}
Method Name:destroy layout
API seq: pdfView.removeView
Tokens: view pdf remove

ID : 306
Received Java Code:@Override public void setScroll(float position){	  if (!shown()) {	    show();	  }	 else {	    handler.removeCallbacks(hidePageScrollerRunnable);	  }	  setPosition((pdfView.isSwipeVertical() ? pdfView.getHeight() : pdfView.getWidth()) * position);	}
Method Name:set scroll
API seq: shown show handler.removeCallbacks pdfView.isSwipeVertical pdfView.getHeight pdfView.getWidth pdfView.isSwipeVertical setPosition
Tokens: handler show callbacks vertical remove hide runnable view pdf shown swipe get width page position scroller height

ID : 307
Received Java Code:private void setPosition(float pos){	  if (Float.isInfinite(pos) || Float.isNaN(pos)) {	    return;	  }	  float pdfViewSize;	  if (pdfView.isSwipeVertical()) {	    pdfViewSize=pdfView.getHeight();	  }	 else {	    pdfViewSize=pdfView.getWidth();	  }	  pos-=relativeHandlerMiddle;	  if (pos < 0) {	    pos=0;	  }	 else   if (pos > pdfViewSize - Util.getDP(context,HANDLE_SHORT)) {	    pos=pdfViewSize - Util.getDP(context,HANDLE_SHORT);	  }	  if (pdfView.isSwipeVertical()) {	    setY(pos);	  }	 else {	    setX(pos);	  }	  calculateMiddle();	  invalidate();	}
Method Name:set position
API seq: Float.isInfinite Float.isNaN pdfView.isSwipeVertical pdfView.getHeight pdfView.getWidth Util.getDP Util.getDP pdfView.isSwipeVertical setY setX calculateMiddle invalidate
Tokens: handler middle infinite handle vertical invalidate float dp view na pdf util size pos swipe get width context short calculate height relative

ID : 308
Received Java Code:private void calculateMiddle(){	  float pos, viewSize, pdfViewSize;	  if (pdfView.isSwipeVertical()) {	    pos=getY();	    viewSize=getHeight();	    pdfViewSize=pdfView.getHeight();	  }	 else {	    pos=getX();	    viewSize=getWidth();	    pdfViewSize=pdfView.getWidth();	  }	  relativeHandlerMiddle=((pos + relativeHandlerMiddle) / pdfViewSize) * viewSize;	}
Method Name:calculate middle
API seq: pdfView.isSwipeVertical getY getHeight pdfView.getHeight getX getWidth pdfView.getWidth
Tokens: handler middle vertical float view pdf size pos swipe get width height relative

ID : 309
Received Java Code:@Override public void hideDelayed(){	  handler.postDelayed(hidePageScrollerRunnable,1000);	}
Method Name:hide delayed
API seq: handler.postDelayed
Tokens: handler hide runnable post 1000 delayed page scroller

ID : 310
Received Java Code:@Override public void setPageNum(int pageNum){	  String text=String.valueOf(pageNum);	  if (!textView.getText().equals(text)) {	    textView.setText(text);	  }	}
Method Name:set page num
API seq: String.valueOf textView.getText textView.equals textView.setText
Tokens: view get equals num text page value

ID : 311
Received Java Code:@Override public boolean shown(){	  return getVisibility() == VISIBLE;	}
Method Name:shown
API seq: getVisibility
Tokens: visible visibility get

ID : 312
Received Java Code:@Override public void show(){	  setVisibility(VISIBLE);	}
Method Name:show
API seq: setVisibility
Tokens: visible visibility

ID : 313
Received Java Code:@Override public void hide(){	  setVisibility(INVISIBLE);	}
Method Name:hide
API seq: setVisibility
Tokens: visibility invisible

ID : 314
Received Java Code:public void setTextColor(int color){	  textView.setTextColor(color);	}
Method Name:set text color
API seq: textView.setTextColor
Tokens: view color text

ID : 315
Received Java Code:public void setTextSize(int size){	  textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,size);	}
Method Name:set text size
API seq: textView.setTextSize
Tokens: typed unit view size complex dip text value

ID : 316
Received Java Code:private boolean isPDFViewReady(){	  return pdfView != null && pdfView.getPageCount() > 0 && !pdfView.documentFitsView();	}
Method Name:is pdfview ready
API seq: pdfView.getPageCount pdfView.documentFitsView
Tokens: view pdf null document get count page fits

ID : 317
Received Java Code:@Override public boolean onTouchEvent(MotionEvent event){	  if (!isPDFViewReady()) {	    return super.onTouchEvent(event);	  }	switch (event.getAction()) {	case MotionEvent.ACTION_DOWN:	case MotionEvent.ACTION_POINTER_DOWN:	    pdfView.stopFling();	  handler.removeCallbacks(hidePageScrollerRunnable);	if (pdfView.isSwipeVertical()) {	  currentPos=event.getRawY() - getY();	}	 else {	  currentPos=event.getRawX() - getX();	}	case MotionEvent.ACTION_MOVE:	if (pdfView.isSwipeVertical()) {	setPosition(event.getRawY() - currentPos + relativeHandlerMiddle);	pdfView.setPositionOffset(relativeHandlerMiddle / (float)getHeight(),false);	}	 else {	setPosition(event.getRawX() - currentPos + relativeHandlerMiddle);	pdfView.setPositionOffset(relativeHandlerMiddle / (float)getWidth(),false);	}	return true;	case MotionEvent.ACTION_CANCEL:	case MotionEvent.ACTION_UP:	case MotionEvent.ACTION_POINTER_UP:	hideDelayed();	pdfView.performPageSnap();	return true;	}	return super.onTouchEvent(event);	}
Method Name:on touch event
API seq: isPDFViewReady super.onTouchEvent MotionEvent.getAction switch pdfView.stopFling handler.removeCallbacks pdfView.isSwipeVertical MotionEvent.getRawY getY MotionEvent.getRawX getX pdfView.isSwipeVertical MotionEvent.getRawY setPosition getHeight pdfView.setPositionOffset MotionEvent.getRawX setPosition getWidth pdfView.setPositionOffset hideDelayed pdfView.performPageSnap super.onTouchEvent
Tokens: cancel handler callbacks vertical delayed float fling down remove switch current view pos ready get action up event case height move pointer middle offset pdfview motion perform false raw touch super hide runnable pdf stop swipe width true page position scroller snap relative

ID : 318
Received Java Code:void handleLinkEvent(LinkTapEvent event);
Method Name:handle link event
API seq: handleLinkEvent
Tokens: tap link handle event

ID : 319
Received Java Code:public DefaultLinkHandler(PDFView pdfView){	  this.pdfView=pdfView;	}
Method Name:default link handler
API seq:
Tokens: view pdf

ID : 320
Received Java Code:@Override public void handleLinkEvent(LinkTapEvent event){	  String uri=event.getLink().getUri();	  Integer page=event.getLink().getDestPageIdx();	  if (uri != null && !uri.isEmpty()) {	    handleUri(uri);	  }	 else   if (page != null) {	    handlePage(page);	  }	}
Method Name:handle link event
API seq: LinkTapEvent.getLink LinkTapEvent.getUri LinkTapEvent.getLink LinkTapEvent.getDestPageIdx String.isEmpty handleUri handlePage
Tokens: null get link handle page integer dest idx event uri empty

ID : 321
Received Java Code:private void handleUri(String uri){	  Uri parsedUri=Uri.parse(uri);	  Intent intent=new Intent(Intent.ACTION_VIEW,parsedUri);	  Context context=pdfView.getContext();	  if (intent.resolveActivity(context.getPackageManager()) != null) {	    context.startActivity(intent);	  }	 else {	    Log.w(TAG,"No activity found for URI: " + uri);	  }	}
Method Name:handle uri
API seq: Uri.parse Intent pdfView.getContext Context.getPackageManager Intent.resolveActivity Context.startActivity Log.w
Tokens: package activity resolve manager log start parse intent uri view pdf null get context action parsed tag

ID : 322
Received Java Code:private void handlePage(int page){	  pdfView.jumpTo(page);	}
Method Name:handle page
API seq: pdfView.jumpTo
Tokens: view pdf page jump

ID : 323
Received Java Code:public PageRenderingException(int page,Throwable cause){	  super(cause);	  this.page=page;	}
Method Name:page rendering exception
API seq: super
Tokens: super cause page

ID : 324
Received Java Code:public int getPage(){	  return page;	}
Method Name:get page
API seq:
Tokens: page

ID : 325
Received Java Code:public FileNotFoundException(String detailMessage){	  super(detailMessage);	}
Method Name:file not found exception
API seq: super
Tokens: super detail message

ID : 326
Received Java Code:public FileNotFoundException(String detailMessage,Throwable throwable){	  super(detailMessage,throwable);	}
Method Name:file not found exception
API seq: super
Tokens: super throwable detail message

ID : 327
Received Java Code:private void handleResult(final BleDevice bleDevice){	  mMainHandler.post(new Runnable(){	    @Override public void run(){	      onLeScan(bleDevice);	    }	  }	);	  checkDevice(bleDevice);	}
Method Name:handle result
API seq: Runnable.new mMainHandler.post checkDevice
Tokens: handler runnable post main ble check device

ID : 328
Received Java Code:@Override public void run(){	  onLeScan(bleDevice);	}
Method Name:run
API seq: onLeScan
Tokens: scan le ble device

ID : 329
Received Java Code:public void prepare(String[] names,String mac,boolean fuzzy,boolean needConnect,long timeOut,BleScanPresenterImp bleScanPresenterImp){	  mDeviceNames=names;	  mDeviceMac=mac;	  mFuzzy=fuzzy;	  mNeedConnect=needConnect;	  mScanTimeout=timeOut;	  mBleScanPresenterImp=bleScanPresenterImp;	  mHandlerThread=new HandlerThread(BleScanPresenter.class.getSimpleName());	  mHandlerThread.start();	  mHandler=new ScanHandler(mHandlerThread.getLooper(),this);	  mHandling=true;	}
Method Name:prepare
API seq: BleScanPresenter.class.getSimpleName HandlerThread mHandlerThread.start mHandlerThread.getLooper ScanHandler
Tokens: handler presenter need scan start looper simple thread imp mac timeout out names get true name ble handling time device class fuzzy connect

ID : 330
Received Java Code:public boolean ismNeedConnect(){	  return mNeedConnect;	}
Method Name:ism need connect
API seq:
Tokens: need connect

ID : 331
Received Java Code:public BleScanPresenterImp getBleScanPresenterImp(){	  return mBleScanPresenterImp;	}
Method Name:get ble scan presenter imp
API seq:
Tokens: presenter scan ble imp

ID : 332
Received Java Code:@Override public void onLeScan(BluetoothDevice device,int rssi,byte[] scanRecord){	  if (device == null)   return;	  if (!mHandling)   return;	  Message message=mHandler.obtainMessage();	  message.what=BleMsg.MSG_SCAN_DEVICE;	  message.obj=new BleDevice(device,rssi,scanRecord,System.currentTimeMillis());	  mHandler.sendMessage(message);	}
Method Name:on le scan
API seq: mHandler.obtainMessage System.currentTimeMillis BleDevice mHandler.sendMessage
Tokens: msg obtain handler rssi scan message current system what null obj record ble handling time millis device send

ID : 333
Received Java Code:private void checkDevice(BleDevice bleDevice){	  if (TextUtils.isEmpty(mDeviceMac) && (mDeviceNames == null || mDeviceNames.length < 1)) {	    correctDeviceAndNextStep(bleDevice);	    return;	  }	  if (!TextUtils.isEmpty(mDeviceMac)) {	    if (!mDeviceMac.equalsIgnoreCase(bleDevice.getMac()))     return;	  }	  if (mDeviceNames != null && mDeviceNames.length > 0) {	    AtomicBoolean equal=new AtomicBoolean(false);	    for (    String name : mDeviceNames) {	      String remoteName=bleDevice.getName();	      if (remoteName == null)       remoteName="";	      if (mFuzzy ? remoteName.contains(name) : remoteName.equals(name)) {	        equal.set(true);	      }	    }	    if (!equal.get()) {	      return;	    }	  }	  correctDeviceAndNextStep(bleDevice);	}
Method Name:check device
API seq: TextUtils.isEmpty correctDeviceAndNextStep TextUtils.isEmpty BleDevice.getMac mDeviceMac.equalsIgnoreCase AtomicBoolean BleDevice.getName String.contains String.equals AtomicBoolean.set AtomicBoolean.get correctDeviceAndNextStep
Tokens: next correct remote mac empty utils get ignore ble text fuzzy case length false equal contains boolean names null equals atomic name true step device

ID : 334
Received Java Code:private void correctDeviceAndNextStep(final BleDevice bleDevice){	  if (mNeedConnect) {	    BleLog.i("devices detected  ------" + "  name:" + bleDevice.getName() + "  mac:"+ bleDevice.getMac()+ "  Rssi:"+ bleDevice.getRssi()+ "  scanRecord:"+ HexUtil.formatHexString(bleDevice.getScanRecord()));	    mBleDeviceList.add(bleDevice);	    mMainHandler.post(new Runnable(){	      @Override public void run(){	        BleScanner.getInstance().stopLeScan();	      }	    }	);	  }	 else {	    AtomicBoolean hasFound=new AtomicBoolean(false);	    for (    BleDevice result : mBleDeviceList) {	      if (result.getDevice().equals(bleDevice.getDevice())) {	        hasFound.set(true);	      }	    }	    if (!hasFound.get()) {	      BleLog.i("device detected  ------" + "  name: " + bleDevice.getName() + "  mac: "+ bleDevice.getMac()+ "  Rssi: "+ bleDevice.getRssi()+ "  scanRecord: "+ HexUtil.formatHexString(bleDevice.getScanRecord(),true));	      mBleDeviceList.add(bleDevice);	      mMainHandler.post(new Runnable(){	        @Override public void run(){	          onScanning(bleDevice);	        }	      }	);	    }	  }	}
Method Name:correct device and next step
API seq: BleDevice.getName BleDevice.getMac BleDevice.getRssi BleDevice.getScanRecord HexUtil.formatHexString BleLog.i mBleDeviceList.add Runnable.new mMainHandler.post AtomicBoolean BleDevice.getDevice BleDevice.getDevice BleDevice.equals AtomicBoolean.set AtomicBoolean.get BleDevice.getName BleDevice.getMac BleDevice.getRssi BleDevice.getScanRecord HexUtil.formatHexString BleLog.i mBleDeviceList.add Runnable.new mMainHandler.post
Tokens: handler log scan main mac result found post get record hex ble has connect add rssi need false format runnable boolean util atomic equals name true device

ID : 335
Received Java Code:@Override public void run(){	  BleScanner.getInstance().stopLeScan();	}
Method Name:run
API seq: BleScanner.getInstance BleScanner.stopLeScan
Tokens: instance stop get scanner scan le ble

ID : 336
Received Java Code:@Override public void run(){	  onScanning(bleDevice);	}
Method Name:run
API seq: onScanning
Tokens: scanning ble device

ID : 337
Received Java Code:public final void notifyScanStarted(final boolean success){	  mBleDeviceList.clear();	  removeHandlerMsg();	  if (success && mScanTimeout > 0) {	    mMainHandler.postDelayed(new Runnable(){	      @Override public void run(){	        BleScanner.getInstance().stopLeScan();	      }	    }	,mScanTimeout);	  }	  mMainHandler.post(new Runnable(){	    @Override public void run(){	      onScanStarted(success);	    }	  }	);	}
Method Name:notify scan started
API seq: mBleDeviceList.clear removeHandlerMsg Runnable.new mMainHandler.postDelayed Runnable.new mMainHandler.post
Tokens: msg handler clear scan delayed main remove timeout runnable post success ble device

ID : 338
Received Java Code:@Override public void run(){	  BleScanner.getInstance().stopLeScan();	}
Method Name:run
API seq: BleScanner.getInstance BleScanner.stopLeScan
Tokens: instance stop get scanner scan le ble

ID : 339
Received Java Code:@Override public void run(){	  onScanStarted(success);	}
Method Name:run
API seq: onScanStarted
Tokens: success scan started

ID : 340
Received Java Code:public final void notifyScanStopped(){	  mHandling=false;	  mHandlerThread.quit();	  removeHandlerMsg();	  mMainHandler.post(new Runnable(){	    @Override public void run(){	      onScanFinished(mBleDeviceList);	    }	  }	);	}
Method Name:notify scan stopped
API seq: mHandlerThread.quit removeHandlerMsg Runnable.new mMainHandler.post
Tokens: msg handler runnable post false main quit handling thread remove

ID : 341
Received Java Code:@Override public void run(){	  onScanFinished(mBleDeviceList);	}
Method Name:run
API seq: onScanFinished
Tokens: scan finished ble device

ID : 342
Received Java Code:public final void removeHandlerMsg(){	  mMainHandler.removeCallbacksAndMessages(null);	  mHandler.removeCallbacksAndMessages(null);	}
Method Name:remove handler msg
API seq: mMainHandler.removeCallbacksAndMessages mHandler.removeCallbacksAndMessages
Tokens: handler null callbacks messages main remove

ID : 343
Received Java Code:public abstract void onScanStarted(boolean success);
Method Name:on scan started
API seq: onScanStarted
Tokens: boolean success scan started abstract

ID : 344
Received Java Code:public abstract void onLeScan(BleDevice bleDevice);
Method Name:on le scan
API seq: onLeScan
Tokens: scan le ble abstract device

ID : 345
Received Java Code:public abstract void onScanning(BleDevice bleDevice);
Method Name:on scanning
API seq: onScanning
Tokens: scanning ble abstract device

ID : 346
Received Java Code:public abstract void onScanFinished(List<BleDevice> bleDeviceList);
Method Name:on scan finished
API seq: onScanFinished
Tokens: scan finished ble abstract device

ID : 347
Received Java Code:public UUID[] getServiceUuids(){	  return mServiceUuids;	}
Method Name:get service uuids
API seq:
Tokens: service uuids

ID : 348
Received Java Code:public String[] getDeviceNames(){	  return mDeviceNames;	}
Method Name:get device names
API seq:
Tokens: names device

ID : 349
Received Java Code:public String getDeviceMac(){	  return mDeviceMac;	}
Method Name:get device mac
API seq:
Tokens: device mac

ID : 350
Received Java Code:public boolean isAutoConnect(){	  return mAutoConnect;	}
Method Name:is auto connect
API seq:
Tokens: auto connect

ID : 351
Received Java Code:public boolean isFuzzy(){	  return mFuzzy;	}
Method Name:is fuzzy
API seq:
Tokens: fuzzy

ID : 352
Received Java Code:public long getScanTimeOut(){	  return mScanTimeOut;	}
Method Name:get scan time out
API seq:
Tokens: scan time out

ID : 353
Received Java Code:public static BleScanner getInstance(){	  return BleScannerHolder.sBleScanner;	}
Method Name:get instance
API seq:
Tokens: scanner ble holder

ID : 354
Received Java Code:@Override public void onScanStarted(boolean success){	  BleScanPresenterImp callback=mBleScanPresenter.getBleScanPresenterImp();	  if (callback != null) {	    callback.onScanStarted(success);	  }	}
Method Name:on scan started
API seq: mBleScanPresenter.getBleScanPresenterImp BleScanPresenterImp.onScanStarted
Tokens: null presenter success get scan callback started ble imp

ID : 355
Received Java Code:@Override public void onLeScan(BleDevice bleDevice){	  if (mBleScanPresenter.ismNeedConnect()) {	    BleScanAndConnectCallback callback=(BleScanAndConnectCallback)mBleScanPresenter.getBleScanPresenterImp();	    if (callback != null) {	      callback.onLeScan(bleDevice);	    }	  }	 else {	    BleScanCallback callback=(BleScanCallback)mBleScanPresenter.getBleScanPresenterImp();	    if (callback != null) {	      callback.onLeScan(bleDevice);	    }	  }	}
Method Name:on le scan
API seq: mBleScanPresenter.ismNeedConnect mBleScanPresenter.getBleScanPresenterImp BleScanAndConnectCallback.onLeScan mBleScanPresenter.getBleScanPresenterImp BleScanAndConnectCallback.onLeScan
Tokens: ism null presenter need get scan callback le ble imp device connect

ID : 356
Received Java Code:@Override public void onScanning(BleDevice result){	  BleScanPresenterImp callback=mBleScanPresenter.getBleScanPresenterImp();	  if (callback != null) {	    callback.onScanning(result);	  }	}
Method Name:on scanning
API seq: mBleScanPresenter.getBleScanPresenterImp BleScanPresenterImp.onScanning
Tokens: result null presenter scanning get scan callback ble imp

ID : 357
Received Java Code:@Override public void onScanFinished(List<BleDevice> bleDeviceList){	  if (mBleScanPresenter.ismNeedConnect()) {	    final BleScanAndConnectCallback callback=(BleScanAndConnectCallback)mBleScanPresenter.getBleScanPresenterImp();	    if (bleDeviceList == null || bleDeviceList.size() < 1) {	      if (callback != null) {	        callback.onScanFinished(null);	      }	    }	 else {	      if (callback != null) {	        callback.onScanFinished(bleDeviceList.get(0));	      }	      final List<BleDevice> list=bleDeviceList;	      new Handler(Looper.getMainLooper()).postDelayed(new Runnable(){	        @Override public void run(){	          BleManager.getInstance().connect(list.get(0),callback);	        }	      }	,100);	    }	  }	 else {	    BleScanCallback callback=(BleScanCallback)mBleScanPresenter.getBleScanPresenterImp();	    if (callback != null) {	      callback.onScanFinished(bleDeviceList);	    }	  }	}
Method Name:on scan finished
API seq: mBleScanPresenter.ismNeedConnect mBleScanPresenter.getBleScanPresenterImp bleDeviceList.size BleScanAndConnectCallback.onScanFinished bleDeviceList.get BleScanAndConnectCallback.onScanFinished Looper.getMainLooper Handler Runnable.new Runnable.postDelayed mBleScanPresenter.getBleScanPresenterImp BleScanAndConnectCallback.onScanFinished
Tokens: handler ism presenter need scan main looper finished delayed imp 100 runnable post null size get callback ble device connect

ID : 358
Received Java Code:@Override public void run(){	  BleManager.getInstance().connect(list.get(0),callback);	}
Method Name:run
API seq: BleManager.getInstance list.get list.connect
Tokens: instance manager get callback ble connect

ID : 359
Received Java Code:public void scan(UUID[] serviceUuids,String[] names,String mac,boolean fuzzy,long timeOut,final BleScanCallback callback){	  startLeScan(serviceUuids,names,mac,fuzzy,false,timeOut,callback);	}
Method Name:scan
API seq: startLeScan
Tokens: names service false start scan le callback time mac fuzzy uuids out

ID : 360
Received Java Code:public void scanAndConnect(UUID[] serviceUuids,String[] names,String mac,boolean fuzzy,long timeOut,BleScanAndConnectCallback callback){	  startLeScan(serviceUuids,names,mac,fuzzy,true,timeOut,callback);	}
Method Name:scan and connect
API seq: startLeScan
Tokens: names service true start scan le callback time mac fuzzy uuids out

ID : 361
Received Java Code:private synchronized void startLeScan(UUID[] serviceUuids,String[] names,String mac,boolean fuzzy,boolean needConnect,long timeOut,BleScanPresenterImp imp){	  if (mBleScanState != BleScanState.STATE_IDLE) {	    BleLog.w("scan action already exists, complete the previous scan action first");	    if (imp != null) {	      imp.onScanStarted(false);	    }	    return;	  }	  mBleScanPresenter.prepare(names,mac,fuzzy,needConnect,timeOut,imp);	  boolean success=BleManager.getInstance().getBluetoothAdapter().startLeScan(serviceUuids,mBleScanPresenter);	  mBleScanState=success ? BleScanState.STATE_SCANNING : BleScanState.STATE_IDLE;	  mBleScanPresenter.notifyScanStarted(success);	}
Method Name:start le scan
API seq: BleLog.w BleScanPresenterImp.onScanStarted mBleScanPresenter.prepare BleManager.getInstance BleManager.getBluetoothAdapter BleManager.startLeScan mBleScanPresenter.notifyScanStarted
Tokens: prepare instance log scanning scan imp mac notify out get ble state connect fuzzy adapter manager presenter need idle false start started names boolean bluetooth null service success le time uuids

ID : 362
Received Java Code:public synchronized void stopLeScan(){	  BleManager.getInstance().getBluetoothAdapter().stopLeScan(mBleScanPresenter);	  mBleScanState=BleScanState.STATE_IDLE;	  mBleScanPresenter.notifyScanStopped();	}
Method Name:stop le scan
API seq: BleManager.getInstance BleManager.getBluetoothAdapter BleManager.stopLeScan mBleScanPresenter.notifyScanStopped
Tokens: stopped adapter instance manager presenter idle scan notify bluetooth stop get le ble state

ID : 363
Received Java Code:public BleScanState getScanState(){	  return mBleScanState;	}
Method Name:get scan state
API seq:
Tokens: scan ble state

ID : 364
Received Java Code:public abstract void onRssiFailure(BleException exception);
Method Name:on rssi failure
API seq: onRssiFailure
Tokens: rssi failure ble abstract

ID : 365
Received Java Code:public abstract void onRssiSuccess(int rssi);
Method Name:on rssi success
API seq: onRssiSuccess
Tokens: rssi success abstract

ID : 366
Received Java Code:public abstract void onIndicateSuccess();
Method Name:on indicate success
API seq: onIndicateSuccess
Tokens: success indicate abstract

ID : 367
Received Java Code:public abstract void onIndicateFailure(BleException exception);
Method Name:on indicate failure
API seq: onIndicateFailure
Tokens: failure indicate ble abstract

ID : 368
Received Java Code:public abstract void onCharacteristicChanged(byte[] data);
Method Name:on characteristic changed
API seq: onCharacteristicChanged
Tokens: data byte abstract characteristic changed

ID : 369
Received Java Code:public abstract void onSetMTUFailure(BleException exception);
Method Name:on set mtufailure
API seq: onSetMTUFailure
Tokens: mtufailure ble abstract

ID : 370
Received Java Code:public abstract void onMtuChanged(int mtu);
Method Name:on mtu changed
API seq: onMtuChanged
Tokens: abstract mtu changed

ID : 371
Received Java Code:public abstract void onScanFinished(List<BleDevice> scanResultList);
Method Name:on scan finished
API seq: onScanFinished
Tokens: result scan finished ble abstract device

ID : 372
Received Java Code:public void onLeScan(BleDevice bleDevice){	}
Method Name:on le scan
API seq:
Tokens:

ID : 373
Received Java Code:public abstract void onReadSuccess(byte[] data);
Method Name:on read success
API seq: onReadSuccess
Tokens: read data byte success abstract

ID : 374
Received Java Code:public abstract void onReadFailure(BleException exception);
Method Name:on read failure
API seq: onReadFailure
Tokens: read failure ble abstract

ID : 375
Received Java Code:void onScanStarted(boolean success);
Method Name:on scan started
API seq: onScanStarted
Tokens: boolean success scan started

ID : 376
Received Java Code:void onScanning(BleDevice bleDevice);
Method Name:on scanning
API seq: onScanning
Tokens: scanning ble device

ID : 377
Received Java Code:public abstract void onWriteSuccess(int current,int total,byte[] justWrite);
Method Name:on write success
API seq: onWriteSuccess
Tokens: current total byte success abstract write just

ID : 378
Received Java Code:public abstract void onWriteFailure(BleException exception);
Method Name:on write failure
API seq: onWriteFailure
Tokens: failure ble abstract write

ID : 379
Received Java Code:public abstract void onNotifySuccess();
Method Name:on notify success
API seq: onNotifySuccess
Tokens: success abstract notify

ID : 380
Received Java Code:public abstract void onNotifyFailure(BleException exception);
Method Name:on notify failure
API seq: onNotifyFailure
Tokens: failure ble abstract notify

ID : 381
Received Java Code:public abstract void onCharacteristicChanged(byte[] data);
Method Name:on characteristic changed
API seq: onCharacteristicChanged
Tokens: data byte abstract characteristic changed

ID : 382
Received Java Code:public abstract void onStartConnect();
Method Name:on start connect
API seq: onStartConnect
Tokens: start abstract connect

ID : 383
Received Java Code:public abstract void onConnectFail(BleDevice bleDevice,BleException exception);
Method Name:on connect fail
API seq: onConnectFail
Tokens: fail ble abstract device connect

ID : 384
Received Java Code:public abstract void onConnectSuccess(BleDevice bleDevice,BluetoothGatt gatt,int status);
Method Name:on connect success
API seq: onConnectSuccess
Tokens: bluetooth success gatt ble abstract device connect status

ID : 385
Received Java Code:public abstract void onDisConnected(boolean isActiveDisConnected,BleDevice device,BluetoothGatt gatt,int status);
Method Name:on dis connected
API seq: onDisConnected
Tokens: connected boolean bluetooth active gatt ble abstract device dis status

ID : 386
Received Java Code:public abstract void onScanFinished(BleDevice scanResult);
Method Name:on scan finished
API seq: onScanFinished
Tokens: result scan finished ble abstract device

ID : 387
Received Java Code:public void onLeScan(BleDevice bleDevice){	}
Method Name:on le scan
API seq:
Tokens:

ID : 388
Received Java Code:public String getKey(){	  return key;	}
Method Name:get key
API seq:
Tokens: key

ID : 389
Received Java Code:public void setKey(String key){	  this.key=key;	}
Method Name:set key
API seq:
Tokens: key

ID : 390
Received Java Code:public Handler getHandler(){	  return handler;	}
Method Name:get handler
API seq:
Tokens: handler

ID : 391
Received Java Code:public void setHandler(Handler handler){	  this.handler=handler;	}
Method Name:set handler
API seq:
Tokens: handler

ID : 392
Received Java Code:public MultipleBluetoothController(){	  bleLruHashMap=new BleLruHashMap<>(BleManager.getInstance().getMaxConnectCount());	  bleTempHashMap=new HashMap<>();	}
Method Name:multiple bluetooth controller
API seq: BleManager.getInstance BleManager.getMaxConnectCount
Tokens: temp instance manager max get count ble map connect lru

ID : 393
Received Java Code:public synchronized BleBluetooth buildConnectingBle(BleDevice bleDevice){	  BleBluetooth bleBluetooth=new BleBluetooth(bleDevice);	  if (!bleTempHashMap.containsKey(bleBluetooth.getDeviceKey())) {	    bleTempHashMap.put(bleBluetooth.getDeviceKey(),bleBluetooth);	  }	  return bleBluetooth;	}
Method Name:build connecting ble
API seq: BleBluetooth BleBluetooth.getDeviceKey bleTempHashMap.containsKey BleBluetooth.getDeviceKey bleTempHashMap.put
Tokens: temp contains bluetooth get ble map device key put

ID : 394
Received Java Code:public synchronized void removeConnectingBle(BleBluetooth bleBluetooth){	  if (bleBluetooth == null) {	    return;	  }	  if (bleTempHashMap.containsKey(bleBluetooth.getDeviceKey())) {	    bleTempHashMap.remove(bleBluetooth.getDeviceKey());	  }	}
Method Name:remove connecting ble
API seq: BleBluetooth.getDeviceKey bleTempHashMap.containsKey BleBluetooth.getDeviceKey bleTempHashMap.remove
Tokens: temp contains bluetooth null get ble map device key remove

ID : 395
Received Java Code:public synchronized void addBleBluetooth(BleBluetooth bleBluetooth){	  if (bleBluetooth == null) {	    return;	  }	  if (!bleLruHashMap.containsKey(bleBluetooth.getDeviceKey())) {	    bleLruHashMap.put(bleBluetooth.getDeviceKey(),bleBluetooth);	  }	}
Method Name:add ble bluetooth
API seq: BleBluetooth.getDeviceKey bleLruHashMap.containsKey BleBluetooth.getDeviceKey bleLruHashMap.put
Tokens: contains bluetooth null get ble map device key lru put

ID : 396
Received Java Code:public synchronized void removeBleBluetooth(BleBluetooth bleBluetooth){	  if (bleBluetooth == null) {	    return;	  }	  if (bleLruHashMap.containsKey(bleBluetooth.getDeviceKey())) {	    bleLruHashMap.remove(bleBluetooth.getDeviceKey());	  }	}
Method Name:remove ble bluetooth
API seq: BleBluetooth.getDeviceKey bleLruHashMap.containsKey BleBluetooth.getDeviceKey bleLruHashMap.remove
Tokens: contains bluetooth null get ble map device key lru remove

ID : 397
Received Java Code:public synchronized boolean isContainDevice(BleDevice bleDevice){	  return bleDevice != null && bleLruHashMap.containsKey(bleDevice.getKey());	}
Method Name:is contain device
API seq: BleDevice.getKey bleLruHashMap.containsKey
Tokens: contains null get ble device map key lru

ID : 398
Received Java Code:public synchronized boolean isContainDevice(BluetoothDevice bluetoothDevice){	  return bluetoothDevice != null && bleLruHashMap.containsKey(bluetoothDevice.getName() + bluetoothDevice.getAddress());	}
Method Name:is contain device
API seq: BluetoothDevice.getName BluetoothDevice.getAddress bleLruHashMap.containsKey
Tokens: contains address null bluetooth get name ble device map key lru

ID : 399
Received Java Code:public synchronized BleBluetooth getBleBluetooth(BleDevice bleDevice){	  if (bleDevice != null) {	    if (bleLruHashMap.containsKey(bleDevice.getKey())) {	      return bleLruHashMap.get(bleDevice.getKey());	    }	  }	  return null;	}
Method Name:get ble bluetooth
API seq: BleDevice.getKey bleLruHashMap.containsKey BleDevice.getKey bleLruHashMap.get
Tokens: contains null get ble device map key lru

ID : 400
Received Java Code:public synchronized void disconnect(BleDevice bleDevice){	  if (isContainDevice(bleDevice)) {	    getBleBluetooth(bleDevice).disconnect();	  }	}
Method Name:disconnect
API seq: isContainDevice getBleBluetooth getBleBluetooth.disconnect
Tokens: disconnect contain bluetooth get ble device

ID : 401
Received Java Code:public synchronized void disconnectAllDevice(){	  for (  Map.Entry<String,BleBluetooth> stringBleBluetoothEntry : bleLruHashMap.entrySet()) {	    stringBleBluetoothEntry.getValue().disconnect();	  }	  bleLruHashMap.clear();	}
Method Name:disconnect all device
API seq: bleLruHashMap.entrySet stringBleBluetoothEntry.getValue stringBleBluetoothEntry.disconnect bleLruHashMap.clear
Tokens: disconnect entry bluetooth get clear ble value map lru

ID : 402
Received Java Code:public synchronized void destroy(){	  for (  Map.Entry<String,BleBluetooth> stringBleBluetoothEntry : bleLruHashMap.entrySet()) {	    stringBleBluetoothEntry.getValue().destroy();	  }	  bleLruHashMap.clear();	  for (  Map.Entry<String,BleBluetooth> stringBleBluetoothEntry : bleTempHashMap.entrySet()) {	    stringBleBluetoothEntry.getValue().destroy();	  }	  bleTempHashMap.clear();	}
Method Name:destroy
API seq: bleLruHashMap.entrySet stringBleBluetoothEntry.getValue stringBleBluetoothEntry.destroy bleLruHashMap.clear bleTempHashMap.entrySet stringBleBluetoothEntry.getValue stringBleBluetoothEntry.destroy bleTempHashMap.clear
Tokens: entry temp bluetooth get clear destroy ble map value lru

ID : 403
Received Java Code:public synchronized List<BleBluetooth> getBleBluetoothList(){	  List<BleBluetooth> bleBluetoothList=new ArrayList<>(bleLruHashMap.values());	  Collections.sort(bleBluetoothList,new Comparator<BleBluetooth>(){	    @Override public int compare(    BleBluetooth lhs,    BleBluetooth rhs){	      return lhs.getDeviceKey().compareToIgnoreCase(rhs.getDeviceKey());	    }	  }	);	  return bleBluetoothList;	}
Method Name:get ble bluetooth list
API seq: bleLruHashMap.values Collections.sort compare BleBluetooth.getDeviceKey BleBluetooth.getDeviceKey BleBluetooth.compareToIgnoreCase
Tokens: compare values sort lru comparator bluetooth collections lhs get ignore ble override rhs map device key case

ID : 404
Received Java Code:@Override public int compare(BleBluetooth lhs,BleBluetooth rhs){	  return lhs.getDeviceKey().compareToIgnoreCase(rhs.getDeviceKey());	}
Method Name:compare
API seq: BleBluetooth.getDeviceKey BleBluetooth.getDeviceKey BleBluetooth.compareToIgnoreCase
Tokens: compare lhs get ignore rhs device key case

ID : 405
Received Java Code:public synchronized List<BleDevice> getDeviceList(){	  refreshConnectedDevice();	  List<BleDevice> deviceList=new ArrayList<>();	  for (  BleBluetooth BleBluetooth : getBleBluetoothList()) {	    if (BleBluetooth != null) {	      deviceList.add(BleBluetooth.getDevice());	    }	  }	  return deviceList;	}
Method Name:get device list
API seq: refreshConnectedDevice getBleBluetoothList BleBluetooth.getDevice deviceList.add
Tokens: add connected bluetooth null get refresh ble device

ID : 406
Received Java Code:public void refreshConnectedDevice(){	  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {	    List<BleBluetooth> bluetoothList=getBleBluetoothList();	    for (int i=0; bluetoothList != null && i < bluetoothList.size(); i++) {	      BleBluetooth bleBluetooth=bluetoothList.get(i);	      if (!BleManager.getInstance().isConnected(bleBluetooth.getDevice())) {	        removeBleBluetooth(bleBluetooth);	      }	    }	  }	}
Method Name:refresh connected device
API seq: getBleBluetoothList bluetoothList.size bluetoothList.get BleManager.getInstance BleBluetooth.getDevice BleBluetooth.isConnected removeBleBluetooth
Tokens: codes instance manager mr2 version remove connected bluetooth null size build get ble jelly sdk device bean

ID : 407
Received Java Code:public SplitWriter(){	  mHandlerThread=new HandlerThread("splitWriter");	  mHandlerThread.start();	  mHandler=new Handler(mHandlerThread.getLooper()){	    @Override public void handleMessage(    Message msg){	      super.handleMessage(msg);	      if (msg.what == BleMsg.MSG_SPLIT_WRITE) {	        write();	      }	    }	  }	;	}
Method Name:split writer
API seq: HandlerThread mHandlerThread.start mHandlerThread.getLooper Handler handleMessage super.handleMessage write
Tokens: msg handler start handle looper thread message super what split get ble override write

ID : 408
Received Java Code:@Override public void handleMessage(Message msg){	  super.handleMessage(msg);	  if (msg.what == BleMsg.MSG_SPLIT_WRITE) {	    write();	  }	}
Method Name:handle message
API seq: super.handleMessage write
Tokens: super msg what split ble handle message write

ID : 409
Received Java Code:public void splitWrite(BleBluetooth bleBluetooth,String uuid_service,String uuid_write,byte[] data,BleWriteCallback callback){	  mBleBluetooth=bleBluetooth;	  mUuid_service=uuid_service;	  mUuid_write=uuid_write;	  mData=data;	  mCount=BleManager.getInstance().getSplitWriteNum();	  mCallback=callback;	  splitWrite();	}
Method Name:split write
API seq: BleManager.getInstance BleManager.getSplitWriteNum splitWrite
Tokens: instance data manager num count uuid split bluetooth service get callback ble write muuid

ID : 410
Received Java Code:private void splitWrite(){	  if (mData == null) {	    throw new IllegalArgumentException("data is Null!");	  }	  if (mCount < 1) {	    throw new IllegalArgumentException("split count should higher than 0!");	  }	  mDataQueue=splitByte(mData,mCount);	  mTotalNum=mDataQueue.size();	  write();	}
Method Name:split write
API seq: IllegalArgumentException IllegalArgumentException splitByte mDataQueue.size write
Tokens: argument data byte num count illegal total split null size throw write queue

ID : 411
Received Java Code:private void write(){	  if (mDataQueue.peek() == null) {	    release();	  }	 else {	    byte[] data=mDataQueue.poll();	    mBleBluetooth.newBleConnector().withUUIDString(mUuid_service,mUuid_write).writeCharacteristic(data,new BleWriteCallback(){	      @Override public void onWriteSuccess(      int current,      int total,      byte[] justWrite){	        int position=mTotalNum - mDataQueue.size();	        if (mCallback != null) {	          mCallback.onWriteSuccess(position,mTotalNum,justWrite);	        }	        if (Looper.myLooper() != null && Looper.myLooper() == Looper.getMainLooper()) {	          write();	        }	 else {	          Message message=mHandler.obtainMessage(BleMsg.MSG_SPLIT_WRITE);	          mHandler.sendMessage(message);	        }	      }	      @Override public void onWriteFailure(      BleException exception){	        if (mCallback != null) {	          mCallback.onWriteFailure(new OtherException("exception occur while writing: " + exception.getDescription()));	        }	      }	    }	,mUuid_write);	  }	}
Method Name:write
API seq: mDataQueue.peek release mDataQueue.poll mBleBluetooth.newBleConnector mBleBluetooth.withUUIDString BleWriteCallback.new BleWriteCallback.writeCharacteristic
Tokens: data release byte poll characteristic peek connector null bluetooth service callback ble uuidstring write muuid queue

ID : 412
Received Java Code:@Override public void onWriteSuccess(int current,int total,byte[] justWrite){	  int position=mTotalNum - mDataQueue.size();	  if (mCallback != null) {	    mCallback.onWriteSuccess(position,mTotalNum,justWrite);	  }	  if (Looper.myLooper() != null && Looper.myLooper() == Looper.getMainLooper()) {	    write();	  }	 else {	    Message message=mHandler.obtainMessage(BleMsg.MSG_SPLIT_WRITE);	    mHandler.sendMessage(message);	  }	}
Method Name:on write success
API seq: mDataQueue.size mCallback.onWriteSuccess Looper.myLooper Looper.myLooper Looper.getMainLooper write mHandler.obtainMessage mHandler.sendMessage
Tokens: msg obtain handler data num looper main message my total split size null success get callback ble position send just write queue

ID : 413
Received Java Code:@Override public void onWriteFailure(BleException exception){	  if (mCallback != null) {	    mCallback.onWriteFailure(new OtherException("exception occur while writing: " + exception.getDescription()));	  }	}
Method Name:on write failure
API seq: BleException.getDescription OtherException.new mCallback.onWriteFailure
Tokens: other null failure get callback description write

ID : 414
Received Java Code:private void release(){	  mHandlerThread.quit();	  mHandler.removeCallbacksAndMessages(null);	}
Method Name:release
API seq: mHandlerThread.quit mHandler.removeCallbacksAndMessages
Tokens: handler null callbacks messages quit thread remove

ID : 415
Received Java Code:private static Queue<byte[]> splitByte(byte[] data,int count){	  if (count > 20) {	    BleLog.w("Be careful: split count beyond 20! Ensure MTU higher than 23!");	  }	  Queue<byte[]> byteQueue=new LinkedList<>();	  if (data != null) {	    int index=0;	    do {	      byte[] rawData=new byte[data.length - index];	      byte[] newData;	      System.arraycopy(data,index,rawData,0,data.length - index);	      if (rawData.length <= count) {	        newData=new byte[rawData.length];	        System.arraycopy(rawData,0,newData,0,rawData.length);	        index+=rawData.length;	      }	 else {	        newData=new byte[count];	        System.arraycopy(data,index,newData,0,count);	        index+=count;	      }	      byteQueue.offer(newData);	    }	 while (index < data.length);	  }	  return byteQueue;	}
Method Name:split byte
API seq: BleLog.w System.arraycopy System.arraycopy System.arraycopy byteQueue.offer
Tokens: data log byte count length raw index do offer system null arraycopy ble queue 20 linked

ID : 416
Received Java Code:public BleBluetooth(BleDevice bleDevice){	  this.bleDevice=bleDevice;	}
Method Name:ble bluetooth
API seq:
Tokens: ble device

ID : 417
Received Java Code:public BleConnector newBleConnector(){	  return new BleConnector(this);	}
Method Name:new ble connector
API seq: BleConnector
Tokens: connector ble

ID : 418
Received Java Code:public synchronized void addConnectGattCallback(BleGattCallback callback){	  bleGattCallback=callback;	}
Method Name:add connect gatt callback
API seq:
Tokens: callback ble gatt

ID : 419
Received Java Code:public synchronized void removeConnectGattCallback(){	  bleGattCallback=null;	}
Method Name:remove connect gatt callback
API seq:
Tokens: null callback ble gatt

ID : 420
Received Java Code:public synchronized void addNotifyCallback(String uuid,BleNotifyCallback bleNotifyCallback){	  bleNotifyCallbackHashMap.put(uuid,bleNotifyCallback);	}
Method Name:add notify callback
API seq: bleNotifyCallbackHashMap.put
Tokens: callback ble map uuid notify put

ID : 421
Received Java Code:public synchronized void addIndicateCallback(String uuid,BleIndicateCallback bleIndicateCallback){	  bleIndicateCallbackHashMap.put(uuid,bleIndicateCallback);	}
Method Name:add indicate callback
API seq: bleIndicateCallbackHashMap.put
Tokens: callback ble indicate uuid map put

ID : 422
Received Java Code:public synchronized void addWriteCallback(String uuid,BleWriteCallback bleWriteCallback){	  bleWriteCallbackHashMap.put(uuid,bleWriteCallback);	}
Method Name:add write callback
API seq: bleWriteCallbackHashMap.put
Tokens: callback ble write map uuid put

ID : 423
Received Java Code:public synchronized void addReadCallback(String uuid,BleReadCallback bleReadCallback){	  bleReadCallbackHashMap.put(uuid,bleReadCallback);	}
Method Name:add read callback
API seq: bleReadCallbackHashMap.put
Tokens: read callback ble map uuid put

ID : 424
Received Java Code:public synchronized void removeNotifyCallback(String uuid){	  if (bleNotifyCallbackHashMap.containsKey(uuid))   bleNotifyCallbackHashMap.remove(uuid);	}
Method Name:remove notify callback
API seq:
Tokens: contains callback ble map uuid key notify remove

ID : 425
Received Java Code:public synchronized void removeIndicateCallback(String uuid){	  if (bleIndicateCallbackHashMap.containsKey(uuid))   bleIndicateCallbackHashMap.remove(uuid);	}
Method Name:remove indicate callback
API seq:
Tokens: contains callback ble indicate uuid map key remove

ID : 426
Received Java Code:public synchronized void removeWriteCallback(String uuid){	  if (bleWriteCallbackHashMap.containsKey(uuid))   bleWriteCallbackHashMap.remove(uuid);	}
Method Name:remove write callback
API seq:
Tokens: contains callback ble write map uuid key remove

ID : 427
Received Java Code:public synchronized void removeReadCallback(String uuid){	  if (bleReadCallbackHashMap.containsKey(uuid))   bleReadCallbackHashMap.remove(uuid);	}
Method Name:remove read callback
API seq:
Tokens: contains read callback ble map uuid key remove

ID : 428
Received Java Code:public synchronized void clearCharacterCallback(){	  if (bleNotifyCallbackHashMap != null)   bleNotifyCallbackHashMap.clear();	  if (bleIndicateCallbackHashMap != null)   bleIndicateCallbackHashMap.clear();	  if (bleWriteCallbackHashMap != null)   bleWriteCallbackHashMap.clear();	  if (bleReadCallbackHashMap != null)   bleReadCallbackHashMap.clear();	}
Method Name:clear character callback
API seq:
Tokens: read null clear callback ble indicate map write notify

ID : 429
Received Java Code:public synchronized void addRssiCallback(BleRssiCallback callback){	  bleRssiCallback=callback;	}
Method Name:add rssi callback
API seq:
Tokens: rssi callback ble

ID : 430
Received Java Code:public synchronized void removeRssiCallback(){	  bleRssiCallback=null;	}
Method Name:remove rssi callback
API seq:
Tokens: rssi null callback ble

ID : 431
Received Java Code:public synchronized void addMtuChangedCallback(BleMtuChangedCallback callback){	  bleMtuChangedCallback=callback;	}
Method Name:add mtu changed callback
API seq:
Tokens: callback ble mtu changed

ID : 432
Received Java Code:public synchronized void removeMtuChangedCallback(){	  bleMtuChangedCallback=null;	}
Method Name:remove mtu changed callback
API seq:
Tokens: null callback ble mtu changed

ID : 433
Received Java Code:public String getDeviceKey(){	  return bleDevice.getKey();	}
Method Name:get device key
API seq: bleDevice.getKey
Tokens: get ble device key

ID : 434
Received Java Code:public BleDevice getDevice(){	  return bleDevice;	}
Method Name:get device
API seq:
Tokens: ble device

ID : 435
Received Java Code:public BluetoothGatt getBluetoothGatt(){	  return bluetoothGatt;	}
Method Name:get bluetooth gatt
API seq:
Tokens: bluetooth gatt

ID : 436
Received Java Code:public synchronized BluetoothGatt connect(BleDevice bleDevice,boolean autoConnect,BleGattCallback callback){	  BleLog.i("connect device: " + bleDevice.getName() + "\nmac: "+ bleDevice.getMac()+ "\nautoConnect: "+ autoConnect+ "\ncurrentThread: "+ Thread.currentThread().getId());	  addConnectGattCallback(callback);	  lastState=LastState.CONNECT_CONNECTING;	  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {	    bluetoothGatt=bleDevice.getDevice().connectGatt(BleManager.getInstance().getContext(),autoConnect,coreGattCallback,TRANSPORT_LE);	  }	 else {	    bluetoothGatt=bleDevice.getDevice().connectGatt(BleManager.getInstance().getContext(),autoConnect,coreGattCallback);	  }	  if (bluetoothGatt != null) {	    if (bleGattCallback != null) {	      bleGattCallback.onStartConnect();	    }	    Message message=mainHandler.obtainMessage();	    message.what=BleMsg.MSG_CONNECT_OVER_TIME;	    mainHandler.sendMessageDelayed(message,BleManager.getInstance().getConnectOverTime());	  }	 else {	    disconnectGatt();	    refreshDeviceCache();	    closeBluetoothGatt();	    lastState=LastState.CONNECT_FAILURE;	    BleManager.getInstance().getMultipleBluetoothController().removeConnectingBle(BleBluetooth.this);	    if (bleGattCallback != null)     bleGattCallback.onConnectFail(bleDevice,new OtherException("GATT connect exception occurred!"));	  }	  return bluetoothGatt;	}
Method Name:connect
API seq: BleDevice.getName BleDevice.getMac Thread.currentThread Thread.getId BleLog.i addConnectGattCallback BleDevice.getDevice BleManager.getInstance BleManager.getContext BleManager.connectGatt BleDevice.getDevice BleManager.getInstance BleManager.getContext BleManager.connectGatt bleGattCallback.onStartConnect mainHandler.obtainMessage BleManager.getInstance BleManager.getConnectOverTime mainHandler.sendMessageDelayed disconnectGatt refreshDeviceCache closeBluetoothGatt BleManager.getInstance BleManager.getMultipleBluetoothController BleManager.removeConnectingBle OtherException.new
Tokens: msg codes handler disconnect auto instance delayed main context state id obtain add cache last version fail core null failure name sdk send device other log mac remove current get ble close connect over controller manager multiple start refresh gatt transport thread message what bluetooth build le callback time connecting

ID : 437
Received Java Code:public synchronized void disconnect(){	  isActiveDisconnect=true;	  disconnectGatt();	}
Method Name:disconnect
API seq: disconnectGatt
Tokens: disconnect true active gatt

ID : 438
Received Java Code:public synchronized void destroy(){	  lastState=LastState.CONNECT_IDLE;	  disconnectGatt();	  refreshDeviceCache();	  closeBluetoothGatt();	  removeConnectGattCallback();	  removeRssiCallback();	  removeMtuChangedCallback();	  clearCharacterCallback();	  mainHandler.removeCallbacksAndMessages(null);	}
Method Name:destroy
API seq: disconnectGatt refreshDeviceCache closeBluetoothGatt removeConnectGattCallback removeRssiCallback removeMtuChangedCallback clearCharacterCallback mainHandler.removeCallbacksAndMessages
Tokens: handler disconnect cache rssi last idle clear refresh callbacks gatt main remove mtu character bluetooth null callback messages state device close connect changed

ID : 439
Received Java Code:private synchronized void disconnectGatt(){	  if (bluetoothGatt != null) {	    bluetoothGatt.disconnect();	  }	}
Method Name:disconnect gatt
API seq: bluetoothGatt.disconnect
Tokens: disconnect null bluetooth gatt

ID : 440
Received Java Code:private synchronized void refreshDeviceCache(){	  try {	    final Method refresh=BluetoothGatt.class.getMethod("refresh");	    if (refresh != null && bluetoothGatt != null) {	      boolean success=(Boolean)refresh.invoke(bluetoothGatt);	      BleLog.i("refreshDeviceCache, is success:  " + success);	    }	  }	 catch (  Exception e) {	    BleLog.i("exception occur while refreshing device: " + e.getMessage());	    e.printStackTrace();	  }	}
Method Name:refresh device cache
API seq: BluetoothGatt.class.getMethod Method.invoke BleLog.i Exception.getMessage BleLog.i Exception.printStackTrace
Tokens: stack method log refresh invoke gatt message print trace boolean null bluetooth success get ble class

ID : 441
Received Java Code:private synchronized void closeBluetoothGatt(){	  if (bluetoothGatt != null) {	    bluetoothGatt.close();	  }	}
Method Name:close bluetooth gatt
API seq: bluetoothGatt.close
Tokens: null bluetooth gatt close

ID : 442
Received Java Code:BleConnector(BleBluetooth bleBluetooth){	  this.mBleBluetooth=bleBluetooth;	  this.mBluetoothGatt=bleBluetooth.getBluetoothGatt();	  this.mHandler=new Handler(Looper.getMainLooper()){	    @Override public void handleMessage(    Message msg){	      super.handleMessage(msg);	switch (msg.what) {	case BleMsg.MSG_CHA_NOTIFY_START:	{	          BleNotifyCallback notifyCallback=(BleNotifyCallback)msg.obj;	          if (notifyCallback != null)           notifyCallback.onNotifyFailure(new TimeoutException());	          break;	        }	case BleMsg.MSG_CHA_NOTIFY_RESULT:	{	        notifyMsgInit();	        BleNotifyCallback notifyCallback=(BleNotifyCallback)msg.obj;	        Bundle bundle=msg.getData();	        int status=bundle.getInt(BleMsg.KEY_NOTIFY_BUNDLE_STATUS);	        if (notifyCallback != null) {	          if (status == BluetoothGatt.GATT_SUCCESS) {	            notifyCallback.onNotifySuccess();	          }	 else {	            notifyCallback.onNotifyFailure(new GattException(status));	          }	        }	        break;	      }	case BleMsg.MSG_CHA_NOTIFY_DATA_CHANGE:	{	      BleNotifyCallback notifyCallback=(BleNotifyCallback)msg.obj;	      Bundle bundle=msg.getData();	      byte[] value=bundle.getByteArray(BleMsg.KEY_NOTIFY_BUNDLE_VALUE);	      if (notifyCallback != null) {	        notifyCallback.onCharacteristicChanged(value);	      }	      break;	    }	case BleMsg.MSG_CHA_INDICATE_START:	{	    BleIndicateCallback indicateCallback=(BleIndicateCallback)msg.obj;	    if (indicateCallback != null)     indicateCallback.onIndicateFailure(new TimeoutException());	    break;	  }	case BleMsg.MSG_CHA_INDICATE_RESULT:	{	  indicateMsgInit();	  BleIndicateCallback indicateCallback=(BleIndicateCallback)msg.obj;	  Bundle bundle=msg.getData();	  int status=bundle.getInt(BleMsg.KEY_INDICATE_BUNDLE_STATUS);	  if (indicateCallback != null) {	    if (status == BluetoothGatt.GATT_SUCCESS) {	      indicateCallback.onIndicateSuccess();	    }	 else {	      indicateCallback.onIndicateFailure(new GattException(status));	    }	  }	  break;	}	case BleMsg.MSG_CHA_INDICATE_DATA_CHANGE:	{	BleIndicateCallback indicateCallback=(BleIndicateCallback)msg.obj;	Bundle bundle=msg.getData();	byte[] value=bundle.getByteArray(BleMsg.KEY_INDICATE_BUNDLE_VALUE);	if (indicateCallback != null) {	  indicateCallback.onCharacteristicChanged(value);	}	break;	}	case BleMsg.MSG_CHA_WRITE_START:	{	BleWriteCallback writeCallback=(BleWriteCallback)msg.obj;	if (writeCallback != null) {	writeCallback.onWriteFailure(new TimeoutException());	}	break;	}	case BleMsg.MSG_CHA_WRITE_RESULT:	{	writeMsgInit();	BleWriteCallback writeCallback=(BleWriteCallback)msg.obj;	Bundle bundle=msg.getData();	int status=bundle.getInt(BleMsg.KEY_WRITE_BUNDLE_STATUS);	byte[] value=bundle.getByteArray(BleMsg.KEY_WRITE_BUNDLE_VALUE);	if (writeCallback != null) {	if (status == BluetoothGatt.GATT_SUCCESS) {	writeCallback.onWriteSuccess(BleWriteState.DATA_WRITE_SINGLE,BleWriteState.DATA_WRITE_SINGLE,value);	}	 else {	writeCallback.onWriteFailure(new GattException(status));	}	}	break;	}	case BleMsg.MSG_CHA_READ_START:	{	BleReadCallback readCallback=(BleReadCallback)msg.obj;	if (readCallback != null) readCallback.onReadFailure(new TimeoutException());	break;	}	case BleMsg.MSG_CHA_READ_RESULT:	{	readMsgInit();	BleReadCallback readCallback=(BleReadCallback)msg.obj;	Bundle bundle=msg.getData();	int status=bundle.getInt(BleMsg.KEY_READ_BUNDLE_STATUS);	byte[] value=bundle.getByteArray(BleMsg.KEY_READ_BUNDLE_VALUE);	if (readCallback != null) {	if (status == BluetoothGatt.GATT_SUCCESS) {	readCallback.onReadSuccess(value);	}	 else {	readCallback.onReadFailure(new GattException(status));	}	}	break;	}	case BleMsg.MSG_READ_RSSI_START:	{	BleRssiCallback rssiCallback=(BleRssiCallback)msg.obj;	if (rssiCallback != null) rssiCallback.onRssiFailure(new TimeoutException());	break;	}	case BleMsg.MSG_READ_RSSI_RESULT:	{	rssiMsgInit();	BleRssiCallback rssiCallback=(BleRssiCallback)msg.obj;	Bundle bundle=msg.getData();	int status=bundle.getInt(BleMsg.KEY_READ_RSSI_BUNDLE_STATUS);	int value=bundle.getInt(BleMsg.KEY_READ_RSSI_BUNDLE_VALUE);	if (rssiCallback != null) {	if (status == BluetoothGatt.GATT_SUCCESS) {	rssiCallback.onRssiSuccess(value);	}	 else {	rssiCallback.onRssiFailure(new GattException(status));	}	}	break;	}	case BleMsg.MSG_SET_MTU_START:	{	BleMtuChangedCallback mtuChangedCallback=(BleMtuChangedCallback)msg.obj;	if (mtuChangedCallback != null) mtuChangedCallback.onSetMTUFailure(new TimeoutException());	break;	}	case BleMsg.MSG_SET_MTU_RESULT:	{	mtuChangedMsgInit();	BleMtuChangedCallback mtuChangedCallback=(BleMtuChangedCallback)msg.obj;	Bundle bundle=msg.getData();	int status=bundle.getInt(BleMsg.KEY_SET_MTU_BUNDLE_STATUS);	int value=bundle.getInt(BleMsg.KEY_SET_MTU_BUNDLE_VALUE);	if (mtuChangedCallback != null) {	if (status == BluetoothGatt.GATT_SUCCESS) {	mtuChangedCallback.onMtuChanged(value);	}	 else {	mtuChangedCallback.onSetMTUFailure(new GattException(status));	}	}	break;	}	}	}	}	;	}
Method Name:handler
API seq: BleBluetooth.getBluetoothGatt Looper.getMainLooper Handler handleMessage super.handleMessage switch TimeoutException.new notifyMsgInit Message.getData Bundle.getInt BleNotifyCallback.onNotifySuccess GattException.new BleNotifyCallback.onNotifyFailure Message.getData Bundle.getByteArray BleNotifyCallback.onCharacteristicChanged TimeoutException.new indicateMsgInit Message.getData Bundle.getInt BleIndicateCallback.onIndicateSuccess GattException.new BleIndicateCallback.onIndicateFailure Message.getData Bundle.getByteArray BleIndicateCallback.onCharacteristicChanged TimeoutException.new BleWriteCallback.onWriteFailure writeMsgInit Message.getData Bundle.getInt Bundle.getByteArray BleWriteCallback.onWriteSuccess GattException.new BleWriteCallback.onWriteFailure TimeoutException.new readMsgInit Message.getData Bundle.getInt Bundle.getByteArray BleReadCallback.onReadSuccess GattException.new BleReadCallback.onReadFailure TimeoutException.new rssiMsgInit Message.getData Bundle.getInt Bundle.getInt BleRssiCallback.onRssiSuccess GattException.new BleRssiCallback.onRssiFailure TimeoutException.new mtuChangedMsgInit Message.getData Bundle.getInt Bundle.getInt BleMtuChangedCallback.onMtuChanged GattException.new BleMtuChangedCallback.onSetMTUFailure
Tokens: msg handler data looper main notify characteristic timeout switch result get ble indicate override state cha bundle write value case key init rssi read break byte change start gatt handle message mtu single super mtufailure what bluetooth null failure success obj callback changed status

ID : 443
Received Java Code:@Override public void handleMessage(Message msg){	  super.handleMessage(msg);	switch (msg.what) {	case BleMsg.MSG_CHA_NOTIFY_START:	{	      BleNotifyCallback notifyCallback=(BleNotifyCallback)msg.obj;	      if (notifyCallback != null)       notifyCallback.onNotifyFailure(new TimeoutException());	      break;	    }	case BleMsg.MSG_CHA_NOTIFY_RESULT:	{	    notifyMsgInit();	    BleNotifyCallback notifyCallback=(BleNotifyCallback)msg.obj;	    Bundle bundle=msg.getData();	    int status=bundle.getInt(BleMsg.KEY_NOTIFY_BUNDLE_STATUS);	    if (notifyCallback != null) {	      if (status == BluetoothGatt.GATT_SUCCESS) {	        notifyCallback.onNotifySuccess();	      }	 else {	        notifyCallback.onNotifyFailure(new GattException(status));	      }	    }	    break;	  }	case BleMsg.MSG_CHA_NOTIFY_DATA_CHANGE:	{	  BleNotifyCallback notifyCallback=(BleNotifyCallback)msg.obj;	  Bundle bundle=msg.getData();	  byte[] value=bundle.getByteArray(BleMsg.KEY_NOTIFY_BUNDLE_VALUE);	  if (notifyCallback != null) {	    notifyCallback.onCharacteristicChanged(value);	  }	  break;	}	case BleMsg.MSG_CHA_INDICATE_START:	{	BleIndicateCallback indicateCallback=(BleIndicateCallback)msg.obj;	if (indicateCallback != null) indicateCallback.onIndicateFailure(new TimeoutException());	break;	}	case BleMsg.MSG_CHA_INDICATE_RESULT:	{	indicateMsgInit();	BleIndicateCallback indicateCallback=(BleIndicateCallback)msg.obj;	Bundle bundle=msg.getData();	int status=bundle.getInt(BleMsg.KEY_INDICATE_BUNDLE_STATUS);	if (indicateCallback != null) {	if (status == BluetoothGatt.GATT_SUCCESS) {	  indicateCallback.onIndicateSuccess();	}	 else {	  indicateCallback.onIndicateFailure(new GattException(status));	}	}	break;	}	case BleMsg.MSG_CHA_INDICATE_DATA_CHANGE:	{	BleIndicateCallback indicateCallback=(BleIndicateCallback)msg.obj;	Bundle bundle=msg.getData();	byte[] value=bundle.getByteArray(BleMsg.KEY_INDICATE_BUNDLE_VALUE);	if (indicateCallback != null) {	indicateCallback.onCharacteristicChanged(value);	}	break;	}	case BleMsg.MSG_CHA_WRITE_START:	{	BleWriteCallback writeCallback=(BleWriteCallback)msg.obj;	if (writeCallback != null) {	writeCallback.onWriteFailure(new TimeoutException());	}	break;	}	case BleMsg.MSG_CHA_WRITE_RESULT:	{	writeMsgInit();	BleWriteCallback writeCallback=(BleWriteCallback)msg.obj;	Bundle bundle=msg.getData();	int status=bundle.getInt(BleMsg.KEY_WRITE_BUNDLE_STATUS);	byte[] value=bundle.getByteArray(BleMsg.KEY_WRITE_BUNDLE_VALUE);	if (writeCallback != null) {	if (status == BluetoothGatt.GATT_SUCCESS) {	writeCallback.onWriteSuccess(BleWriteState.DATA_WRITE_SINGLE,BleWriteState.DATA_WRITE_SINGLE,value);	}	 else {	writeCallback.onWriteFailure(new GattException(status));	}	}	break;	}	case BleMsg.MSG_CHA_READ_START:	{	BleReadCallback readCallback=(BleReadCallback)msg.obj;	if (readCallback != null) readCallback.onReadFailure(new TimeoutException());	break;	}	case BleMsg.MSG_CHA_READ_RESULT:	{	readMsgInit();	BleReadCallback readCallback=(BleReadCallback)msg.obj;	Bundle bundle=msg.getData();	int status=bundle.getInt(BleMsg.KEY_READ_BUNDLE_STATUS);	byte[] value=bundle.getByteArray(BleMsg.KEY_READ_BUNDLE_VALUE);	if (readCallback != null) {	if (status == BluetoothGatt.GATT_SUCCESS) {	readCallback.onReadSuccess(value);	}	 else {	readCallback.onReadFailure(new GattException(status));	}	}	break;	}	case BleMsg.MSG_READ_RSSI_START:	{	BleRssiCallback rssiCallback=(BleRssiCallback)msg.obj;	if (rssiCallback != null) rssiCallback.onRssiFailure(new TimeoutException());	break;	}	case BleMsg.MSG_READ_RSSI_RESULT:	{	rssiMsgInit();	BleRssiCallback rssiCallback=(BleRssiCallback)msg.obj;	Bundle bundle=msg.getData();	int status=bundle.getInt(BleMsg.KEY_READ_RSSI_BUNDLE_STATUS);	int value=bundle.getInt(BleMsg.KEY_READ_RSSI_BUNDLE_VALUE);	if (rssiCallback != null) {	if (status == BluetoothGatt.GATT_SUCCESS) {	rssiCallback.onRssiSuccess(value);	}	 else {	rssiCallback.onRssiFailure(new GattException(status));	}	}	break;	}	case BleMsg.MSG_SET_MTU_START:	{	BleMtuChangedCallback mtuChangedCallback=(BleMtuChangedCallback)msg.obj;	if (mtuChangedCallback != null) mtuChangedCallback.onSetMTUFailure(new TimeoutException());	break;	}	case BleMsg.MSG_SET_MTU_RESULT:	{	mtuChangedMsgInit();	BleMtuChangedCallback mtuChangedCallback=(BleMtuChangedCallback)msg.obj;	Bundle bundle=msg.getData();	int status=bundle.getInt(BleMsg.KEY_SET_MTU_BUNDLE_STATUS);	int value=bundle.getInt(BleMsg.KEY_SET_MTU_BUNDLE_VALUE);	if (mtuChangedCallback != null) {	if (status == BluetoothGatt.GATT_SUCCESS) {	mtuChangedCallback.onMtuChanged(value);	}	 else {	mtuChangedCallback.onSetMTUFailure(new GattException(status));	}	}	break;	}	}	}
Method Name:handle message
API seq: super.handleMessage switch TimeoutException.new notifyMsgInit Message.getData Bundle.getInt BleNotifyCallback.onNotifySuccess GattException.new BleNotifyCallback.onNotifyFailure Message.getData Bundle.getByteArray BleNotifyCallback.onCharacteristicChanged TimeoutException.new indicateMsgInit Message.getData Bundle.getInt BleIndicateCallback.onIndicateSuccess GattException.new BleIndicateCallback.onIndicateFailure Message.getData Bundle.getByteArray BleIndicateCallback.onCharacteristicChanged TimeoutException.new BleWriteCallback.onWriteFailure writeMsgInit Message.getData Bundle.getInt Bundle.getByteArray BleWriteCallback.onWriteSuccess GattException.new BleWriteCallback.onWriteFailure TimeoutException.new readMsgInit Message.getData Bundle.getInt Bundle.getByteArray BleReadCallback.onReadSuccess GattException.new BleReadCallback.onReadFailure TimeoutException.new rssiMsgInit Message.getData Bundle.getInt Bundle.getInt BleRssiCallback.onRssiSuccess GattException.new BleRssiCallback.onRssiFailure TimeoutException.new mtuChangedMsgInit Message.getData Bundle.getInt Bundle.getInt BleMtuChangedCallback.onMtuChanged GattException.new BleMtuChangedCallback.onSetMTUFailure
Tokens: msg data notify timeout characteristic switch result get ble indicate state cha bundle write value case key init rssi read break byte change start gatt handle message mtu single super mtufailure what null bluetooth success failure obj callback changed status

ID : 444
Received Java Code:private BleConnector withUUID(UUID serviceUUID,UUID characteristicUUID){	  if (serviceUUID != null && mBluetoothGatt != null) {	    mGattService=mBluetoothGatt.getService(serviceUUID);	  }	  if (mGattService != null && characteristicUUID != null) {	    mCharacteristic=mGattService.getCharacteristic(characteristicUUID);	  }	  return this;	}
Method Name:with uuid
API seq: mBluetoothGatt.getService mGattService.getCharacteristic
Tokens: null bluetooth service get gatt uuid characteristic

ID : 445
Received Java Code:public BleConnector withUUIDString(String serviceUUID,String characteristicUUID){	  return withUUID(formUUID(serviceUUID),formUUID(characteristicUUID));	}
Method Name:with uuidstring
API seq: formUUID formUUID withUUID
Tokens: form service uuid characteristic

ID : 446
Received Java Code:private UUID formUUID(String uuid){	  return uuid == null ? null : UUID.fromString(uuid);	}
Method Name:form uuid
API seq: UUID.fromString
Tokens: null from uuid

ID : 447
Received Java Code:public void enableCharacteristicNotify(BleNotifyCallback bleNotifyCallback,String uuid_notify){	  if (mCharacteristic != null && (mCharacteristic.getProperties() | BluetoothGattCharacteristic.PROPERTY_NOTIFY) > 0) {	    handleCharacteristicNotifyCallback(bleNotifyCallback,uuid_notify);	    setCharacteristicNotification(mBluetoothGatt,mCharacteristic,true,bleNotifyCallback);	  }	 else {	    if (bleNotifyCallback != null)     bleNotifyCallback.onNotifyFailure(new OtherException("this characteristic not support notify!"));	  }	}
Method Name:enable characteristic notify
API seq: handleCharacteristicNotifyCallback setCharacteristicNotification OtherException.new
Tokens: other gatt handle uuid characteristic notify notification bluetooth null failure get property true callback ble properties

ID : 448
Received Java Code:public boolean disableCharacteristicNotify(){	  if (mCharacteristic != null && (mCharacteristic.getProperties() | BluetoothGattCharacteristic.PROPERTY_NOTIFY) > 0) {	    return setCharacteristicNotification(mBluetoothGatt,mCharacteristic,false,null);	  }	 else {	    return false;	  }	}
Method Name:disable characteristic notify
API seq: setCharacteristicNotification
Tokens: notification bluetooth null get false property gatt characteristic properties notify

ID : 449
Received Java Code:private boolean setCharacteristicNotification(BluetoothGatt gatt,BluetoothGattCharacteristic characteristic,boolean enable,BleNotifyCallback bleNotifyCallback){	  if (gatt == null || characteristic == null) {	    notifyMsgInit();	    if (bleNotifyCallback != null)     bleNotifyCallback.onNotifyFailure(new OtherException("gatt or characteristic equal null"));	    return false;	  }	  boolean success1=gatt.setCharacteristicNotification(characteristic,enable);	  if (!success1) {	    notifyMsgInit();	    if (bleNotifyCallback != null)     bleNotifyCallback.onNotifyFailure(new OtherException("gatt setCharacteristicNotification fail"));	    return false;	  }	  BluetoothGattDescriptor descriptor=characteristic.getDescriptor(formUUID(UUID_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR));	  if (descriptor == null) {	    notifyMsgInit();	    if (bleNotifyCallback != null)     bleNotifyCallback.onNotifyFailure(new OtherException("descriptor equals null"));	    return false;	  }	 else {	    descriptor.setValue(enable ? BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE : BluetoothGattDescriptor.DISABLE_NOTIFICATION_VALUE);	    boolean success2=gatt.writeDescriptor(descriptor);	    if (!success2) {	      notifyMsgInit();	      if (bleNotifyCallback != null)       bleNotifyCallback.onNotifyFailure(new OtherException("gatt writeDescriptor fail"));	    }	    return success2;	  }	}
Method Name:set characteristic notification
API seq: notifyMsgInit OtherException.new BluetoothGatt.setCharacteristicNotification notifyMsgInit OtherException.new formUUID BluetoothGattCharacteristic.getDescriptor notifyMsgInit OtherException.new BluetoothGattDescriptor.setValue BluetoothGatt.writeDescriptor notifyMsgInit OtherException.new
Tokens: msg other descriptor uuid characteristic notify notification enable get client ble write value init false gatt boolean form bluetooth null failure disable callback success1 config success2

ID : 450
Received Java Code:public void enableCharacteristicIndicate(BleIndicateCallback bleIndicateCallback,String uuid_indicate){	  if (mCharacteristic != null && (mCharacteristic.getProperties() | BluetoothGattCharacteristic.PROPERTY_NOTIFY) > 0) {	    handleCharacteristicIndicateCallback(bleIndicateCallback,uuid_indicate);	    setCharacteristicIndication(mBluetoothGatt,mCharacteristic,true,bleIndicateCallback);	  }	 else {	    if (bleIndicateCallback != null)     bleIndicateCallback.onIndicateFailure(new OtherException("this characteristic not support indicate!"));	  }	}
Method Name:enable characteristic indicate
API seq: handleCharacteristicIndicateCallback setCharacteristicIndication OtherException.new
Tokens: other gatt handle uuid characteristic notify bluetooth null failure get property true callback indicate ble indication properties

ID : 451
Received Java Code:public boolean disableCharacteristicIndicate(){	  if (mCharacteristic != null && (mCharacteristic.getProperties() | BluetoothGattCharacteristic.PROPERTY_NOTIFY) > 0) {	    return setCharacteristicIndication(mBluetoothGatt,mCharacteristic,false,null);	  }	 else {	    return false;	  }	}
Method Name:disable characteristic indicate
API seq: setCharacteristicIndication
Tokens: bluetooth null get false property gatt indication characteristic properties notify

ID : 452
Received Java Code:private boolean setCharacteristicIndication(BluetoothGatt gatt,BluetoothGattCharacteristic characteristic,boolean enable,BleIndicateCallback bleIndicateCallback){	  if (gatt == null || characteristic == null) {	    indicateMsgInit();	    if (bleIndicateCallback != null)     bleIndicateCallback.onIndicateFailure(new OtherException("gatt or characteristic equal null"));	    return false;	  }	  boolean success1=gatt.setCharacteristicNotification(characteristic,enable);	  if (!success1) {	    indicateMsgInit();	    if (bleIndicateCallback != null)     bleIndicateCallback.onIndicateFailure(new OtherException("gatt setCharacteristicNotification fail"));	    return false;	  }	  BluetoothGattDescriptor descriptor=characteristic.getDescriptor(formUUID(UUID_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR));	  if (descriptor == null) {	    indicateMsgInit();	    if (bleIndicateCallback != null)     bleIndicateCallback.onIndicateFailure(new OtherException("descriptor equals null"));	    return false;	  }	 else {	    descriptor.setValue(enable ? BluetoothGattDescriptor.ENABLE_INDICATION_VALUE : BluetoothGattDescriptor.DISABLE_NOTIFICATION_VALUE);	    boolean success2=gatt.writeDescriptor(descriptor);	    if (!success2) {	      indicateMsgInit();	      if (bleIndicateCallback != null)       bleIndicateCallback.onIndicateFailure(new OtherException("gatt writeDescriptor fail"));	    }	    return success2;	  }	}
Method Name:set characteristic indication
API seq: indicateMsgInit OtherException.new BluetoothGatt.setCharacteristicNotification indicateMsgInit OtherException.new formUUID BluetoothGattCharacteristic.getDescriptor indicateMsgInit OtherException.new BluetoothGattDescriptor.setValue BluetoothGatt.writeDescriptor indicateMsgInit OtherException.new
Tokens: msg other descriptor uuid characteristic notification enable get client ble indicate write value init false gatt boolean form bluetooth null failure disable callback indication success1 config success2

ID : 453
Received Java Code:public void writeCharacteristic(byte[] data,BleWriteCallback bleWriteCallback,String uuid_write){	  if (data == null || data.length <= 0) {	    if (bleWriteCallback != null)     bleWriteCallback.onWriteFailure(new OtherException("the data to be written is empty"));	    return;	  }	  if (mCharacteristic == null || (mCharacteristic.getProperties() & (BluetoothGattCharacteristic.PROPERTY_WRITE | BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE)) == 0) {	    if (bleWriteCallback != null)     bleWriteCallback.onWriteFailure(new OtherException("this characteristic not support write!"));	    return;	  }	  if (mCharacteristic.setValue(data)) {	    handleCharacteristicWriteCallback(bleWriteCallback,uuid_write);	    if (!mBluetoothGatt.writeCharacteristic(mCharacteristic)) {	      writeMsgInit();	      if (bleWriteCallback != null)       bleWriteCallback.onWriteFailure(new OtherException("gatt writeCharacteristic fail"));	    }	  }	 else {	    if (bleWriteCallback != null)     bleWriteCallback.onWriteFailure(new OtherException("Updates the locally stored value of this characteristic fail"));	  }	}
Method Name:write characteristic
API seq: OtherException.new OtherException.new mCharacteristic.setValue handleCharacteristicWriteCallback mBluetoothGatt.writeCharacteristic writeMsgInit OtherException.new OtherException.new
Tokens: msg init other data length handle gatt uuid characteristic bluetooth null failure response get property callback ble write value properties

ID : 454
Received Java Code:public void readCharacteristic(BleReadCallback bleReadCallback,String uuid_read){	  if (mCharacteristic != null && (mCharacteristic.getProperties() & BluetoothGattCharacteristic.PROPERTY_READ) > 0) {	    handleCharacteristicReadCallback(bleReadCallback,uuid_read);	    if (!mBluetoothGatt.readCharacteristic(mCharacteristic)) {	      readMsgInit();	      if (bleReadCallback != null)       bleReadCallback.onReadFailure(new OtherException("gatt readCharacteristic fail"));	    }	  }	 else {	    if (bleReadCallback != null)     bleReadCallback.onReadFailure(new OtherException("this characteristic not support read!"));	  }	}
Method Name:read characteristic
API seq: handleCharacteristicReadCallback mBluetoothGatt.readCharacteristic readMsgInit OtherException.new OtherException.new
Tokens: msg init other read gatt handle uuid characteristic bluetooth null failure get property callback ble properties

ID : 455
Received Java Code:public void readRemoteRssi(BleRssiCallback bleRssiCallback){	  handleRSSIReadCallback(bleRssiCallback);	  if (!mBluetoothGatt.readRemoteRssi()) {	    rssiMsgInit();	    if (bleRssiCallback != null)     bleRssiCallback.onRssiFailure(new OtherException("gatt readRemoteRssi fail"));	  }	}
Method Name:read remote rssi
API seq: handleRSSIReadCallback mBluetoothGatt.readRemoteRssi rssiMsgInit OtherException.new
Tokens: msg rssiread init rssi other read handle gatt remote null bluetooth failure callback ble

ID : 456
Received Java Code:public void setMtu(int requiredMtu,BleMtuChangedCallback bleMtuChangedCallback){	  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {	    handleSetMtuCallback(bleMtuChangedCallback);	    if (!mBluetoothGatt.requestMtu(requiredMtu)) {	      mtuChangedMsgInit();	      if (bleMtuChangedCallback != null)       bleMtuChangedCallback.onSetMTUFailure(new OtherException("gatt requestMtu fail"));	    }	  }	 else {	    if (bleMtuChangedCallback != null)     bleMtuChangedCallback.onSetMTUFailure(new OtherException("API level lower than 21"));	  }	}
Method Name:set mtu
API seq: handleSetMtuCallback mBluetoothGatt.requestMtu mtuChangedMsgInit OtherException.new OtherException.new
Tokens: msg request init codes other handle lollipop gatt version required mtu mtufailure null bluetooth build callback ble sdk changed

ID : 457
Received Java Code:private void handleCharacteristicNotifyCallback(BleNotifyCallback bleNotifyCallback,String uuid_notify){	  if (bleNotifyCallback != null) {	    notifyMsgInit();	    bleNotifyCallback.setKey(uuid_notify);	    bleNotifyCallback.setHandler(mHandler);	    mBleBluetooth.addNotifyCallback(uuid_notify,bleNotifyCallback);	    mHandler.sendMessageDelayed(mHandler.obtainMessage(BleMsg.MSG_CHA_NOTIFY_START,bleNotifyCallback),BleManager.getInstance().getOperateTimeout());	  }	}
Method Name:handle characteristic notify callback
API seq: notifyMsgInit BleNotifyCallback.setKey BleNotifyCallback.setHandler mBleBluetooth.addNotifyCallback mHandler.obtainMessage BleManager.getInstance BleManager.getOperateTimeout mHandler.sendMessageDelayed
Tokens: add msg obtain handler init instance manager start delayed message uuid notify timeout operate null bluetooth get callback ble cha send key

ID : 458
Received Java Code:private void handleCharacteristicIndicateCallback(BleIndicateCallback bleIndicateCallback,String uuid_indicate){	  if (bleIndicateCallback != null) {	    indicateMsgInit();	    bleIndicateCallback.setKey(uuid_indicate);	    bleIndicateCallback.setHandler(mHandler);	    mBleBluetooth.addIndicateCallback(uuid_indicate,bleIndicateCallback);	    mHandler.sendMessageDelayed(mHandler.obtainMessage(BleMsg.MSG_CHA_INDICATE_START,bleIndicateCallback),BleManager.getInstance().getOperateTimeout());	  }	}
Method Name:handle characteristic indicate callback
API seq: indicateMsgInit BleIndicateCallback.setKey BleIndicateCallback.setHandler mBleBluetooth.addIndicateCallback mHandler.obtainMessage BleManager.getInstance BleManager.getOperateTimeout mHandler.sendMessageDelayed
Tokens: add msg obtain handler init instance manager start delayed message uuid timeout operate null bluetooth get callback indicate ble send cha key

ID : 459
Received Java Code:private void handleCharacteristicWriteCallback(BleWriteCallback bleWriteCallback,String uuid_write){	  if (bleWriteCallback != null) {	    writeMsgInit();	    bleWriteCallback.setKey(uuid_write);	    bleWriteCallback.setHandler(mHandler);	    mBleBluetooth.addWriteCallback(uuid_write,bleWriteCallback);	    mHandler.sendMessageDelayed(mHandler.obtainMessage(BleMsg.MSG_CHA_WRITE_START,bleWriteCallback),BleManager.getInstance().getOperateTimeout());	  }	}
Method Name:handle characteristic write callback
API seq: writeMsgInit BleWriteCallback.setKey BleWriteCallback.setHandler mBleBluetooth.addWriteCallback mHandler.obtainMessage BleManager.getInstance BleManager.getOperateTimeout mHandler.sendMessageDelayed
Tokens: msg add obtain handler init instance manager start delayed message uuid timeout operate null bluetooth get callback ble write cha send key

ID : 460
Received Java Code:private void handleCharacteristicReadCallback(BleReadCallback bleReadCallback,String uuid_read){	  if (bleReadCallback != null) {	    readMsgInit();	    bleReadCallback.setKey(uuid_read);	    bleReadCallback.setHandler(mHandler);	    mBleBluetooth.addReadCallback(uuid_read,bleReadCallback);	    mHandler.sendMessageDelayed(mHandler.obtainMessage(BleMsg.MSG_CHA_READ_START,bleReadCallback),BleManager.getInstance().getOperateTimeout());	  }	}
Method Name:handle characteristic read callback
API seq: readMsgInit BleReadCallback.setKey BleReadCallback.setHandler mBleBluetooth.addReadCallback mHandler.obtainMessage BleManager.getInstance BleManager.getOperateTimeout mHandler.sendMessageDelayed
Tokens: msg add obtain handler init read instance manager start delayed message uuid timeout operate null bluetooth get callback ble cha send key

ID : 461
Received Java Code:private void handleRSSIReadCallback(BleRssiCallback bleRssiCallback){	  if (bleRssiCallback != null) {	    rssiMsgInit();	    bleRssiCallback.setHandler(mHandler);	    mBleBluetooth.addRssiCallback(bleRssiCallback);	    mHandler.sendMessageDelayed(mHandler.obtainMessage(BleMsg.MSG_READ_RSSI_START,bleRssiCallback),BleManager.getInstance().getOperateTimeout());	  }	}
Method Name:handle rssiread callback
API seq: rssiMsgInit BleRssiCallback.setHandler mBleBluetooth.addRssiCallback mHandler.obtainMessage BleManager.getInstance BleManager.getOperateTimeout mHandler.sendMessageDelayed
Tokens: msg add obtain init handler rssi read instance manager start delayed message timeout operate null bluetooth get callback ble send

ID : 462
Received Java Code:private void handleSetMtuCallback(BleMtuChangedCallback bleMtuChangedCallback){	  if (bleMtuChangedCallback != null) {	    mtuChangedMsgInit();	    bleMtuChangedCallback.setHandler(mHandler);	    mBleBluetooth.addMtuChangedCallback(bleMtuChangedCallback);	    mHandler.sendMessageDelayed(mHandler.obtainMessage(BleMsg.MSG_SET_MTU_START,bleMtuChangedCallback),BleManager.getInstance().getOperateTimeout());	  }	}
Method Name:handle set mtu callback
API seq: mtuChangedMsgInit BleMtuChangedCallback.setHandler mBleBluetooth.addMtuChangedCallback mHandler.obtainMessage BleManager.getInstance BleManager.getOperateTimeout mHandler.sendMessageDelayed
Tokens: add msg obtain handler init instance manager start delayed message timeout mtu operate null bluetooth get callback ble send changed

ID : 463
Received Java Code:public void notifyMsgInit(){	  mHandler.removeMessages(BleMsg.MSG_CHA_NOTIFY_START);	}
Method Name:notify msg init
API seq: mHandler.removeMessages
Tokens: msg handler start messages ble cha notify remove

ID : 464
Received Java Code:public void indicateMsgInit(){	  mHandler.removeMessages(BleMsg.MSG_CHA_INDICATE_START);	}
Method Name:indicate msg init
API seq: mHandler.removeMessages
Tokens: msg handler start messages ble indicate cha remove

ID : 465
Received Java Code:public void writeMsgInit(){	  mHandler.removeMessages(BleMsg.MSG_CHA_WRITE_START);	}
Method Name:write msg init
API seq: mHandler.removeMessages
Tokens: msg handler start messages ble cha write remove

ID : 466
Received Java Code:public void readMsgInit(){	  mHandler.removeMessages(BleMsg.MSG_CHA_READ_START);	}
Method Name:read msg init
API seq: mHandler.removeMessages
Tokens: msg handler read start messages ble cha remove

ID : 467
Received Java Code:public void rssiMsgInit(){	  mHandler.removeMessages(BleMsg.MSG_READ_RSSI_START);	}
Method Name:rssi msg init
API seq: mHandler.removeMessages
Tokens: msg handler rssi read start messages ble remove

ID : 468
Received Java Code:public void mtuChangedMsgInit(){	  mHandler.removeMessages(BleMsg.MSG_SET_MTU_START);	}
Method Name:mtu changed msg init
API seq: mHandler.removeMessages
Tokens: msg handler start messages ble remove mtu

ID : 469
Received Java Code:public BleDevice(BluetoothDevice device){	  mDevice=device;	}
Method Name:ble device
API seq:
Tokens: device

ID : 470
Received Java Code:public BleDevice(BluetoothDevice device,int rssi,byte[] scanRecord,long timestampNanos){	  mDevice=device;	  mScanRecord=scanRecord;	  mRssi=rssi;	  mTimestampNanos=timestampNanos;	}
Method Name:ble device
API seq:
Tokens: rssi nanos record scan device timestamp

ID : 471
Received Java Code:protected BleDevice(Parcel in){	  mDevice=in.readParcelable(BluetoothDevice.class.getClassLoader());	  mScanRecord=in.createByteArray();	  mRssi=in.readInt();	  mTimestampNanos=in.readLong();	}
Method Name:ble device
API seq: BluetoothDevice.class.getClassLoader Parcel.readParcelable Parcel.createByteArray Parcel.readInt Parcel.readLong
Tokens: rssi read nanos loader byte scan long bluetooth parcelable get record create device class timestamp

ID : 472
Received Java Code:@Override public void writeToParcel(Parcel dest,int flags){	  dest.writeParcelable(mDevice,flags);	  dest.writeByteArray(mScanRecord);	  dest.writeInt(mRssi);	  dest.writeLong(mTimestampNanos);	}
Method Name:write to parcel
API seq: Parcel.writeParcelable Parcel.writeByteArray Parcel.writeInt Parcel.writeLong
Tokens: rssi parcelable nanos byte record flags scan dest write device long timestamp

ID : 473
Received Java Code:@Override public int describeContents(){	  return 0;	}
Method Name:describe contents
API seq:
Tokens:

ID : 474
Received Java Code:@Override public BleDevice createFromParcel(Parcel in){	  return new BleDevice(in);	}
Method Name:create from parcel
API seq: BleDevice
Tokens: ble device

ID : 475
Received Java Code:@Override public BleDevice[] newArray(int size){	  return new BleDevice[size];	}
Method Name:new array
API seq:
Tokens: size ble device

ID : 476
Received Java Code:public String getName(){	  if (mDevice != null)   return mDevice.getName();	  return null;	}
Method Name:get name
API seq:
Tokens: null get name device

ID : 477
Received Java Code:public String getMac(){	  if (mDevice != null)   return mDevice.getAddress();	  return null;	}
Method Name:get mac
API seq:
Tokens: address null get device

ID : 478
Received Java Code:public String getKey(){	  if (mDevice != null)   return mDevice.getName() + mDevice.getAddress();	  return "";	}
Method Name:get key
API seq:
Tokens: address null get name device

ID : 479
Received Java Code:public BluetoothDevice getDevice(){	  return mDevice;	}
Method Name:get device
API seq:
Tokens: device

ID : 480
Received Java Code:public void setDevice(BluetoothDevice device){	  this.mDevice=device;	}
Method Name:set device
API seq:
Tokens: device

ID : 481
Received Java Code:public byte[] getScanRecord(){	  return mScanRecord;	}
Method Name:get scan record
API seq:
Tokens: record scan

ID : 482
Received Java Code:public void setScanRecord(byte[] scanRecord){	  this.mScanRecord=scanRecord;	}
Method Name:set scan record
API seq:
Tokens: record scan

ID : 483
Received Java Code:public int getRssi(){	  return mRssi;	}
Method Name:get rssi
API seq:
Tokens: rssi

ID : 484
Received Java Code:public void setRssi(int rssi){	  this.mRssi=rssi;	}
Method Name:set rssi
API seq:
Tokens: rssi

ID : 485
Received Java Code:public long getTimestampNanos(){	  return mTimestampNanos;	}
Method Name:get timestamp nanos
API seq:
Tokens: nanos timestamp

ID : 486
Received Java Code:public void setTimestampNanos(long timestampNanos){	  this.mTimestampNanos=timestampNanos;	}
Method Name:set timestamp nanos
API seq:
Tokens: nanos timestamp

ID : 487
Received Java Code:public BleConnectStateParameter(int status){	  this.status=status;	}
Method Name:ble connect state parameter
API seq:
Tokens: status

ID : 488
Received Java Code:public int getStatus(){	  return status;	}
Method Name:get status
API seq:
Tokens: status

ID : 489
Received Java Code:public void setStatus(int status){	  this.status=status;	}
Method Name:set status
API seq:
Tokens: status

ID : 490
Received Java Code:public boolean isActive(){	  return isActive;	}
Method Name:is active
API seq:
Tokens: active

ID : 491
Received Java Code:public void setActive(boolean active){	  isActive=active;	}
Method Name:set active
API seq:
Tokens: active

ID : 492
Received Java Code:public static BleManager getInstance(){	  return BleManagerHolder.sBleManager;	}
Method Name:get instance
API seq:
Tokens: manager ble holder

ID : 493
Received Java Code:public void init(Application app){	  if (context == null && app != null) {	    context=app;	    if (isSupportBle()) {	      bluetoothManager=(BluetoothManager)context.getSystemService(Context.BLUETOOTH_SERVICE);	    }	    bluetoothAdapter=BluetoothAdapter.getDefaultAdapter();	    multipleBluetoothController=new MultipleBluetoothController();	    bleScanRuleConfig=new BleScanRuleConfig();	  }	}
Method Name:init
API seq: isSupportBle context.getSystemService BluetoothAdapter.getDefaultAdapter MultipleBluetoothController BleScanRuleConfig
Tokens: app controller adapter manager scan multiple rule default system bluetooth null service get context ble support config

ID : 494
Received Java Code:public Context getContext(){	  return context;	}
Method Name:get context
API seq:
Tokens: context

ID : 495
Received Java Code:public BluetoothManager getBluetoothManager(){	  return bluetoothManager;	}
Method Name:get bluetooth manager
API seq:
Tokens: bluetooth manager

ID : 496
Received Java Code:public BluetoothAdapter getBluetoothAdapter(){	  return bluetoothAdapter;	}
Method Name:get bluetooth adapter
API seq:
Tokens: adapter bluetooth

ID : 497
Received Java Code:public BleScanRuleConfig getScanRuleConfig(){	  return bleScanRuleConfig;	}
Method Name:get scan rule config
API seq:
Tokens: scan rule ble config

ID : 498
Received Java Code:public MultipleBluetoothController getMultipleBluetoothController(){	  return multipleBluetoothController;	}
Method Name:get multiple bluetooth controller
API seq:
Tokens: controller bluetooth multiple

ID : 499
Received Java Code:public void initScanRule(BleScanRuleConfig config){	  this.bleScanRuleConfig=config;	}
Method Name:init scan rule
API seq:
Tokens: scan rule ble config

ID : 500
Received Java Code:public int getMaxConnectCount(){	  return maxConnectCount;	}
Method Name:get max connect count
API seq:
Tokens: max count connect

ID : 501
Received Java Code:public BleManager setMaxConnectCount(int count){	  if (count > DEFAULT_MAX_MULTIPLE_DEVICE)   count=DEFAULT_MAX_MULTIPLE_DEVICE;	  this.maxConnectCount=count;	  return this;	}
Method Name:set max connect count
API seq:
Tokens: default max multiple count device connect

ID : 502
Received Java Code:public int getOperateTimeout(){	  return operateTimeout;	}
Method Name:get operate timeout
API seq:
Tokens: operate timeout

ID : 503
Received Java Code:public BleManager setOperateTimeout(int count){	  this.operateTimeout=count;	  return this;	}
Method Name:set operate timeout
API seq:
Tokens: operate count timeout

ID : 504
Received Java Code:public int getReConnectCount(){	  return reConnectCount;	}
Method Name:get re connect count
API seq:
Tokens: re count connect

ID : 505
Received Java Code:public long getReConnectInterval(){	  return reConnectInterval;	}
Method Name:get re connect interval
API seq:
Tokens: re interval connect

ID : 506
Received Java Code:public BleManager setReConnectCount(int count){	  return setReConnectCount(count,DEFAULT_CONNECT_RETRY_INTERVAL);	}
Method Name:set re connect count
API seq: setReConnectCount
Tokens: default re count interval connect retry

ID : 507
Received Java Code:public BleManager setReConnectCount(int count,long interval){	  if (count > 10)   count=10;	  if (interval < 0)   interval=0;	  this.reConnectCount=count;	  this.reConnectInterval=interval;	  return this;	}
Method Name:set re connect count
API seq:
Tokens: re count interval connect 10

ID : 508
Received Java Code:public int getSplitWriteNum(){	  return splitWriteNum;	}
Method Name:get split write num
API seq:
Tokens: split num write

ID : 509
Received Java Code:public BleManager setSplitWriteNum(int num){	  this.splitWriteNum=num;	  return this;	}
Method Name:set split write num
API seq:
Tokens: split num write

ID : 510
Received Java Code:public long getConnectOverTime(){	  return connectOverTime;	}
Method Name:get connect over time
API seq:
Tokens: over time connect

ID : 511
Received Java Code:public BleManager setConnectOverTime(long time){	  if (time <= 0) {	    time=100;	  }	  this.connectOverTime=time;	  return this;	}
Method Name:set connect over time
API seq:
Tokens: over 100 time connect

ID : 512
Received Java Code:public BleManager enableLog(boolean enable){	  BleLog.isPrint=enable;	  return this;	}
Method Name:enable log
API seq:
Tokens: print log enable ble

ID : 513
Received Java Code:public void scan(BleScanCallback callback){	  if (callback == null) {	    throw new IllegalArgumentException("BleScanCallback can not be Null!");	  }	  if (!isBlueEnable()) {	    BleLog.e("Bluetooth not enable!");	    callback.onScanStarted(false);	    return;	  }	  UUID[] serviceUuids=bleScanRuleConfig.getServiceUuids();	  String[] deviceNames=bleScanRuleConfig.getDeviceNames();	  String deviceMac=bleScanRuleConfig.getDeviceMac();	  boolean fuzzy=bleScanRuleConfig.isFuzzy();	  long timeOut=bleScanRuleConfig.getScanTimeOut();	  BleScanner.getInstance().scan(serviceUuids,deviceNames,deviceMac,fuzzy,timeOut,callback);	}
Method Name:scan
API seq: IllegalArgumentException isBlueEnable BleLog.e BleScanCallback.onScanStarted bleScanRuleConfig.getServiceUuids bleScanRuleConfig.getDeviceNames bleScanRuleConfig.getDeviceMac bleScanRuleConfig.isFuzzy bleScanRuleConfig.getScanTimeOut BleScanner.getInstance BleScanner.scan
Tokens: argument instance log scan rule uuid mac long out enable get scanner ble fuzzy false started illegal names boolean blue null throw service callback time device config uuids

ID : 514
Received Java Code:public void scanAndConnect(BleScanAndConnectCallback callback){	  if (callback == null) {	    throw new IllegalArgumentException("BleScanAndConnectCallback can not be Null!");	  }	  if (!isBlueEnable()) {	    BleLog.e("Bluetooth not enable!");	    callback.onScanStarted(false);	    return;	  }	  UUID[] serviceUuids=bleScanRuleConfig.getServiceUuids();	  String[] deviceNames=bleScanRuleConfig.getDeviceNames();	  String deviceMac=bleScanRuleConfig.getDeviceMac();	  boolean fuzzy=bleScanRuleConfig.isFuzzy();	  long timeOut=bleScanRuleConfig.getScanTimeOut();	  BleScanner.getInstance().scanAndConnect(serviceUuids,deviceNames,deviceMac,fuzzy,timeOut,callback);	}
Method Name:scan and connect
API seq: IllegalArgumentException isBlueEnable BleLog.e BleScanAndConnectCallback.onScanStarted bleScanRuleConfig.getServiceUuids bleScanRuleConfig.getDeviceNames bleScanRuleConfig.getDeviceMac bleScanRuleConfig.isFuzzy bleScanRuleConfig.getScanTimeOut BleScanner.getInstance BleScanner.scanAndConnect
Tokens: argument instance log scan rule uuid mac long out enable get scanner ble fuzzy connect false started illegal names boolean blue null throw service callback time device config uuids

ID : 515
Received Java Code:public BluetoothGatt connect(BleDevice bleDevice,BleGattCallback bleGattCallback){	  if (bleGattCallback == null) {	    throw new IllegalArgumentException("BleGattCallback can not be Null!");	  }	  if (!isBlueEnable()) {	    BleLog.e("Bluetooth not enable!");	    bleGattCallback.onConnectFail(bleDevice,new OtherException("Bluetooth not enable!"));	    return null;	  }	  if (Looper.myLooper() == null || Looper.myLooper() != Looper.getMainLooper()) {	    BleLog.w("Be careful: currentThread is not MainThread!");	  }	  if (bleDevice == null || bleDevice.getDevice() == null) {	    bleGattCallback.onConnectFail(bleDevice,new OtherException("Not Found Device Exception Occurred!"));	  }	 else {	    BleBluetooth bleBluetooth=multipleBluetoothController.buildConnectingBle(bleDevice);	    boolean autoConnect=bleScanRuleConfig.isAutoConnect();	    return bleBluetooth.connect(bleDevice,autoConnect,bleGattCallback);	  }	  return null;	}
Method Name:connect
API seq: IllegalArgumentException isBlueEnable BleLog.e OtherException.new BleGattCallback.onConnectFail Looper.myLooper Looper.myLooper Looper.getMainLooper BleLog.w BleDevice.getDevice OtherException.new BleGattCallback.onConnectFail multipleBluetoothController.buildConnectingBle bleScanRuleConfig.isAutoConnect BleBluetooth.connect
Tokens: auto other argument log scan rule main looper enable get ble connect controller multiple gatt my illegal fail boolean bluetooth blue null build throw callback connecting device config

ID : 516
Received Java Code:public BluetoothGatt connect(String mac,BleGattCallback bleGattCallback){	  BluetoothDevice bluetoothDevice=getBluetoothAdapter().getRemoteDevice(mac);	  BleDevice bleDevice=new BleDevice(bluetoothDevice,0,null,0);	  return connect(bleDevice,bleGattCallback);	}
Method Name:connect
API seq: getBluetoothAdapter getBluetoothAdapter.getRemoteDevice BleDevice connect
Tokens: adapter bluetooth null get callback ble gatt remote device mac connect

ID : 517
Received Java Code:public void cancelScan(){	  BleScanner.getInstance().stopLeScan();	}
Method Name:cancel scan
API seq: BleScanner.getInstance BleScanner.stopLeScan
Tokens: instance stop get scanner scan le ble

ID : 518
Received Java Code:public void notify(BleDevice bleDevice,String uuid_service,String uuid_notify,BleNotifyCallback callback){	  if (callback == null) {	    throw new IllegalArgumentException("BleNotifyCallback can not be Null!");	  }	  BleBluetooth bleBluetooth=multipleBluetoothController.getBleBluetooth(bleDevice);	  if (bleBluetooth == null) {	    callback.onNotifyFailure(new OtherException("This device not connect!"));	  }	 else {	    bleBluetooth.newBleConnector().withUUIDString(uuid_service,uuid_notify).enableCharacteristicNotify(callback,uuid_notify);	  }	}
Method Name:notify
API seq: IllegalArgumentException multipleBluetoothController.getBleBluetooth OtherException.new BleNotifyCallback.onNotifyFailure BleBluetooth.newBleConnector BleBluetooth.withUUIDString BleBluetooth.enableCharacteristicNotify
Tokens: other controller argument multiple uuid illegal notify characteristic connector bluetooth null throw failure service enable get callback ble uuidstring device

ID : 519
Received Java Code:public void indicate(BleDevice bleDevice,String uuid_service,String uuid_indicate,BleIndicateCallback callback){	  if (callback == null) {	    throw new IllegalArgumentException("BleIndicateCallback can not be Null!");	  }	  BleBluetooth bleBluetooth=multipleBluetoothController.getBleBluetooth(bleDevice);	  if (bleBluetooth == null) {	    callback.onIndicateFailure(new OtherException("This device not connect!"));	  }	 else {	    bleBluetooth.newBleConnector().withUUIDString(uuid_service,uuid_indicate).enableCharacteristicIndicate(callback,uuid_indicate);	  }	}
Method Name:indicate
API seq: IllegalArgumentException multipleBluetoothController.getBleBluetooth OtherException.new BleIndicateCallback.onIndicateFailure BleBluetooth.newBleConnector BleBluetooth.withUUIDString BleBluetooth.enableCharacteristicIndicate
Tokens: other controller argument multiple uuid illegal characteristic connector bluetooth null throw enable failure service get callback indicate ble uuidstring device

ID : 520
Received Java Code:public boolean stopNotify(BleDevice bleDevice,String uuid_service,String uuid_notify){	  BleBluetooth bleBluetooth=multipleBluetoothController.getBleBluetooth(bleDevice);	  if (bleBluetooth == null) {	    return false;	  }	  boolean success=bleBluetooth.newBleConnector().withUUIDString(uuid_service,uuid_notify).disableCharacteristicNotify();	  if (success) {	    bleBluetooth.removeNotifyCallback(uuid_notify);	  }	  return success;	}
Method Name:stop notify
API seq: multipleBluetoothController.getBleBluetooth BleBluetooth.newBleConnector BleBluetooth.withUUIDString BleBluetooth.disableCharacteristicNotify BleBluetooth.removeNotifyCallback
Tokens: controller false multiple uuid remove notify characteristic boolean connector bluetooth null disable service success get callback ble uuidstring device

ID : 521
Received Java Code:public boolean stopIndicate(BleDevice bleDevice,String uuid_service,String uuid_indicate){	  BleBluetooth bleBluetooth=multipleBluetoothController.getBleBluetooth(bleDevice);	  if (bleBluetooth == null) {	    return false;	  }	  boolean success=bleBluetooth.newBleConnector().withUUIDString(uuid_service,uuid_indicate).disableCharacteristicIndicate();	  if (success) {	    bleBluetooth.removeIndicateCallback(uuid_indicate);	  }	  return success;	}
Method Name:stop indicate
API seq: multipleBluetoothController.getBleBluetooth BleBluetooth.newBleConnector BleBluetooth.withUUIDString BleBluetooth.disableCharacteristicIndicate BleBluetooth.removeIndicateCallback
Tokens: controller false multiple uuid remove characteristic boolean connector bluetooth null service success disable get callback indicate ble uuidstring device

ID : 522
Received Java Code:public void write(BleDevice bleDevice,String uuid_service,String uuid_write,byte[] data,BleWriteCallback callback){	  write(bleDevice,uuid_service,uuid_write,data,true,callback);	}
Method Name:write
API seq: write
Tokens: data service true callback ble uuid device write

ID : 523
Received Java Code:public void write(BleDevice bleDevice,String uuid_service,String uuid_write,byte[] data,boolean split,BleWriteCallback callback){	  if (callback == null) {	    throw new IllegalArgumentException("BleWriteCallback can not be Null!");	  }	  if (data == null) {	    BleLog.e("data is Null!");	    callback.onWriteFailure(new OtherException("data is Null!"));	    return;	  }	  if (data.length > 20 && !split) {	    BleLog.w("Be careful: data's length beyond 20! Ensure MTU higher than 23, or use spilt write!");	  }	  BleBluetooth bleBluetooth=multipleBluetoothController.getBleBluetooth(bleDevice);	  if (bleBluetooth == null) {	    callback.onWriteFailure(new OtherException("This device not connect!"));	  }	 else {	    if (split && data.length > 20) {	      new SplitWriter().splitWrite(bleBluetooth,uuid_service,uuid_write,data,callback);	    }	 else {	      bleBluetooth.newBleConnector().withUUIDString(uuid_service,uuid_write).writeCharacteristic(data,callback,uuid_write);	    }	  }	}
Method Name:write
API seq: IllegalArgumentException BleLog.e OtherException.new BleWriteCallback.onWriteFailure BleLog.w multipleBluetoothController.getBleBluetooth OtherException.new BleWriteCallback.onWriteFailure SplitWriter SplitWriter.splitWrite BleBluetooth.newBleConnector BleBluetooth.withUUIDString BleBluetooth.writeCharacteristic
Tokens: other argument data log uuid characteristic split get ble write controller multiple length illegal bluetooth connector null throw service failure callback uuidstring writer device 20

ID : 524
Received Java Code:public void read(BleDevice bleDevice,String uuid_service,String uuid_read,BleReadCallback callback){	  if (callback == null) {	    throw new IllegalArgumentException("BleReadCallback can not be Null!");	  }	  BleBluetooth bleBluetooth=multipleBluetoothController.getBleBluetooth(bleDevice);	  if (bleBluetooth == null) {	    callback.onReadFailure(new OtherException("This device is not connected!"));	  }	 else {	    bleBluetooth.newBleConnector().withUUIDString(uuid_service,uuid_read).readCharacteristic(callback,uuid_read);	  }	}
Method Name:read
API seq: IllegalArgumentException multipleBluetoothController.getBleBluetooth OtherException.new BleReadCallback.onReadFailure BleBluetooth.newBleConnector BleBluetooth.withUUIDString BleBluetooth.readCharacteristic
Tokens: other controller argument read multiple uuid illegal characteristic connector bluetooth null throw failure service get callback ble uuidstring device

ID : 525
Received Java Code:public void readRssi(BleDevice bleDevice,BleRssiCallback callback){	  if (callback == null) {	    throw new IllegalArgumentException("BleRssiCallback can not be Null!");	  }	  BleBluetooth bleBluetooth=multipleBluetoothController.getBleBluetooth(bleDevice);	  if (bleBluetooth == null) {	    callback.onRssiFailure(new OtherException("This device is not connected!"));	  }	 else {	    bleBluetooth.newBleConnector().readRemoteRssi(callback);	  }	}
Method Name:read rssi
API seq: IllegalArgumentException multipleBluetoothController.getBleBluetooth OtherException.new BleRssiCallback.onRssiFailure BleBluetooth.newBleConnector BleBluetooth.readRemoteRssi
Tokens: rssi other controller argument read multiple remote illegal connector bluetooth null throw failure get callback ble device

ID : 526
Received Java Code:public void setMtu(BleDevice bleDevice,int mtu,BleMtuChangedCallback callback){	  if (callback == null) {	    throw new IllegalArgumentException("BleMtuChangedCallback can not be Null!");	  }	  if (mtu > DEFAULT_MAX_MTU) {	    BleLog.e("requiredMtu should lower than 512 !");	    callback.onSetMTUFailure(new OtherException("requiredMtu should lower than 512 !"));	    return;	  }	  if (mtu < DEFAULT_MTU) {	    BleLog.e("requiredMtu should higher than 23 !");	    callback.onSetMTUFailure(new OtherException("requiredMtu should higher than 23 !"));	    return;	  }	  BleBluetooth bleBluetooth=multipleBluetoothController.getBleBluetooth(bleDevice);	  if (bleBluetooth == null) {	    callback.onSetMTUFailure(new OtherException("This device is not connected!"));	  }	 else {	    bleBluetooth.newBleConnector().setMtu(mtu,callback);	  }	}
Method Name:set mtu
API seq: IllegalArgumentException BleLog.e OtherException.new BleMtuChangedCallback.onSetMTUFailure BleLog.e OtherException.new BleMtuChangedCallback.onSetMTUFailure multipleBluetoothController.getBleBluetooth OtherException.new BleMtuChangedCallback.onSetMTUFailure BleBluetooth.newBleConnector BleBluetooth.setMtu
Tokens: other controller argument log max multiple illegal mtu mtufailure default connector bluetooth null throw get callback ble device

ID : 527
Received Java Code:public boolean isSupportBle(){	  return Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2 && context.getApplicationContext().getPackageManager().hasSystemFeature(PackageManager.FEATURE_BLUETOOTH_LE);	}
Method Name:is support ble
API seq: context.getApplicationContext context.getPackageManager context.hasSystemFeature
Tokens: codes package manager mr2 version system feature bluetooth application build get context le jelly sdk has bean

ID : 528
Received Java Code:public void enableBluetooth(){	  if (bluetoothAdapter != null) {	    bluetoothAdapter.enable();	  }	}
Method Name:enable bluetooth
API seq: bluetoothAdapter.enable
Tokens: adapter null bluetooth enable

ID : 529
Received Java Code:public void disableBluetooth(){	  if (bluetoothAdapter != null) {	    if (bluetoothAdapter.isEnabled())     bluetoothAdapter.disable();	  }	}
Method Name:disable bluetooth
API seq:
Tokens: adapter null bluetooth disable enabled

ID : 530
Received Java Code:public boolean isBlueEnable(){	  return bluetoothAdapter != null && bluetoothAdapter.isEnabled();	}
Method Name:is blue enable
API seq: bluetoothAdapter.isEnabled
Tokens: adapter null bluetooth enabled

ID : 531
Received Java Code:public BleDevice convertBleDevice(BluetoothDevice bluetoothDevice){	  return new BleDevice(bluetoothDevice);	}
Method Name:convert ble device
API seq: BleDevice
Tokens: bluetooth ble device

ID : 532
Received Java Code:@TargetApi(Build.VERSION_CODES.LOLLIPOP) public BleDevice convertBleDevice(ScanResult scanResult){	  if (scanResult == null) {	    throw new IllegalArgumentException("scanResult can not be Null!");	  }	  BluetoothDevice bluetoothDevice=scanResult.getDevice();	  int rssi=scanResult.getRssi();	  ScanRecord scanRecord=scanResult.getScanRecord();	  byte[] bytes=null;	  if (scanRecord != null)   bytes=scanRecord.getBytes();	  long timestampNanos=scanResult.getTimestampNanos();	  return new BleDevice(bluetoothDevice,rssi,bytes,timestampNanos);	}
Method Name:convert ble device
API seq: IllegalArgumentException ScanResult.getDevice ScanResult.getRssi ScanResult.getScanRecord ScanResult.getTimestampNanos BleDevice
Tokens: rssi argument nanos byte scan illegal long result bluetooth null throw bytes get record ble device timestamp

ID : 533
Received Java Code:public BleBluetooth getBleBluetooth(BleDevice bleDevice){	  if (multipleBluetoothController != null) {	    return multipleBluetoothController.getBleBluetooth(bleDevice);	  }	  return null;	}
Method Name:get ble bluetooth
API seq: multipleBluetoothController.getBleBluetooth
Tokens: controller null bluetooth get multiple ble device

ID : 534
Received Java Code:public BluetoothGatt getBluetoothGatt(BleDevice bleDevice){	  BleBluetooth bleBluetooth=getBleBluetooth(bleDevice);	  if (bleBluetooth != null)   return bleBluetooth.getBluetoothGatt();	  return null;	}
Method Name:get bluetooth gatt
API seq: getBleBluetooth
Tokens: bluetooth null get ble gatt device

ID : 535
Received Java Code:public List<BluetoothGattService> getBluetoothGattServices(BleDevice bleDevice){	  BluetoothGatt gatt=getBluetoothGatt(bleDevice);	  if (gatt != null) {	    return gatt.getServices();	  }	  return null;	}
Method Name:get bluetooth gatt services
API seq: getBluetoothGatt BluetoothGatt.getServices
Tokens: null bluetooth get gatt ble services device

ID : 536
Received Java Code:public List<BluetoothGattCharacteristic> getBluetoothGattCharacteristics(BluetoothGattService service){	  return service.getCharacteristics();	}
Method Name:get bluetooth gatt characteristics
API seq: BluetoothGattService.getCharacteristics
Tokens: characteristics service get

ID : 537
Received Java Code:public void removeConnectGattCallback(BleDevice bleDevice){	  BleBluetooth bleBluetooth=getBleBluetooth(bleDevice);	  if (bleBluetooth != null)   bleBluetooth.removeConnectGattCallback();	}
Method Name:remove connect gatt callback
API seq: getBleBluetooth
Tokens: bluetooth null get callback ble gatt device remove connect

ID : 538
Received Java Code:public void removeRssiCallback(BleDevice bleDevice){	  BleBluetooth bleBluetooth=getBleBluetooth(bleDevice);	  if (bleBluetooth != null)   bleBluetooth.removeRssiCallback();	}
Method Name:remove rssi callback
API seq: getBleBluetooth
Tokens: rssi bluetooth null get callback ble device remove

ID : 539
Received Java Code:public void removeMtuChangedCallback(BleDevice bleDevice){	  BleBluetooth bleBluetooth=getBleBluetooth(bleDevice);	  if (bleBluetooth != null)   bleBluetooth.removeMtuChangedCallback();	}
Method Name:remove mtu changed callback
API seq: getBleBluetooth
Tokens: bluetooth null get callback ble device remove mtu changed

ID : 540
Received Java Code:public void removeNotifyCallback(BleDevice bleDevice,String uuid_notify){	  BleBluetooth bleBluetooth=getBleBluetooth(bleDevice);	  if (bleBluetooth != null)   bleBluetooth.removeNotifyCallback(uuid_notify);	}
Method Name:remove notify callback
API seq: getBleBluetooth
Tokens: bluetooth null get callback ble device uuid notify remove

ID : 541
Received Java Code:public void removeIndicateCallback(BleDevice bleDevice,String uuid_indicate){	  BleBluetooth bleBluetooth=getBleBluetooth(bleDevice);	  if (bleBluetooth != null)   bleBluetooth.removeIndicateCallback(uuid_indicate);	}
Method Name:remove indicate callback
API seq: getBleBluetooth
Tokens: bluetooth null get callback ble indicate uuid device remove

ID : 542
Received Java Code:public void removeWriteCallback(BleDevice bleDevice,String uuid_write){	  BleBluetooth bleBluetooth=getBleBluetooth(bleDevice);	  if (bleBluetooth != null)   bleBluetooth.removeWriteCallback(uuid_write);	}
Method Name:remove write callback
API seq: getBleBluetooth
Tokens: bluetooth null get callback ble write device uuid remove

ID : 543
Received Java Code:public void removeReadCallback(BleDevice bleDevice,String uuid_read){	  BleBluetooth bleBluetooth=getBleBluetooth(bleDevice);	  if (bleBluetooth != null)   bleBluetooth.removeReadCallback(uuid_read);	}
Method Name:remove read callback
API seq: getBleBluetooth
Tokens: read bluetooth null get callback ble device uuid remove

ID : 544
Received Java Code:public void clearCharacterCallback(BleDevice bleDevice){	  BleBluetooth bleBluetooth=getBleBluetooth(bleDevice);	  if (bleBluetooth != null)   bleBluetooth.clearCharacterCallback();	}
Method Name:clear character callback
API seq: getBleBluetooth
Tokens: character bluetooth null get clear callback ble device

ID : 545
Received Java Code:public BleScanState getScanSate(){	  return BleScanner.getInstance().getScanState();	}
Method Name:get scan sate
API seq: BleScanner.getInstance BleScanner.getScanState
Tokens: instance get scanner scan ble state

ID : 546
Received Java Code:public List<BleDevice> getAllConnectedDevice(){	  if (multipleBluetoothController == null)   return null;	  return multipleBluetoothController.getDeviceList();	}
Method Name:get all connected device
API seq: multipleBluetoothController.getDeviceList
Tokens: controller null bluetooth get multiple device

ID : 547
Received Java Code:public int getConnectState(BleDevice bleDevice){	  if (bleDevice != null) {	    return bluetoothManager.getConnectionState(bleDevice.getDevice(),BluetoothProfile.GATT);	  }	 else {	    return BluetoothProfile.STATE_DISCONNECTED;	  }	}
Method Name:get connect state
API seq: BleDevice.getDevice bluetoothManager.getConnectionState
Tokens: disconnected null bluetooth manager profile get ble connection gatt state device

ID : 548
Received Java Code:public boolean isConnected(BleDevice bleDevice){	  return getConnectState(bleDevice) == BluetoothProfile.STATE_CONNECTED;	}
Method Name:is connected
API seq: getConnectState
Tokens: connected bluetooth get profile ble state device connect

ID : 549
Received Java Code:public boolean isConnected(String mac){	  List<BleDevice> list=getAllConnectedDevice();	  for (  BleDevice bleDevice : list) {	    if (bleDevice != null) {	      if (bleDevice.getMac().equals(mac)) {	        return true;	      }	    }	  }	  return false;	}
Method Name:is connected
API seq: getAllConnectedDevice BleDevice.getMac BleDevice.equals
Tokens: all connected null get equals false true ble device mac

ID : 550
Received Java Code:public void disconnect(BleDevice bleDevice){	  if (multipleBluetoothController != null) {	    multipleBluetoothController.disconnect(bleDevice);	  }	}
Method Name:disconnect
API seq: multipleBluetoothController.disconnect
Tokens: disconnect controller null bluetooth multiple ble device

ID : 551
Received Java Code:public void disconnectAllDevice(){	  if (multipleBluetoothController != null) {	    multipleBluetoothController.disconnectAllDevice();	  }	}
Method Name:disconnect all device
API seq: multipleBluetoothController.disconnectAllDevice
Tokens: all disconnect controller null bluetooth multiple device

ID : 552
Received Java Code:public void destroy(){	  if (multipleBluetoothController != null) {	    multipleBluetoothController.destroy();	  }	}
Method Name:destroy
API seq: multipleBluetoothController.destroy
Tokens: controller null bluetooth multiple destroy

ID : 553
Received Java Code:public BleLruHashMap(int saveSize){	  super((int)Math.ceil(saveSize / 0.75) + 1,0.75f,true);	  MAX_SIZE=saveSize;	}
Method Name:ble lru hash map
API seq: Math.ceil super
Tokens: super size max save 75f true ceil math 75

ID : 554
Received Java Code:@Override protected boolean removeEldestEntry(java.util.Map.Entry eldest){	  if (size() > MAX_SIZE && eldest.getValue() instanceof BleBluetooth) {	    ((BleBluetooth)eldest.getValue()).disconnect();	  }	  return size() > MAX_SIZE;	}
Method Name:remove eldest entry
API seq: size Map.Entry.getValue Map.Entry.getValue size
Tokens: disconnect eldest size bluetooth max get ble value instanceof

ID : 555
Received Java Code:@Override public String toString(){	  StringBuilder sb=new StringBuilder();	  for (  Entry<K,V> entry : entrySet()) {	    sb.append(String.format("%s:%s ",entry.getKey(),entry.getValue()));	  }	  return sb.toString();	}
Method Name:to string
API seq: StringBuilder entrySet entry.getKey entry.getValue String.format StringBuilder.append StringBuilder.toString
Tokens: entry get builder format value key append sb

ID : 556
Received Java Code:public static void d(String msg){	  if (isPrint && msg != null)   Log.d(defaultTag,msg);	}
Method Name:d
API seq:
Tokens: msg default print null log tag

ID : 557
Received Java Code:public static void i(String msg){	  if (isPrint && msg != null)   Log.i(defaultTag,msg);	}
Method Name:i
API seq:
Tokens: msg default print null log tag

ID : 558
Received Java Code:public static void w(String msg){	  if (isPrint && msg != null)   Log.w(defaultTag,msg);	}
Method Name:w
API seq:
Tokens: msg default print null log tag

ID : 559
Received Java Code:public static void e(String msg){	  if (isPrint && msg != null)   Log.e(defaultTag,msg);	}
Method Name:e
API seq:
Tokens: msg default print null log tag

ID : 560
Received Java Code:public static char[] encodeHex(byte[] data){	  return encodeHex(data,true);	}
Method Name:encode hex
API seq: encodeHex
Tokens: encode data true hex

ID : 561
Received Java Code:public static char[] encodeHex(byte[] data,boolean toLowerCase){	  return encodeHex(data,toLowerCase ? DIGITS_LOWER : DIGITS_UPPER);	}
Method Name:encode hex
API seq: encodeHex
Tokens: encode data lower upper hex digits case

ID : 562
Received Java Code:protected static char[] encodeHex(byte[] data,char[] toDigits){	  if (data == null)   return null;	  int l=data.length;	  char[] out=new char[l << 1];	  for (int i=0, j=0; i < l; i++) {	    out[j++]=toDigits[(0xF0 & data[i]) >>> 4];	    out[j++]=toDigits[0x0F & data[i]];	  }	  return out;	}
Method Name:encode hex
API seq:
Tokens: data null 0x length char 0x0f f0 digits out

ID : 563
Received Java Code:public static String encodeHexStr(byte[] data){	  return encodeHexStr(data,true);	}
Method Name:encode hex str
API seq: encodeHexStr
Tokens: encode str data true hex

ID : 564
Received Java Code:public static String encodeHexStr(byte[] data,boolean toLowerCase){	  return encodeHexStr(data,toLowerCase ? DIGITS_LOWER : DIGITS_UPPER);	}
Method Name:encode hex str
API seq: encodeHexStr
Tokens: encode str data lower upper hex digits case

ID : 565
Received Java Code:protected static String encodeHexStr(byte[] data,char[] toDigits){	  return new String(encodeHex(data,toDigits));	}
Method Name:encode hex str
API seq: encodeHex String
Tokens: encode data hex digits

ID : 566
Received Java Code:public static String formatHexString(byte[] data){	  return formatHexString(data,false);	}
Method Name:format hex string
API seq: formatHexString
Tokens: data false format hex

ID : 567
Received Java Code:public static String formatHexString(byte[] data,boolean addSpace){	  if (data == null || data.length < 1)   return null;	  StringBuilder sb=new StringBuilder();	  for (int i=0; i < data.length; i++) {	    String hex=Integer.toHexString(data[i] & 0xFF);	    if (hex.length() == 1) {	      hex='0' + hex;	    }	    sb.append(hex);	    if (addSpace)     sb.append(" ");	  }	  return sb.toString().trim();	}
Method Name:format hex string
API seq: StringBuilder Integer.toHexString String.length StringBuilder.append StringBuilder.toString StringBuilder.trim
Tokens: add ff data length 0x integer space sb null trim builder hex append

ID : 568
Received Java Code:public static byte[] decodeHex(char[] data){	  int len=data.length;	  if ((len & 0x01) != 0) {	    throw new RuntimeException("Odd number of characters.");	  }	  byte[] out=new byte[len >> 1];	  for (int i=0, j=0; j < len; i++) {	    int f=toDigit(data[j],j) << 4;	    j++;	    f=f | toDigit(data[j],j);	    j++;	    out[i]=(byte)(f & 0xFF);	  }	  return out;	}
Method Name:decode hex
API seq: RuntimeException toDigit toDigit
Tokens: ff data len throw byte length 0x runtime 0x01 out digit

ID : 569
Received Java Code:protected static int toDigit(char ch,int index){	  int digit=Character.digit(ch,16);	  if (digit == -1) {	    throw new RuntimeException("Illegal hexadecimal character " + ch + " at index "+ index);	  }	  return digit;	}
Method Name:to digit
API seq: Character.digit RuntimeException
Tokens: character ch 16 throw index runtime digit

ID : 570
Received Java Code:public static byte[] hexStringToBytes(String hexString){	  if (hexString == null || hexString.equals("")) {	    return null;	  }	  hexString=hexString.toUpperCase();	  int length=hexString.length() / 2;	  char[] hexChars=hexString.toCharArray();	  byte[] d=new byte[length];	  for (int i=0; i < length; i++) {	    int pos=i * 2;	    d[i]=(byte)(charToByte(hexChars[pos]) << 4 | charToByte(hexChars[pos + 1]));	  }	  return d;	}
Method Name:hex string to bytes
API seq: String.equals String.toUpperCase String.length String.toCharArray charToByte charToByte
Tokens: null pos byte equals upper char length hex chars case

ID : 571
Received Java Code:public static byte charToByte(char c){	  return (byte)"0123456789ABCDEF".indexOf(c);	}
Method Name:char to byte
API seq: return return.indexOf
Tokens: byte index

ID : 572
Received Java Code:public static String extractData(byte[] data,int position){	  return HexUtil.formatHexString(new byte[]{data[position]});	}
Method Name:extract data
API seq: HexUtil.formatHexString
Tokens: util data byte format hex position

ID : 573
Received Java Code:public ConnectException(BluetoothGatt bluetoothGatt,int gattStatus){	  super(ERROR_CODE_GATT,"Gatt Exception Occurred! ");	  this.bluetoothGatt=bluetoothGatt;	  this.gattStatus=gattStatus;	}
Method Name:connect exception
API seq: super
Tokens: super code bluetooth gatt error status

ID : 574
Received Java Code:public int getGattStatus(){	  return gattStatus;	}
Method Name:get gatt status
API seq:
Tokens: gatt status

ID : 575
Received Java Code:public ConnectException setGattStatus(int gattStatus){	  this.gattStatus=gattStatus;	  return this;	}
Method Name:set gatt status
API seq:
Tokens: gatt status

ID : 576
Received Java Code:public BluetoothGatt getBluetoothGatt(){	  return bluetoothGatt;	}
Method Name:get bluetooth gatt
API seq:
Tokens: bluetooth gatt

ID : 577
Received Java Code:public ConnectException setBluetoothGatt(BluetoothGatt bluetoothGatt){	  this.bluetoothGatt=bluetoothGatt;	  return this;	}
Method Name:set bluetooth gatt
API seq:
Tokens: bluetooth gatt

ID : 578
Received Java Code:@Override public String toString(){	  return "ConnectException{" + "gattStatus=" + gattStatus + ", bluetoothGatt="+ bluetoothGatt+ "} "+ super.toString();	}
Method Name:to string
API seq: super.toString
Tokens: super bluetooth gatt status

ID : 579
Received Java Code:public OtherException(String description){	  super(ERROR_CODE_OTHER,description);	}
Method Name:other exception
API seq: super
Tokens: super other code description error

ID : 580
Received Java Code:public TimeoutException(){	  super(ERROR_CODE_TIMEOUT,"Timeout Exception Occurred!");	}
Method Name:timeout exception
API seq: super
Tokens: super code error timeout

ID : 581
Received Java Code:public BleException(int code,String description){	  this.code=code;	  this.description=description;	}
Method Name:ble exception
API seq:
Tokens: code description

ID : 582
Received Java Code:public int getCode(){	  return code;	}
Method Name:get code
API seq:
Tokens: code

ID : 583
Received Java Code:public BleException setCode(int code){	  this.code=code;	  return this;	}
Method Name:set code
API seq:
Tokens: code

ID : 584
Received Java Code:public String getDescription(){	  return description;	}
Method Name:get description
API seq:
Tokens: description

ID : 585
Received Java Code:public BleException setDescription(String description){	  this.description=description;	  return this;	}
Method Name:set description
API seq:
Tokens: description

ID : 586
Received Java Code:@Override public String toString(){	  return "BleException { " + "code=" + code + ", description='"+ description+ '\''+ '}';	}
Method Name:to string
API seq:
Tokens: code description

ID : 587
Received Java Code:public GattException(int gattStatus){	  super(ERROR_CODE_GATT,"Gatt Exception Occurred! ");	  this.gattStatus=gattStatus;	}
Method Name:gatt exception
API seq: super
Tokens: super code gatt error status

ID : 588
Received Java Code:public int getGattStatus(){	  return gattStatus;	}
Method Name:get gatt status
API seq:
Tokens: gatt status

ID : 589
Received Java Code:public GattException setGattStatus(int gattStatus){	  this.gattStatus=gattStatus;	  return this;	}
Method Name:set gatt status
API seq:
Tokens: gatt status

ID : 590
Received Java Code:@Override public String toString(){	  return "GattException{" + "gattStatus=" + gattStatus + "} "+ super.toString();	}
Method Name:to string
API seq: super.toString
Tokens: super gatt status

ID : 591
Received Java Code:public ApplicationTest(){	  super(Application.class);	}
Method Name:application test
API seq: super
Tokens: super application class

ID : 592
Received Java Code:@Override protected void onCreate(Bundle savedInstanceState){	  super.onCreate(savedInstanceState);	  setContentView(R.layout.activity_main);	  initView();	  BleManager.getInstance().init(getApplication());	  BleManager.getInstance().enableLog(true).setReConnectCount(1,5000).setConnectOverTime(20000).setOperateTimeout(5000);	}
Method Name:on create
API seq: super.onCreate setContentView initView BleManager.getInstance getApplication getApplication.init BleManager.getInstance BleManager.enableLog BleManager.setReConnectCount BleManager.setConnectOverTime BleManager.setOperateTimeout
Tokens: 5000 instance activity saved log main timeout content view enable get create ble state connect over init manager 20000 count super layout re operate application true time

ID : 593
Received Java Code:@Override protected void onResume(){	  super.onResume();	  showConnectedDevice();	}
Method Name:on resume
API seq: super.onResume showConnectedDevice
Tokens: super connected resume show device

ID : 594
Received Java Code:@Override protected void onDestroy(){	  super.onDestroy();	  BleManager.getInstance().disconnectAllDevice();	  BleManager.getInstance().destroy();	}
Method Name:on destroy
API seq: super.onDestroy BleManager.getInstance BleManager.disconnectAllDevice BleManager.getInstance BleManager.destroy
Tokens: super all disconnect instance manager get destroy ble device

ID : 595
Received Java Code:@Override public void onClick(View v){	switch (v.getId()) {	case R.id.btn_scan:	    if (btn_scan.getText().equals(getString(R.string.start_scan))) {	      checkPermissions();	    }	 else     if (btn_scan.getText().equals(getString(R.string.stop_scan))) {	      BleManager.getInstance().cancelScan();	    }	  break;	case R.id.txt_setting:	if (layout_setting.getVisibility() == View.VISIBLE) {	  layout_setting.setVisibility(View.GONE);	  txt_setting.setText(getString(R.string.expand_search_settings));	}	 else {	  layout_setting.setVisibility(View.VISIBLE);	  txt_setting.setText(getString(R.string.retrieve_search_settings));	}	break;	}	}
Method Name:on click
API seq: View.getId switch btn_scan.getText getString getString.equals checkPermissions btn_scan.getText getString getString.equals BleManager.getInstance BleManager.cancelScan layout_setting.getVisibility layout_setting.setVisibility getString txt_setting.setText layout_setting.setVisibility getString txt_setting.setText
Tokens: cancel instance scan switch setting search view permissions get ble id text btn case settings visible visibility manager break start check gone layout txt expand stop equals retrieve

ID : 596
Received Java Code:private void initView(){	  Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);	  setSupportActionBar(toolbar);	  btn_scan=(Button)findViewById(R.id.btn_scan);	  btn_scan.setText(getString(R.string.start_scan));	  btn_scan.setOnClickListener(this);	  et_name=(EditText)findViewById(R.id.et_name);	  et_mac=(EditText)findViewById(R.id.et_mac);	  et_uuid=(EditText)findViewById(R.id.et_uuid);	  sw_auto=(Switch)findViewById(R.id.sw_auto);	  layout_setting=(LinearLayout)findViewById(R.id.layout_setting);	  txt_setting=(TextView)findViewById(R.id.txt_setting);	  txt_setting.setOnClickListener(this);	  layout_setting.setVisibility(View.GONE);	  txt_setting.setText(getString(R.string.expand_search_settings));	  img_loading=(ImageView)findViewById(R.id.img_loading);	  operatingAnim=AnimationUtils.loadAnimation(this,R.anim.rotate);	  operatingAnim.setInterpolator(new LinearInterpolator());	  progressDialog=new ProgressDialog(this);	  mDeviceAdapter=new DeviceAdapter(this);	  mDeviceAdapter.setOnDeviceClickListener(new DeviceAdapter.OnDeviceClickListener(){	    @Override public void onConnect(    BleDevice bleDevice){	      if (!BleManager.getInstance().isConnected(bleDevice)) {	        BleManager.getInstance().cancelScan();	        connect(bleDevice);	      }	    }	    @Override public void onDisConnect(    final BleDevice bleDevice){	      if (BleManager.getInstance().isConnected(bleDevice)) {	        BleManager.getInstance().disconnect(bleDevice);	      }	    }	    @Override public void onDetail(    BleDevice bleDevice){	      if (BleManager.getInstance().isConnected(bleDevice)) {	        Intent intent=new Intent(MainActivity.this,OperationActivity.class);	        intent.putExtra(OperationActivity.KEY_DATA,bleDevice);	        startActivity(intent);	      }	    }	  }	);	  ListView listView_device=(ListView)findViewById(R.id.list_device);	  listView_device.setAdapter(mDeviceAdapter);	}
Method Name:init view
API seq: findViewById setSupportActionBar findViewById getString btn_scan.setText btn_scan.setOnClickListener findViewById findViewById findViewById findViewById findViewById findViewById txt_setting.setOnClickListener layout_setting.setVisibility getString txt_setting.setText findViewById AnimationUtils.loadAnimation LinearInterpolator.new operatingAnim.setInterpolator ProgressDialog DeviceAdapter DeviceAdapter.OnDeviceClickListener.new mDeviceAdapter.setOnDeviceClickListener findViewById ListView.setAdapter
Tokens: rotate auto img listview scan listener uuid mac switch setting button dialog view bar search load find utils get action id text operating btn image settings adapter linear visibility sw edit start loading click et gone animation toolbar layout txt expand interpolator name progress anim device support

ID : 597
Received Java Code:@Override public void onConnect(BleDevice bleDevice){	  if (!BleManager.getInstance().isConnected(bleDevice)) {	    BleManager.getInstance().cancelScan();	    connect(bleDevice);	  }	}
Method Name:on connect
API seq: BleManager.getInstance BleManager.isConnected BleManager.getInstance BleManager.cancelScan connect
Tokens: cancel connected instance manager get scan ble device connect

ID : 598
Received Java Code:@Override public void onDisConnect(final BleDevice bleDevice){	  if (BleManager.getInstance().isConnected(bleDevice)) {	    BleManager.getInstance().disconnect(bleDevice);	  }	}
Method Name:on dis connect
API seq: BleManager.getInstance BleManager.isConnected BleManager.getInstance BleManager.disconnect
Tokens: connected disconnect instance manager get ble device

ID : 599
Received Java Code:@Override public void onDetail(BleDevice bleDevice){	  if (BleManager.getInstance().isConnected(bleDevice)) {	    Intent intent=new Intent(MainActivity.this,OperationActivity.class);	    intent.putExtra(OperationActivity.KEY_DATA,bleDevice);	    startActivity(intent);	  }	}
Method Name:on detail
API seq: BleManager.getInstance BleManager.isConnected Intent Intent.putExtra startActivity
Tokens: instance data activity manager start main intent put connected extra get ble device class operation key

ID : 600
Received Java Code:private void showConnectedDevice(){	  List<BleDevice> deviceList=BleManager.getInstance().getAllConnectedDevice();	  mDeviceAdapter.clearConnectedDevice();	  for (  BleDevice bleDevice : deviceList) {	    mDeviceAdapter.addDevice(bleDevice);	  }	  mDeviceAdapter.notifyDataSetChanged();	}
Method Name:show connected device
API seq: BleManager.getInstance BleManager.getAllConnectedDevice mDeviceAdapter.clearConnectedDevice mDeviceAdapter.addDevice mDeviceAdapter.notifyDataSetChanged
Tokens: add all adapter instance data manager clear notify connected get ble device changed

ID : 601
Received Java Code:private void setScanRule(){	  String[] uuids;	  String str_uuid=et_uuid.getText().toString();	  if (TextUtils.isEmpty(str_uuid)) {	    uuids=null;	  }	 else {	    uuids=str_uuid.split(",");	  }	  UUID[] serviceUuids=null;	  if (uuids != null && uuids.length > 0) {	    serviceUuids=new UUID[uuids.length];	    for (int i=0; i < uuids.length; i++) {	      String name=uuids[i];	      String[] components=name.split("-");	      if (components.length != 5) {	        serviceUuids[i]=null;	      }	 else {	        serviceUuids[i]=UUID.fromString(uuids[i]);	      }	    }	  }	  String[] names;	  String str_name=et_name.getText().toString();	  if (TextUtils.isEmpty(str_name)) {	    names=null;	  }	 else {	    names=str_name.split(",");	  }	  String mac=et_mac.getText().toString();	  boolean isAutoConnect=sw_auto.isChecked();	  BleScanRuleConfig scanRuleConfig=new BleScanRuleConfig.Builder().setServiceUuids(serviceUuids).setDeviceName(true,names).setDeviceMac(mac).setAutoConnect(isAutoConnect).setScanTimeOut(10000).build();	  BleManager.getInstance().initScanRule(scanRuleConfig);	}
Method Name:set scan rule
API seq: et_uuid.getText et_uuid.toString TextUtils.isEmpty String.split String.split UUID.fromString et_name.getText et_name.toString TextUtils.isEmpty String.split et_mac.getText et_mac.toString sw_auto.isChecked BleScanRuleConfig.Builder BleScanRuleConfig.setServiceUuids BleScanRuleConfig.setDeviceName BleScanRuleConfig.setDeviceMac BleScanRuleConfig.setAutoConnect BleScanRuleConfig.setScanTimeOut BleScanRuleConfig.build BleManager.getInstance BleManager.initScanRule
Tokens: components auto instance scan rule uuid mac empty out split utils get builder checked ble from text connect init sw manager length et str names boolean null build service name true 10000 time config device uuids

ID : 602
Received Java Code:private void startScan(){	  BleManager.getInstance().scan(new BleScanCallback(){	    @Override public void onScanStarted(    boolean success){	      mDeviceAdapter.clearScanDevice();	      mDeviceAdapter.notifyDataSetChanged();	      img_loading.startAnimation(operatingAnim);	      img_loading.setVisibility(View.VISIBLE);	      btn_scan.setText(getString(R.string.stop_scan));	    }	    @Override public void onLeScan(    BleDevice bleDevice){	      super.onLeScan(bleDevice);	    }	    @Override public void onScanning(    BleDevice bleDevice){	      mDeviceAdapter.addDevice(bleDevice);	      mDeviceAdapter.notifyDataSetChanged();	    }	    @Override public void onScanFinished(    List<BleDevice> scanResultList){	      img_loading.clearAnimation();	      img_loading.setVisibility(View.INVISIBLE);	      btn_scan.setText(getString(R.string.start_scan));	    }	  }	);	}
Method Name:start scan
API seq: BleManager.getInstance BleScanCallback.new BleScanCallback.scan
Tokens: instance manager get scan callback ble

ID : 603
Received Java Code:@Override public void onScanStarted(boolean success){	  mDeviceAdapter.clearScanDevice();	  mDeviceAdapter.notifyDataSetChanged();	  img_loading.startAnimation(operatingAnim);	  img_loading.setVisibility(View.VISIBLE);	  btn_scan.setText(getString(R.string.stop_scan));	}
Method Name:on scan started
API seq: mDeviceAdapter.clearScanDevice mDeviceAdapter.notifyDataSetChanged img_loading.startAnimation img_loading.setVisibility getString btn_scan.setText
Tokens: img adapter visible visibility data scan start clear loading notify animation view stop get operating text anim device btn changed

ID : 604
Received Java Code:@Override public void onLeScan(BleDevice bleDevice){	  super.onLeScan(bleDevice);	}
Method Name:on le scan
API seq: super.onLeScan
Tokens: super scan le ble device

ID : 605
Received Java Code:@Override public void onScanning(BleDevice bleDevice){	  mDeviceAdapter.addDevice(bleDevice);	  mDeviceAdapter.notifyDataSetChanged();	}
Method Name:on scanning
API seq: mDeviceAdapter.addDevice mDeviceAdapter.notifyDataSetChanged
Tokens: add adapter data ble device notify changed

ID : 606
Received Java Code:@Override public void onScanFinished(List<BleDevice> scanResultList){	  img_loading.clearAnimation();	  img_loading.setVisibility(View.INVISIBLE);	  btn_scan.setText(getString(R.string.start_scan));	}
Method Name:on scan finished
API seq: img_loading.clearAnimation img_loading.setVisibility getString btn_scan.setText
Tokens: img view visibility get start scan clear invisible text loading btn animation

ID : 607
Received Java Code:private void connect(final BleDevice bleDevice){	  BleManager.getInstance().connect(bleDevice,new BleGattCallback(){	    @Override public void onStartConnect(){	      progressDialog.show();	    }	    @Override public void onConnectFail(    BleDevice bleDevice,    BleException exception){	      img_loading.clearAnimation();	      img_loading.setVisibility(View.INVISIBLE);	      btn_scan.setText(getString(R.string.start_scan));	      progressDialog.dismiss();	      Toast.makeText(MainActivity.this,getString(R.string.connect_fail),Toast.LENGTH_LONG).show();	    }	    @Override public void onConnectSuccess(    BleDevice bleDevice,    BluetoothGatt gatt,    int status){	      progressDialog.dismiss();	      mDeviceAdapter.addDevice(bleDevice);	      mDeviceAdapter.notifyDataSetChanged();	    }	    @Override public void onDisConnected(    boolean isActiveDisConnected,    BleDevice bleDevice,    BluetoothGatt gatt,    int status){	      progressDialog.dismiss();	      mDeviceAdapter.removeDevice(bleDevice);	      mDeviceAdapter.notifyDataSetChanged();	      if (isActiveDisConnected) {	        Toast.makeText(MainActivity.this,getString(R.string.active_disconnected),Toast.LENGTH_LONG).show();	      }	 else {	        Toast.makeText(MainActivity.this,getString(R.string.disconnected),Toast.LENGTH_LONG).show();	        ObserverManager.getInstance().notifyObserver(bleDevice);	      }	    }	  }	);	}
Method Name:connect
API seq: BleManager.getInstance BleGattCallback.new BleGattCallback.connect
Tokens: instance manager get callback ble gatt device connect

ID : 608
Received Java Code:@Override public void onStartConnect(){	  progressDialog.show();	}
Method Name:on start connect
API seq: progressDialog.show
Tokens: dialog show progress

ID : 609
Received Java Code:@Override public void onConnectFail(BleDevice bleDevice,BleException exception){	  img_loading.clearAnimation();	  img_loading.setVisibility(View.INVISIBLE);	  btn_scan.setText(getString(R.string.start_scan));	  progressDialog.dismiss();	  Toast.makeText(MainActivity.this,getString(R.string.connect_fail),Toast.LENGTH_LONG).show();	}
Method Name:on connect fail
API seq: img_loading.clearAnimation img_loading.setVisibility getString btn_scan.setText progressDialog.dismiss getString Toast.makeText Toast.show
Tokens: img activity visibility start scan show clear length dismiss invisible main loading long animation dialog toast fail view get progress text btn make connect

ID : 610
Received Java Code:@Override public void onConnectSuccess(BleDevice bleDevice,BluetoothGatt gatt,int status){	  progressDialog.dismiss();	  mDeviceAdapter.addDevice(bleDevice);	  mDeviceAdapter.notifyDataSetChanged();	}
Method Name:on connect success
API seq: progressDialog.dismiss mDeviceAdapter.addDevice mDeviceAdapter.notifyDataSetChanged
Tokens: add dialog adapter data progress dismiss ble device notify changed

ID : 611
Received Java Code:@Override public void onDisConnected(boolean isActiveDisConnected,BleDevice bleDevice,BluetoothGatt gatt,int status){	  progressDialog.dismiss();	  mDeviceAdapter.removeDevice(bleDevice);	  mDeviceAdapter.notifyDataSetChanged();	  if (isActiveDisConnected) {	    Toast.makeText(MainActivity.this,getString(R.string.active_disconnected),Toast.LENGTH_LONG).show();	  }	 else {	    Toast.makeText(MainActivity.this,getString(R.string.disconnected),Toast.LENGTH_LONG).show();	    ObserverManager.getInstance().notifyObserver(bleDevice);	  }	}
Method Name:on dis connected
API seq: progressDialog.dismiss mDeviceAdapter.removeDevice mDeviceAdapter.notifyDataSetChanged getString Toast.makeText Toast.show getString Toast.makeText Toast.show ObserverManager.getInstance ObserverManager.notifyObserver
Tokens: instance activity data show main remove long notify dis dialog observer disconnected get ble text make adapter manager length active dismiss connected toast progress device changed

ID : 612
Received Java Code:private void readRssi(BleDevice bleDevice){	  BleManager.getInstance().readRssi(bleDevice,new BleRssiCallback(){	    @Override public void onRssiFailure(    BleException exception){	      Log.i(TAG,"onRssiFailure" + exception.toString());	    }	    @Override public void onRssiSuccess(    int rssi){	      Log.i(TAG,"onRssiSuccess: " + rssi);	    }	  }	);	}
Method Name:read rssi
API seq: BleManager.getInstance BleRssiCallback.new BleRssiCallback.readRssi
Tokens: rssi read instance manager get callback ble device

ID : 613
Received Java Code:@Override public void onRssiFailure(BleException exception){	  Log.i(TAG,"onRssiFailure" + exception.toString());	}
Method Name:on rssi failure
API seq: BleException.toString Log.i
Tokens: log tag

ID : 614
Received Java Code:@Override public void onRssiSuccess(int rssi){	  Log.i(TAG,"onRssiSuccess: " + rssi);	}
Method Name:on rssi success
API seq: Log.i
Tokens: rssi log tag

ID : 615
Received Java Code:private void setMtu(BleDevice bleDevice,int mtu){	  BleManager.getInstance().setMtu(bleDevice,mtu,new BleMtuChangedCallback(){	    @Override public void onSetMTUFailure(    BleException exception){	      Log.i(TAG,"onsetMTUFailure" + exception.toString());	    }	    @Override public void onMtuChanged(    int mtu){	      Log.i(TAG,"onMtuChanged: " + mtu);	    }	  }	);	}
Method Name:set mtu
API seq: BleManager.getInstance BleMtuChangedCallback.new BleMtuChangedCallback.setMtu
Tokens: instance manager get callback ble device mtu changed

ID : 616
Received Java Code:@Override public void onSetMTUFailure(BleException exception){	  Log.i(TAG,"onsetMTUFailure" + exception.toString());	}
Method Name:on set mtufailure
API seq: BleException.toString Log.i
Tokens: log tag

ID : 617
Received Java Code:@Override public void onMtuChanged(int mtu){	  Log.i(TAG,"onMtuChanged: " + mtu);	}
Method Name:on mtu changed
API seq: Log.i
Tokens: log tag mtu

ID : 618
Received Java Code:@Override public final void onRequestPermissionsResult(int requestCode,@NonNull String[] permissions,@NonNull int[] grantResults){	  super.onRequestPermissionsResult(requestCode,permissions,grantResults);	switch (requestCode) {	case REQUEST_CODE_PERMISSION_LOCATION:	    if (grantResults.length > 0) {	      for (int i=0; i < grantResults.length; i++) {	        if (grantResults[i] == PackageManager.PERMISSION_GRANTED) {	          onPermissionGranted(permissions[i]);	        }	      }	    }	  break;	}	}
Method Name:on request permissions result
API seq: super.onRequestPermissionsResult switch onPermissionGranted
Tokens: request code package manager break length permission switch granted result super permissions location grant results case

ID : 619
Received Java Code:private void checkPermissions(){	  BluetoothAdapter bluetoothAdapter=BluetoothAdapter.getDefaultAdapter();	  if (!bluetoothAdapter.isEnabled()) {	    Toast.makeText(this,getString(R.string.please_open_blue),Toast.LENGTH_LONG).show();	    return;	  }	  String[] permissions={Manifest.permission.ACCESS_FINE_LOCATION};	  List<String> permissionDeniedList=new ArrayList<>();	  for (  String permission : permissions) {	    int permissionCheck=ContextCompat.checkSelfPermission(this,permission);	    if (permissionCheck == PackageManager.PERMISSION_GRANTED) {	      onPermissionGranted(permission);	    }	 else {	      permissionDeniedList.add(permission);	    }	  }	  if (!permissionDeniedList.isEmpty()) {	    String[] deniedPermissions=permissionDeniedList.toArray(new String[permissionDeniedList.size()]);	    ActivityCompat.requestPermissions(this,deniedPermissions,REQUEST_CODE_PERMISSION_LOCATION);	  }	}
Method Name:check permissions
API seq: BluetoothAdapter.getDefaultAdapter BluetoothAdapter.isEnabled getString Toast.makeText Toast.show ContextCompat.checkSelfPermission onPermissionGranted permissionDeniedList.add permissionDeniedList.isEmpty permissionDeniedList.size permissionDeniedList.toArray ActivityCompat.requestPermissions
Tokens: request access code activity show long enabled granted empty default fine permissions get context text make add package adapter manager manifest length permission please check toast bluetooth blue size self location denied compat open

ID : 620
Received Java Code:private void onPermissionGranted(String permission){	switch (permission) {	case Manifest.permission.ACCESS_FINE_LOCATION:	    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && !checkGPSIsOpen()) {	      new AlertDialog.Builder(this).setTitle(R.string.notifyTitle).setMessage(R.string.gpsNotifyMsg).setNegativeButton(R.string.cancel,new DialogInterface.OnClickListener(){	        @Override public void onClick(        DialogInterface dialog,        int which){	          finish();	        }	      }	).setPositiveButton(R.string.setting,new DialogInterface.OnClickListener(){	        @Override public void onClick(        DialogInterface dialog,        int which){	          Intent intent=new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);	          startActivityForResult(intent,REQUEST_CODE_OPEN_GPS);	        }	      }	).setCancelable(false).show();	    }	 else {	      setScanRule();	      startScan();	    }	  break;	}	}
Method Name:on permission granted
API seq: switch checkGPSIsOpen AlertDialog.Builder AlertDialog.setTitle AlertDialog.setMessage DialogInterface.OnClickListener.new DialogInterface.OnClickListener.setNegativeButton DialogInterface.OnClickListener.new DialogInterface.OnClickListener.setPositiveButton DialogInterface.OnClickListener.setCancelable DialogInterface.OnClickListener.show setScanRule startScan
Tokens: cancel msg codes access cancelable show scan listener rule interface title notify switch setting button dialog negative alert fine builder case break manifest false start permission positive check gps message version click gpsis build location sdk open

ID : 621
Received Java Code:@Override public void onClick(DialogInterface dialog,int which){	  finish();	}
Method Name:on click
API seq: finish
Tokens: finish

ID : 622
Received Java Code:@Override public void onClick(DialogInterface dialog,int which){	  Intent intent=new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);	  startActivityForResult(intent,REQUEST_CODE_OPEN_GPS);	}
Method Name:on click
API seq: Intent startActivityForResult
Tokens: result settings request code activity start action location source gps intent open

ID : 623
Received Java Code:private boolean checkGPSIsOpen(){	  LocationManager locationManager=(LocationManager)this.getSystemService(Context.LOCATION_SERVICE);	  if (locationManager == null)   return false;	  return locationManager.isProviderEnabled(android.location.LocationManager.GPS_PROVIDER);	}
Method Name:check gpsis open
API seq: this.getSystemService LocationManager.isProviderEnabled
Tokens: system manager null provider service get android context false location gps enabled

ID : 624
Received Java Code:@Override protected void onActivityResult(int requestCode,int resultCode,Intent data){	  super.onActivityResult(requestCode,resultCode,data);	  if (requestCode == REQUEST_CODE_OPEN_GPS) {	    if (checkGPSIsOpen()) {	      setScanRule();	      startScan();	    }	  }	}
Method Name:on activity result
API seq: super.onActivityResult checkGPSIsOpen setScanRule startScan
Tokens: request code data activity scan start rule check gps super result gpsis open

ID : 625
Received Java Code:public DeviceAdapter(Context context){	  this.context=context;	  bleDeviceList=new ArrayList<>();	}
Method Name:device adapter
API seq:
Tokens: context ble device

ID : 626
Received Java Code:public void addDevice(BleDevice bleDevice){	  removeDevice(bleDevice);	  bleDeviceList.add(bleDevice);	}
Method Name:add device
API seq: removeDevice bleDeviceList.add
Tokens: add ble device remove

ID : 627
Received Java Code:public void removeDevice(BleDevice bleDevice){	  for (int i=0; i < bleDeviceList.size(); i++) {	    BleDevice device=bleDeviceList.get(i);	    if (bleDevice.getKey().equals(device.getKey())) {	      bleDeviceList.remove(i);	    }	  }	}
Method Name:remove device
API seq: bleDeviceList.size bleDeviceList.get BleDevice.getKey BleDevice.getKey BleDevice.equals bleDeviceList.remove
Tokens: size get equals ble device key remove

ID : 628
Received Java Code:public void clearConnectedDevice(){	  for (int i=0; i < bleDeviceList.size(); i++) {	    BleDevice device=bleDeviceList.get(i);	    if (BleManager.getInstance().isConnected(device)) {	      bleDeviceList.remove(i);	    }	  }	}
Method Name:clear connected device
API seq: bleDeviceList.size bleDeviceList.get BleManager.getInstance BleManager.isConnected bleDeviceList.remove
Tokens: connected instance size manager get ble device remove

ID : 629
Received Java Code:public void clearScanDevice(){	  for (int i=0; i < bleDeviceList.size(); i++) {	    BleDevice device=bleDeviceList.get(i);	    if (!BleManager.getInstance().isConnected(device)) {	      bleDeviceList.remove(i);	    }	  }	}
Method Name:clear scan device
API seq: bleDeviceList.size bleDeviceList.get BleManager.getInstance BleManager.isConnected bleDeviceList.remove
Tokens: connected instance size manager get ble device remove

ID : 630
Received Java Code:public void clear(){	  clearConnectedDevice();	  clearScanDevice();	}
Method Name:clear
API seq: clearConnectedDevice clearScanDevice
Tokens: connected clear scan device

ID : 631
Received Java Code:@Override public int getCount(){	  return bleDeviceList.size();	}
Method Name:get count
API seq: bleDeviceList.size
Tokens: size ble device

ID : 632
Received Java Code:@Override public BleDevice getItem(int position){	  if (position > bleDeviceList.size())   return null;	  return bleDeviceList.get(position);	}
Method Name:get item
API seq: bleDeviceList.size bleDeviceList.get
Tokens: size null get ble position device

ID : 633
Received Java Code:@Override public long getItemId(int position){	  return 0;	}
Method Name:get item id
API seq:
Tokens:

ID : 634
Received Java Code:@Override public View getView(int position,View convertView,ViewGroup parent){	  ViewHolder holder;	  if (convertView != null) {	    holder=(ViewHolder)convertView.getTag();	  }	 else {	    convertView=View.inflate(context,R.layout.adapter_device,null);	    holder=new ViewHolder();	    convertView.setTag(holder);	    holder.img_blue=(ImageView)convertView.findViewById(R.id.img_blue);	    holder.txt_name=(TextView)convertView.findViewById(R.id.txt_name);	    holder.txt_mac=(TextView)convertView.findViewById(R.id.txt_mac);	    holder.txt_rssi=(TextView)convertView.findViewById(R.id.txt_rssi);	    holder.layout_idle=(LinearLayout)convertView.findViewById(R.id.layout_idle);	    holder.layout_connected=(LinearLayout)convertView.findViewById(R.id.layout_connected);	    holder.btn_disconnect=(Button)convertView.findViewById(R.id.btn_disconnect);	    holder.btn_connect=(Button)convertView.findViewById(R.id.btn_connect);	    holder.btn_detail=(Button)convertView.findViewById(R.id.btn_detail);	  }	  final BleDevice bleDevice=getItem(position);	  if (bleDevice != null) {	    boolean isConnected=BleManager.getInstance().isConnected(bleDevice);	    String name=bleDevice.getName();	    String mac=bleDevice.getMac();	    int rssi=bleDevice.getRssi();	    holder.txt_name.setText(name);	    holder.txt_mac.setText(mac);	    holder.txt_rssi.setText(String.valueOf(rssi));	    if (isConnected) {	      holder.img_blue.setImageResource(R.mipmap.ic_blue_connected);	      holder.txt_name.setTextColor(0xFF1DE9B6);	      holder.txt_mac.setTextColor(0xFF1DE9B6);	      holder.layout_idle.setVisibility(View.GONE);	      holder.layout_connected.setVisibility(View.VISIBLE);	    }	 else {	      holder.img_blue.setImageResource(R.mipmap.ic_blue_remote);	      holder.txt_name.setTextColor(0xFF000000);	      holder.txt_mac.setTextColor(0xFF000000);	      holder.layout_idle.setVisibility(View.VISIBLE);	      holder.layout_connected.setVisibility(View.GONE);	    }	  }	  holder.btn_connect.setOnClickListener(new View.OnClickListener(){	    @Override public void onClick(    View view){	      if (mListener != null) {	        mListener.onConnect(bleDevice);	      }	    }	  }	);	  holder.btn_disconnect.setOnClickListener(new View.OnClickListener(){	    @Override public void onClick(    View view){	      if (mListener != null) {	        mListener.onDisConnect(bleDevice);	      }	    }	  }	);	  holder.btn_detail.setOnClickListener(new View.OnClickListener(){	    @Override public void onClick(    View view){	      if (mListener != null) {	        mListener.onDetail(bleDevice);	      }	    }	  }	);	  return convertView;	}
Method Name:get view
API seq: View.getTag View.inflate ViewHolder View.setTag View.findViewById View.findViewById View.findViewById View.findViewById View.findViewById View.findViewById View.findViewById View.findViewById View.findViewById getItem BleManager.getInstance BleManager.isConnected BleDevice.getName BleDevice.getMac BleDevice.getRssi ViewHolder.txt_name.setText ViewHolder.txt_mac.setText String.valueOf ViewHolder.txt_rssi.setText ViewHolder.img_blue.setImageResource ViewHolder.txt_name.setTextColor ViewHolder.txt_mac.setTextColor ViewHolder.layout_idle.setVisibility ViewHolder.layout_connected.setVisibility ViewHolder.img_blue.setImageResource ViewHolder.txt_name.setTextColor ViewHolder.txt_mac.setTextColor ViewHolder.layout_idle.setVisibility ViewHolder.layout_connected.setVisibility View.OnClickListener.new ViewHolder.btn_connect.setOnClickListener View.OnClickListener.new ViewHolder.btn_disconnect.setOnClickListener View.OnClickListener.new ViewHolder.btn_detail.setOnClickListener
Tokens: disconnect instance listener convert remote view find context ic id text tag image item adapter visible visibility resource click gone null name detail position device img color 0x mac button get ff000000 ble ff1de9b6 btn value connect rssi linear manager idle holder layout connected txt boolean blue inflate mipmap

ID : 635
Received Java Code:@Override public void onClick(View view){	  if (mListener != null) {	    mListener.onConnect(bleDevice);	  }	}
Method Name:on click
API seq: mListener.onConnect
Tokens: null listener ble device connect

ID : 636
Received Java Code:@Override public void onClick(View view){	  if (mListener != null) {	    mListener.onDisConnect(bleDevice);	  }	}
Method Name:on click
API seq: mListener.onDisConnect
Tokens: null listener ble device connect dis

ID : 637
Received Java Code:@Override public void onClick(View view){	  if (mListener != null) {	    mListener.onDetail(bleDevice);	  }	}
Method Name:on click
API seq: mListener.onDetail
Tokens: null listener ble detail device

ID : 638
Received Java Code:public void setOnDeviceClickListener(OnDeviceClickListener listener){	  this.mListener=listener;	}
Method Name:set on device click listener
API seq:
Tokens: listener

ID : 639
Received Java Code:@Override public View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){	  View v=inflater.inflate(R.layout.fragment_service_list,null);	  initView(v);	  showData();	  return v;	}
Method Name:on create view
API seq: LayoutInflater.inflate initView showData
Tokens: layout init view fragment data inflate null service show inflater

ID : 640
Received Java Code:private void initView(View v){	  txt_name=(TextView)v.findViewById(R.id.txt_name);	  txt_mac=(TextView)v.findViewById(R.id.txt_mac);	  mResultAdapter=new ResultAdapter(getActivity());	  ListView listView_device=(ListView)v.findViewById(R.id.list_service);	  listView_device.setAdapter(mResultAdapter);	  listView_device.setOnItemClickListener(new AdapterView.OnItemClickListener(){	    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){	      BluetoothGattService service=mResultAdapter.getItem(position);	      ((OperationActivity)getActivity()).setBluetoothGattService(service);	      ((OperationActivity)getActivity()).changePage(1);	    }	  }	);	}
Method Name:init view
API seq: View.findViewById View.findViewById getActivity ResultAdapter View.findViewById ListView.setAdapter AdapterView.OnItemClickListener.new ListView.setOnItemClickListener
Tokens: item adapter activity listview listener click mac result txt view service find get name id text device

ID : 641
Received Java Code:@Override public void onItemClick(AdapterView<?> parent,View view,int position,long id){	  BluetoothGattService service=mResultAdapter.getItem(position);	  ((OperationActivity)getActivity()).setBluetoothGattService(service);	  ((OperationActivity)getActivity()).changePage(1);	}
Method Name:on item click
API seq: mResultAdapter.getItem getActivity getActivity
Tokens: result item adapter bluetooth activity service get change gatt page position operation

ID : 642
Received Java Code:private void showData(){	  BleDevice bleDevice=((OperationActivity)getActivity()).getBleDevice();	  String name=bleDevice.getName();	  String mac=bleDevice.getMac();	  BluetoothGatt gatt=BleManager.getInstance().getBluetoothGatt(bleDevice);	  txt_name.setText(String.valueOf(getActivity().getString(R.string.name) + name));	  txt_mac.setText(String.valueOf(getActivity().getString(R.string.mac) + mac));	  mResultAdapter.clear();	  for (  BluetoothGattService service : gatt.getServices()) {	    mResultAdapter.addResult(service);	  }	  mResultAdapter.notifyDataSetChanged();	}
Method Name:show data
API seq: getActivity BleDevice.getName BleDevice.getMac BleManager.getInstance BleManager.getBluetoothGatt getActivity getActivity.getString String.valueOf txt_name.setText getActivity getActivity.getString String.valueOf txt_mac.setText mResultAdapter.clear BluetoothGatt.getServices mResultAdapter.addResult mResultAdapter.notifyDataSetChanged
Tokens: add adapter instance manager activity data clear gatt services mac notify result txt bluetooth service get name ble text device operation value changed

ID : 643
Received Java Code:@Override public View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){	  View v=inflater.inflate(R.layout.fragment_characteric_operation,null);	  initView(v);	  return v;	}
Method Name:on create view
API seq: LayoutInflater.inflate initView
Tokens: layout init fragment view inflate null characteric operation inflater

ID : 644
Received Java Code:private void initView(View v){	  layout_container=(LinearLayout)v.findViewById(R.id.layout_container);	}
Method Name:init view
API seq: View.findViewById
Tokens: layout container view linear find id

ID : 645
Received Java Code:public void showData(){	  final BleDevice bleDevice=((OperationActivity)getActivity()).getBleDevice();	  final BluetoothGattCharacteristic characteristic=((OperationActivity)getActivity()).getCharacteristic();	  final int charaProp=((OperationActivity)getActivity()).getCharaProp();	  String child=characteristic.getUuid().toString() + String.valueOf(charaProp);	  for (int i=0; i < layout_container.getChildCount(); i++) {	    layout_container.getChildAt(i).setVisibility(View.GONE);	  }	  if (childList.contains(child)) {	    layout_container.findViewWithTag(bleDevice.getKey() + characteristic.getUuid().toString() + charaProp).setVisibility(View.VISIBLE);	  }	 else {	    childList.add(child);	    View view=LayoutInflater.from(getActivity()).inflate(R.layout.layout_characteric_operation,null);	    view.setTag(bleDevice.getKey() + characteristic.getUuid().toString() + charaProp);	    LinearLayout layout_add=(LinearLayout)view.findViewById(R.id.layout_add);	    final TextView txt_title=(TextView)view.findViewById(R.id.txt_title);	    txt_title.setText(String.valueOf(characteristic.getUuid().toString() + getActivity().getString(R.string.data_changed)));	    final TextView txt=(TextView)view.findViewById(R.id.txt);	    txt.setMovementMethod(ScrollingMovementMethod.getInstance());	switch (charaProp) {	case PROPERTY_READ:	{	        View view_add=LayoutInflater.from(getActivity()).inflate(R.layout.layout_characteric_operation_button,null);	        Button btn=(Button)view_add.findViewById(R.id.btn);	        btn.setText(getActivity().getString(R.string.read));	        btn.setOnClickListener(new View.OnClickListener(){	          @Override public void onClick(          View view){	            BleManager.getInstance().read(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),new BleReadCallback(){	              @Override public void onReadSuccess(              final byte[] data){	                runOnUiThread(new Runnable(){	                  @Override public void run(){	                    addText(txt,HexUtil.formatHexString(data,true));	                  }	                }	);	              }	              @Override public void onReadFailure(              final BleException exception){	                runOnUiThread(new Runnable(){	                  @Override public void run(){	                    addText(txt,exception.toString());	                  }	                }	);	              }	            }	);	          }	        }	);	        layout_add.addView(view_add);	      }	    break;	case PROPERTY_WRITE:	{	    View view_add=LayoutInflater.from(getActivity()).inflate(R.layout.layout_characteric_operation_et,null);	    final EditText et=(EditText)view_add.findViewById(R.id.et);	    Button btn=(Button)view_add.findViewById(R.id.btn);	    btn.setText(getActivity().getString(R.string.write));	    btn.setOnClickListener(new View.OnClickListener(){	      @Override public void onClick(      View view){	        String hex=et.getText().toString();	        if (TextUtils.isEmpty(hex)) {	          return;	        }	        BleManager.getInstance().write(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),HexUtil.hexStringToBytes(hex),new BleWriteCallback(){	          @Override public void onWriteSuccess(          final int current,          final int total,          final byte[] justWrite){	            runOnUiThread(new Runnable(){	              @Override public void run(){	                addText(txt,"write success, current: " + current + " total: "+ total+ " justWrite: "+ HexUtil.formatHexString(justWrite,true));	              }	            }	);	          }	          @Override public void onWriteFailure(          final BleException exception){	            runOnUiThread(new Runnable(){	              @Override public void run(){	                addText(txt,exception.toString());	              }	            }	);	          }	        }	);	      }	    }	);	    layout_add.addView(view_add);	  }	break;	case PROPERTY_WRITE_NO_RESPONSE:	{	View view_add=LayoutInflater.from(getActivity()).inflate(R.layout.layout_characteric_operation_et,null);	final EditText et=(EditText)view_add.findViewById(R.id.et);	Button btn=(Button)view_add.findViewById(R.id.btn);	btn.setText(getActivity().getString(R.string.write));	btn.setOnClickListener(new View.OnClickListener(){	  @Override public void onClick(  View view){	    String hex=et.getText().toString();	    if (TextUtils.isEmpty(hex)) {	      return;	    }	    BleManager.getInstance().write(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),HexUtil.hexStringToBytes(hex),new BleWriteCallback(){	      @Override public void onWriteSuccess(      final int current,      final int total,      final byte[] justWrite){	        runOnUiThread(new Runnable(){	          @Override public void run(){	            addText(txt,"write success, current: " + current + " total: "+ total+ " justWrite: "+ HexUtil.formatHexString(justWrite,true));	          }	        }	);	      }	      @Override public void onWriteFailure(      final BleException exception){	        runOnUiThread(new Runnable(){	          @Override public void run(){	            addText(txt,exception.toString());	          }	        }	);	      }	    }	);	  }	}	);	layout_add.addView(view_add);	}	break;	case PROPERTY_NOTIFY:	{	View view_add=LayoutInflater.from(getActivity()).inflate(R.layout.layout_characteric_operation_button,null);	final Button btn=(Button)view_add.findViewById(R.id.btn);	btn.setText(getActivity().getString(R.string.open_notification));	btn.setOnClickListener(new View.OnClickListener(){	@Override public void onClick(View view){	if (btn.getText().toString().equals(getActivity().getString(R.string.open_notification))) {	  btn.setText(getActivity().getString(R.string.close_notification));	  BleManager.getInstance().notify(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),new BleNotifyCallback(){	    @Override public void onNotifySuccess(){	      runOnUiThread(new Runnable(){	        @Override public void run(){	          addText(txt,"notify success");	        }	      }	);	    }	    @Override public void onNotifyFailure(    final BleException exception){	      runOnUiThread(new Runnable(){	        @Override public void run(){	          addText(txt,exception.toString());	        }	      }	);	    }	    @Override public void onCharacteristicChanged(    byte[] data){	      runOnUiThread(new Runnable(){	        @Override public void run(){	          addText(txt,HexUtil.formatHexString(characteristic.getValue(),true));	        }	      }	);	    }	  }	);	}	 else {	  btn.setText(getActivity().getString(R.string.open_notification));	  BleManager.getInstance().stopNotify(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString());	}	}	}	);	layout_add.addView(view_add);	}	break;	case PROPERTY_INDICATE:	{	View view_add=LayoutInflater.from(getActivity()).inflate(R.layout.layout_characteric_operation_button,null);	final Button btn=(Button)view_add.findViewById(R.id.btn);	btn.setText(getActivity().getString(R.string.open_notification));	btn.setOnClickListener(new View.OnClickListener(){	@Override public void onClick(View view){	if (btn.getText().toString().equals(getActivity().getString(R.string.open_notification))) {	btn.setText(getActivity().getString(R.string.close_notification));	BleManager.getInstance().indicate(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),new BleIndicateCallback(){	@Override public void onIndicateSuccess(){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,"indicate success");	    }	  }	);	}	@Override public void onIndicateFailure(final BleException exception){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,exception.toString());	    }	  }	);	}	@Override public void onCharacteristicChanged(byte[] data){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,HexUtil.formatHexString(characteristic.getValue(),true));	    }	  }	);	}	}	);	}	 else {	btn.setText(getActivity().getString(R.string.open_notification));	BleManager.getInstance().stopIndicate(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString());	}	}	}	);	layout_add.addView(view_add);	}	break;	}	layout_container.addView(view);	}	}
Method Name:show data
API seq: getActivity getActivity getActivity BluetoothGattCharacteristic.getUuid BluetoothGattCharacteristic.toString String.valueOf layout_container.getChildCount layout_container.getChildAt layout_container.setVisibility childList.contains BleDevice.getKey BluetoothGattCharacteristic.getUuid BluetoothGattCharacteristic.toString layout_container.findViewWithTag layout_container.setVisibility childList.add getActivity LayoutInflater.from LayoutInflater.inflate BleDevice.getKey BluetoothGattCharacteristic.getUuid BluetoothGattCharacteristic.toString View.setTag View.findViewById View.findViewById BluetoothGattCharacteristic.getUuid BluetoothGattCharacteristic.toString getActivity getActivity.getString String.valueOf TextView.setText View.findViewById ScrollingMovementMethod.getInstance TextView.setMovementMethod switch getActivity LayoutInflater.from LayoutInflater.inflate View.findViewById getActivity getActivity.getString Button.setText View.OnClickListener.new Button.setOnClickListener LinearLayout.addView getActivity LayoutInflater.from LayoutInflater.inflate View.findViewById View.findViewById getActivity getActivity.getString Button.setText View.OnClickListener.new Button.setOnClickListener LinearLayout.addView getActivity LayoutInflater.from LayoutInflater.inflate View.findViewById View.findViewById getActivity getActivity.getString Button.setText View.OnClickListener.new Button.setOnClickListener LinearLayout.addView getActivity LayoutInflater.from LayoutInflater.inflate View.findViewById getActivity getActivity.getString Button.setText View.OnClickListener.new Button.setOnClickListener LinearLayout.addView getActivity LayoutInflater.from LayoutInflater.inflate View.findViewById getActivity getActivity.getString Button.setText View.OnClickListener.new Button.setOnClickListener LinearLayout.addView layout_container.addView
Tokens: container instance data listener uuid notification view scrolling find property from id text tag write case add read visible visibility method edit count click et gone contains null characteric device inflater child changed activity title characteristic notify switch button get prop ble indicate btn value key linear break chara gatt layout txt bluetooth inflate response operation movement open

ID : 646
Received Java Code:@Override public void onClick(View view){	  BleManager.getInstance().read(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),new BleReadCallback(){	    @Override public void onReadSuccess(    final byte[] data){	      runOnUiThread(new Runnable(){	        @Override public void run(){	          addText(txt,HexUtil.formatHexString(data,true));	        }	      }	);	    }	    @Override public void onReadFailure(    final BleException exception){	      runOnUiThread(new Runnable(){	        @Override public void run(){	          addText(txt,exception.toString());	        }	      }	);	    }	  }	);	}
Method Name:on click
API seq: BleManager.getInstance characteristic.getService characteristic.getUuid characteristic.toString characteristic.getUuid characteristic.toString BleReadCallback.new BleReadCallback.read
Tokens: read instance manager service get callback ble device uuid characteristic

ID : 647
Received Java Code:@Override public void onReadSuccess(final byte[] data){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,HexUtil.formatHexString(data,true));	    }	  }	);	}
Method Name:on read success
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 648
Received Java Code:@Override public void run(){	  addText(txt,HexUtil.formatHexString(data,true));	}
Method Name:run
API seq: HexUtil.formatHexString addText
Tokens: add txt util data true format hex text

ID : 649
Received Java Code:@Override public void onReadFailure(final BleException exception){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,exception.toString());	    }	  }	);	}
Method Name:on read failure
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 650
Received Java Code:@Override public void run(){	  addText(txt,exception.toString());	}
Method Name:run
API seq: exception.toString addText
Tokens: add txt text

ID : 651
Received Java Code:@Override public void onClick(View view){	  String hex=et.getText().toString();	  if (TextUtils.isEmpty(hex)) {	    return;	  }	  BleManager.getInstance().write(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),HexUtil.hexStringToBytes(hex),new BleWriteCallback(){	    @Override public void onWriteSuccess(    final int current,    final int total,    final byte[] justWrite){	      runOnUiThread(new Runnable(){	        @Override public void run(){	          addText(txt,"write success, current: " + current + " total: "+ total+ " justWrite: "+ HexUtil.formatHexString(justWrite,true));	        }	      }	);	    }	    @Override public void onWriteFailure(    final BleException exception){	      runOnUiThread(new Runnable(){	        @Override public void run(){	          addText(txt,exception.toString());	        }	      }	);	    }	  }	);	}
Method Name:on click
API seq: et.getText et.toString TextUtils.isEmpty BleManager.getInstance characteristic.getService characteristic.getUuid characteristic.toString characteristic.getUuid characteristic.toString HexUtil.hexStringToBytes BleWriteCallback.new BleWriteCallback.write
Tokens: instance manager uuid characteristic empty et util utils service bytes get callback hex ble text device write

ID : 652
Received Java Code:@Override public void onWriteSuccess(final int current,final int total,final byte[] justWrite){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,"write success, current: " + current + " total: "+ total+ " justWrite: "+ HexUtil.formatHexString(justWrite,true));	    }	  }	);	}
Method Name:on write success
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 653
Received Java Code:@Override public void run(){	  addText(txt,"write success, current: " + current + " total: "+ total+ " justWrite: "+ HexUtil.formatHexString(justWrite,true));	}
Method Name:run
API seq: HexUtil.formatHexString addText
Tokens: add txt current total util true format hex text just write

ID : 654
Received Java Code:@Override public void onWriteFailure(final BleException exception){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,exception.toString());	    }	  }	);	}
Method Name:on write failure
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 655
Received Java Code:@Override public void run(){	  addText(txt,exception.toString());	}
Method Name:run
API seq: exception.toString addText
Tokens: add txt text

ID : 656
Received Java Code:@Override public void onClick(View view){	  String hex=et.getText().toString();	  if (TextUtils.isEmpty(hex)) {	    return;	  }	  BleManager.getInstance().write(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),HexUtil.hexStringToBytes(hex),new BleWriteCallback(){	    @Override public void onWriteSuccess(    final int current,    final int total,    final byte[] justWrite){	      runOnUiThread(new Runnable(){	        @Override public void run(){	          addText(txt,"write success, current: " + current + " total: "+ total+ " justWrite: "+ HexUtil.formatHexString(justWrite,true));	        }	      }	);	    }	    @Override public void onWriteFailure(    final BleException exception){	      runOnUiThread(new Runnable(){	        @Override public void run(){	          addText(txt,exception.toString());	        }	      }	);	    }	  }	);	}
Method Name:on click
API seq: et.getText et.toString TextUtils.isEmpty BleManager.getInstance characteristic.getService characteristic.getUuid characteristic.toString characteristic.getUuid characteristic.toString HexUtil.hexStringToBytes BleWriteCallback.new BleWriteCallback.write
Tokens: instance manager uuid characteristic empty et util utils service bytes get callback hex ble text device write

ID : 657
Received Java Code:@Override public void onWriteSuccess(final int current,final int total,final byte[] justWrite){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,"write success, current: " + current + " total: "+ total+ " justWrite: "+ HexUtil.formatHexString(justWrite,true));	    }	  }	);	}
Method Name:on write success
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 658
Received Java Code:@Override public void run(){	  addText(txt,"write success, current: " + current + " total: "+ total+ " justWrite: "+ HexUtil.formatHexString(justWrite,true));	}
Method Name:run
API seq: HexUtil.formatHexString addText
Tokens: add txt current total util true format hex text just write

ID : 659
Received Java Code:@Override public void onWriteFailure(final BleException exception){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,exception.toString());	    }	  }	);	}
Method Name:on write failure
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 660
Received Java Code:@Override public void run(){	  addText(txt,exception.toString());	}
Method Name:run
API seq: exception.toString addText
Tokens: add txt text

ID : 661
Received Java Code:@Override public void onClick(View view){	  if (btn.getText().toString().equals(getActivity().getString(R.string.open_notification))) {	    btn.setText(getActivity().getString(R.string.close_notification));	    BleManager.getInstance().notify(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),new BleNotifyCallback(){	      @Override public void onNotifySuccess(){	        runOnUiThread(new Runnable(){	          @Override public void run(){	            addText(txt,"notify success");	          }	        }	);	      }	      @Override public void onNotifyFailure(      final BleException exception){	        runOnUiThread(new Runnable(){	          @Override public void run(){	            addText(txt,exception.toString());	          }	        }	);	      }	      @Override public void onCharacteristicChanged(      byte[] data){	        runOnUiThread(new Runnable(){	          @Override public void run(){	            addText(txt,HexUtil.formatHexString(characteristic.getValue(),true));	          }	        }	);	      }	    }	);	  }	 else {	    btn.setText(getActivity().getString(R.string.open_notification));	    BleManager.getInstance().stopNotify(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString());	  }	}
Method Name:on click
API seq: btn.getText btn.toString getActivity getActivity.getString getActivity.equals getActivity getActivity.getString btn.setText BleManager.getInstance characteristic.getService characteristic.getUuid characteristic.toString characteristic.getUuid characteristic.toString BleNotifyCallback.new BleNotifyCallback.notify getActivity getActivity.getString btn.setText BleManager.getInstance characteristic.getService characteristic.getUuid characteristic.toString characteristic.getUuid characteristic.toString characteristic.stopNotify
Tokens: instance activity manager uuid notify characteristic notification stop service get equals callback ble text device close btn open

ID : 662
Received Java Code:@Override public void onNotifySuccess(){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,"notify success");	    }	  }	);	}
Method Name:on notify success
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 663
Received Java Code:@Override public void run(){	  addText(txt,"notify success");	}
Method Name:run
API seq: addText
Tokens: add txt text

ID : 664
Received Java Code:@Override public void onNotifyFailure(final BleException exception){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,exception.toString());	    }	  }	);	}
Method Name:on notify failure
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 665
Received Java Code:@Override public void run(){	  addText(txt,exception.toString());	}
Method Name:run
API seq: exception.toString addText
Tokens: add txt text

ID : 666
Received Java Code:@Override public void onCharacteristicChanged(byte[] data){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,HexUtil.formatHexString(characteristic.getValue(),true));	    }	  }	);	}
Method Name:on characteristic changed
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 667
Received Java Code:@Override public void run(){	  addText(txt,HexUtil.formatHexString(characteristic.getValue(),true));	}
Method Name:run
API seq: characteristic.getValue HexUtil.formatHexString addText
Tokens: add txt util get true format hex text value characteristic

ID : 668
Received Java Code:@Override public void onClick(View view){	  if (btn.getText().toString().equals(getActivity().getString(R.string.open_notification))) {	    btn.setText(getActivity().getString(R.string.close_notification));	    BleManager.getInstance().indicate(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString(),new BleIndicateCallback(){	      @Override public void onIndicateSuccess(){	        runOnUiThread(new Runnable(){	          @Override public void run(){	            addText(txt,"indicate success");	          }	        }	);	      }	      @Override public void onIndicateFailure(      final BleException exception){	        runOnUiThread(new Runnable(){	          @Override public void run(){	            addText(txt,exception.toString());	          }	        }	);	      }	      @Override public void onCharacteristicChanged(      byte[] data){	        runOnUiThread(new Runnable(){	          @Override public void run(){	            addText(txt,HexUtil.formatHexString(characteristic.getValue(),true));	          }	        }	);	      }	    }	);	  }	 else {	    btn.setText(getActivity().getString(R.string.open_notification));	    BleManager.getInstance().stopIndicate(bleDevice,characteristic.getService().getUuid().toString(),characteristic.getUuid().toString());	  }	}
Method Name:on click
API seq: btn.getText btn.toString getActivity getActivity.getString getActivity.equals getActivity getActivity.getString btn.setText BleManager.getInstance characteristic.getService characteristic.getUuid characteristic.toString characteristic.getUuid characteristic.toString BleIndicateCallback.new BleIndicateCallback.indicate getActivity getActivity.getString btn.setText BleManager.getInstance characteristic.getService characteristic.getUuid characteristic.toString characteristic.getUuid characteristic.toString characteristic.stopIndicate
Tokens: instance activity manager uuid characteristic notification stop service get equals callback ble indicate text device close btn open

ID : 669
Received Java Code:@Override public void onIndicateSuccess(){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,"indicate success");	    }	  }	);	}
Method Name:on indicate success
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 670
Received Java Code:@Override public void run(){	  addText(txt,"indicate success");	}
Method Name:run
API seq: addText
Tokens: add txt text

ID : 671
Received Java Code:@Override public void onIndicateFailure(final BleException exception){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,exception.toString());	    }	  }	);	}
Method Name:on indicate failure
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 672
Received Java Code:@Override public void run(){	  addText(txt,exception.toString());	}
Method Name:run
API seq: exception.toString addText
Tokens: add txt text

ID : 673
Received Java Code:@Override public void onCharacteristicChanged(byte[] data){	  runOnUiThread(new Runnable(){	    @Override public void run(){	      addText(txt,HexUtil.formatHexString(characteristic.getValue(),true));	    }	  }	);	}
Method Name:on characteristic changed
API seq: Runnable.new runOnUiThread
Tokens: runnable ui run thread

ID : 674
Received Java Code:@Override public void run(){	  addText(txt,HexUtil.formatHexString(characteristic.getValue(),true));	}
Method Name:run
API seq: characteristic.getValue HexUtil.formatHexString addText
Tokens: add txt util get true format hex text value characteristic

ID : 675
Received Java Code:private void runOnUiThread(Runnable runnable){	  if (isAdded() && getActivity() != null)   getActivity().runOnUiThread(runnable);	}
Method Name:run on ui thread
API seq:
Tokens: runnable ui activity null added get run thread

ID : 676
Received Java Code:private void addText(TextView textView,String content){	  textView.append(content);	  textView.append("\n");	  int offset=textView.getLineCount() * textView.getLineHeight();	  if (offset > textView.getHeight()) {	    textView.scrollTo(0,offset - textView.getHeight());	  }	}
Method Name:add text
API seq: TextView.append TextView.append TextView.getLineCount TextView.getLineHeight TextView.getHeight TextView.getHeight TextView.scrollTo
Tokens: view offset line get count scroll text append content height

ID : 677
Received Java Code:@Override protected void onCreate(Bundle savedInstanceState){	  super.onCreate(savedInstanceState);	  setContentView(R.layout.activity_operation);	  initData();	  initView();	  initPage();	  ObserverManager.getInstance().addObserver(this);	}
Method Name:on create
API seq: super.onCreate setContentView initData initView initPage ObserverManager.getInstance ObserverManager.addObserver
Tokens: add init instance data activity manager saved content super layout observer view get create page state operation

ID : 678
Received Java Code:@Override protected void onDestroy(){	  super.onDestroy();	  BleManager.getInstance().clearCharacterCallback(bleDevice);	  ObserverManager.getInstance().deleteObserver(this);	}
Method Name:on destroy
API seq: super.onDestroy BleManager.getInstance BleManager.clearCharacterCallback ObserverManager.getInstance ObserverManager.deleteObserver
Tokens: super observer character instance manager get clear destroy callback ble device delete

ID : 679
Received Java Code:@Override public void disConnected(BleDevice device){	  if (device != null && bleDevice != null && device.getKey().equals(bleDevice.getKey())) {	    finish();	  }	}
Method Name:dis connected
API seq: BleDevice.getKey bleDevice.getKey bleDevice.equals finish
Tokens: null get equals ble finish device key

ID : 680
Received Java Code:@Override public boolean onKeyDown(int keyCode,KeyEvent event){	  if (keyCode == KeyEvent.KEYCODE_BACK) {	    if (currentPage != 0) {	      currentPage--;	      changePage(currentPage);	      return true;	    }	 else {	      finish();	      return true;	    }	  }	  return super.onKeyDown(keyCode,event);	}
Method Name:on key down
API seq: changePage finish super.onKeyDown
Tokens: keycode super current code change true back finish page event down key

ID : 681
Received Java Code:private void initView(){	  toolbar=(Toolbar)findViewById(R.id.toolbar);	  toolbar.setTitle(titles[0]);	  setSupportActionBar(toolbar);	  getSupportActionBar().setDisplayHomeAsUpEnabled(true);	  toolbar.setNavigationOnClickListener(new View.OnClickListener(){	    @Override public void onClick(    View view){	      if (currentPage != 0) {	        currentPage--;	        changePage(currentPage);	      }	 else {	        finish();	      }	    }	  }	);	}
Method Name:init view
API seq: findViewById toolbar.setTitle setSupportActionBar getSupportActionBar getSupportActionBar.setDisplayHomeAsUpEnabled View.OnClickListener.new toolbar.setNavigationOnClickListener
Tokens: display listener titles title click enabled home toolbar navigation view bar find get true action id up support

ID : 682
Received Java Code:@Override public void onClick(View view){	  if (currentPage != 0) {	    currentPage--;	    changePage(currentPage);	  }	 else {	    finish();	  }	}
Method Name:on click
API seq: changePage finish
Tokens: current change finish page

ID : 683
Received Java Code:private void initData(){	  bleDevice=getIntent().getParcelableExtra(KEY_DATA);	  if (bleDevice == null)   finish();	  titles=new String[]{getString(R.string.service_list),getString(R.string.characteristic_list),getString(R.string.console)};	}
Method Name:init data
API seq: getIntent getIntent.getParcelableExtra
Tokens: console data titles intent characteristic null parcelable service get extra ble finish device key

ID : 684
Received Java Code:private void initPage(){	  prepareFragment();	  changePage(0);	}
Method Name:init page
API seq: prepareFragment changePage
Tokens: prepare fragment change page

ID : 685
Received Java Code:public void changePage(int page){	  currentPage=page;	  toolbar.setTitle(titles[page]);	  updateFragment(page);	  if (currentPage == 1) {	    ((CharacteristicListFragment)fragments.get(1)).showData();	  }	 else   if (currentPage == 2) {	    ((CharacteristicOperationFragment)fragments.get(2)).showData();	  }	}
Method Name:change page
API seq: toolbar.setTitle updateFragment fragments.get fragments.get
Tokens: data show update titles title characteristic toolbar fragment current get fragments page operation

ID : 686
Received Java Code:private void prepareFragment(){	  fragments.add(new ServiceListFragment());	  fragments.add(new CharacteristicListFragment());	  fragments.add(new CharacteristicOperationFragment());	  for (  Fragment fragment : fragments) {	    getSupportFragmentManager().beginTransaction().add(R.id.fragment,fragment).hide(fragment).commit();	  }	}
Method Name:prepare fragment
API seq: ServiceListFragment.new fragments.add CharacteristicListFragment.new fragments.add CharacteristicOperationFragment.new fragments.add getSupportFragmentManager getSupportFragmentManager.beginTransaction getSupportFragmentManager.add getSupportFragmentManager.hide getSupportFragmentManager.commit
Tokens: add manager commit characteristic fragment hide service get fragments id support operation begin transaction

ID : 687
Received Java Code:private void updateFragment(int position){	  if (position > fragments.size() - 1) {	    return;	  }	  for (int i=0; i < fragments.size(); i++) {	    FragmentTransaction transaction=getSupportFragmentManager().beginTransaction();	    Fragment fragment=fragments.get(i);	    if (i == position) {	      transaction.show(fragment);	    }	 else {	      transaction.hide(fragment);	    }	    transaction.commit();	  }	}
Method Name:update fragment
API seq: fragments.size fragments.size getSupportFragmentManager getSupportFragmentManager.beginTransaction fragments.get FragmentTransaction.show FragmentTransaction.hide FragmentTransaction.commit
Tokens: fragment hide manager size get show commit fragments position support begin transaction

ID : 688
Received Java Code:public BleDevice getBleDevice(){	  return bleDevice;	}
Method Name:get ble device
API seq:
Tokens: ble device

ID : 689
Received Java Code:public BluetoothGattService getBluetoothGattService(){	  return bluetoothGattService;	}
Method Name:get bluetooth gatt service
API seq:
Tokens: bluetooth service gatt

ID : 690
Received Java Code:public void setBluetoothGattService(BluetoothGattService bluetoothGattService){	  this.bluetoothGattService=bluetoothGattService;	}
Method Name:set bluetooth gatt service
API seq:
Tokens: bluetooth service gatt

ID : 691
Received Java Code:public BluetoothGattCharacteristic getCharacteristic(){	  return characteristic;	}
Method Name:get characteristic
API seq:
Tokens: characteristic

ID : 692
Received Java Code:public void setCharacteristic(BluetoothGattCharacteristic characteristic){	  this.characteristic=characteristic;	}
Method Name:set characteristic
API seq:
Tokens: characteristic

ID : 693
Received Java Code:public int getCharaProp(){	  return charaProp;	}
Method Name:get chara prop
API seq:
Tokens: prop chara

ID : 694
Received Java Code:public void setCharaProp(int charaProp){	  this.charaProp=charaProp;	}
Method Name:set chara prop
API seq:
Tokens: prop chara

ID : 695
Received Java Code:@Override public View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){	  View v=inflater.inflate(R.layout.fragment_characteric_list,null);	  initView(v);	  return v;	}
Method Name:on create view
API seq: LayoutInflater.inflate initView
Tokens: layout init view fragment inflate null characteric inflater

ID : 696
Received Java Code:private void initView(View v){	  mResultAdapter=new ResultAdapter(getActivity());	  ListView listView_device=(ListView)v.findViewById(R.id.list_service);	  listView_device.setAdapter(mResultAdapter);	  listView_device.setOnItemClickListener(new AdapterView.OnItemClickListener(){	    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){	      final BluetoothGattCharacteristic characteristic=mResultAdapter.getItem(position);	      final List<Integer> propList=new ArrayList<>();	      List<String> propNameList=new ArrayList<>();	      int charaProp=characteristic.getProperties();	      if ((charaProp & BluetoothGattCharacteristic.PROPERTY_READ) > 0) {	        propList.add(CharacteristicOperationFragment.PROPERTY_READ);	        propNameList.add("Read");	      }	      if ((charaProp & BluetoothGattCharacteristic.PROPERTY_WRITE) > 0) {	        propList.add(CharacteristicOperationFragment.PROPERTY_WRITE);	        propNameList.add("Write");	      }	      if ((charaProp & BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE) > 0) {	        propList.add(CharacteristicOperationFragment.PROPERTY_WRITE_NO_RESPONSE);	        propNameList.add("Write No Response");	      }	      if ((charaProp & BluetoothGattCharacteristic.PROPERTY_NOTIFY) > 0) {	        propList.add(CharacteristicOperationFragment.PROPERTY_NOTIFY);	        propNameList.add("Notify");	      }	      if ((charaProp & BluetoothGattCharacteristic.PROPERTY_INDICATE) > 0) {	        propList.add(CharacteristicOperationFragment.PROPERTY_INDICATE);	        propNameList.add("Indicate");	      }	      if (propList.size() > 1) {	        new AlertDialog.Builder(getActivity()).setTitle(getActivity().getString(R.string.select_operation_type)).setItems(propNameList.toArray(new String[propNameList.size()]),new DialogInterface.OnClickListener(){	          @Override public void onClick(          DialogInterface dialog,          int which){	            ((OperationActivity)getActivity()).setCharacteristic(characteristic);	            ((OperationActivity)getActivity()).setCharaProp(propList.get(which));	            ((OperationActivity)getActivity()).changePage(2);	          }	        }	).show();	      }	 else       if (propList.size() > 0) {	        ((OperationActivity)getActivity()).setCharacteristic(characteristic);	        ((OperationActivity)getActivity()).setCharaProp(propList.get(0));	        ((OperationActivity)getActivity()).changePage(2);	      }	    }	  }	);	}
Method Name:init view
API seq: getActivity ResultAdapter View.findViewById ListView.setAdapter AdapterView.OnItemClickListener.new ListView.setOnItemClickListener
Tokens: item adapter activity listview listener click result view service find get id device

ID : 697
Received Java Code:@Override public void onItemClick(AdapterView<?> parent,View view,int position,long id){	  final BluetoothGattCharacteristic characteristic=mResultAdapter.getItem(position);	  final List<Integer> propList=new ArrayList<>();	  List<String> propNameList=new ArrayList<>();	  int charaProp=characteristic.getProperties();	  if ((charaProp & BluetoothGattCharacteristic.PROPERTY_READ) > 0) {	    propList.add(CharacteristicOperationFragment.PROPERTY_READ);	    propNameList.add("Read");	  }	  if ((charaProp & BluetoothGattCharacteristic.PROPERTY_WRITE) > 0) {	    propList.add(CharacteristicOperationFragment.PROPERTY_WRITE);	    propNameList.add("Write");	  }	  if ((charaProp & BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE) > 0) {	    propList.add(CharacteristicOperationFragment.PROPERTY_WRITE_NO_RESPONSE);	    propNameList.add("Write No Response");	  }	  if ((charaProp & BluetoothGattCharacteristic.PROPERTY_NOTIFY) > 0) {	    propList.add(CharacteristicOperationFragment.PROPERTY_NOTIFY);	    propNameList.add("Notify");	  }	  if ((charaProp & BluetoothGattCharacteristic.PROPERTY_INDICATE) > 0) {	    propList.add(CharacteristicOperationFragment.PROPERTY_INDICATE);	    propNameList.add("Indicate");	  }	  if (propList.size() > 1) {	    new AlertDialog.Builder(getActivity()).setTitle(getActivity().getString(R.string.select_operation_type)).setItems(propNameList.toArray(new String[propNameList.size()]),new DialogInterface.OnClickListener(){	      @Override public void onClick(      DialogInterface dialog,      int which){	        ((OperationActivity)getActivity()).setCharacteristic(characteristic);	        ((OperationActivity)getActivity()).setCharaProp(propList.get(which));	        ((OperationActivity)getActivity()).changePage(2);	      }	    }	).show();	  }	 else   if (propList.size() > 0) {	    ((OperationActivity)getActivity()).setCharacteristic(characteristic);	    ((OperationActivity)getActivity()).setCharaProp(propList.get(0));	    ((OperationActivity)getActivity()).changePage(2);	  }	}
Method Name:on item click
API seq: mResultAdapter.getItem BluetoothGattCharacteristic.getProperties propList.add propNameList.add propList.add propNameList.add propList.add propNameList.add propList.add propNameList.add propList.add propNameList.add propList.size getActivity AlertDialog.Builder getActivity getActivity.getString getActivity.setTitle propNameList.size propNameList.toArray DialogInterface.OnClickListener.new DialogInterface.OnClickListener.setItems DialogInterface.OnClickListener.show propList.size getActivity getActivity getActivity.setCharaProp getActivity
Tokens: select activity show listener integer interface title type characteristic notify result dialog alert get prop builder property indicate write add item adapter read change chara gatt click fragment bluetooth size response name page position items operation properties

ID : 698
Received Java Code:@Override public void onClick(DialogInterface dialog,int which){	  ((OperationActivity)getActivity()).setCharacteristic(characteristic);	  ((OperationActivity)getActivity()).setCharaProp(propList.get(which));	  ((OperationActivity)getActivity()).changePage(2);	}
Method Name:on click
API seq: getActivity getActivity getActivity.setCharaProp getActivity
Tokens: which activity get prop change chara page operation characteristic

ID : 699
Received Java Code:public void showData(){	  BluetoothGattService service=((OperationActivity)getActivity()).getBluetoothGattService();	  mResultAdapter.clear();	  for (  BluetoothGattCharacteristic characteristic : service.getCharacteristics()) {	    mResultAdapter.addResult(characteristic);	  }	  mResultAdapter.notifyDataSetChanged();	}
Method Name:show data
API seq: getActivity mResultAdapter.clear BluetoothGattService.getCharacteristics mResultAdapter.addResult mResultAdapter.notifyDataSetChanged
Tokens: add characteristics adapter activity data clear gatt characteristic notify result bluetooth service get operation changed

ID : 700
Received Java Code:void disConnected(BleDevice bleDevice);
Method Name:dis connected
API seq: disConnected
Tokens: connected ble device dis

ID : 701
Received Java Code:public static ObserverManager getInstance(){	  return ObserverManagerHolder.sObserverManager;	}
Method Name:get instance
API seq:
Tokens: observer manager holder

ID : 702
Received Java Code:@Override public void addObserver(Observer obj){	  observers.add(obj);	}
Method Name:add observer
API seq: observers.add
Tokens: add obj observers

ID : 703
Received Java Code:@Override public void deleteObserver(Observer obj){	  int i=observers.indexOf(obj);	  if (i >= 0) {	    observers.remove(obj);	  }	}
Method Name:delete observer
API seq: observers.indexOf observers.remove
Tokens: obj index observers remove

ID : 704
Received Java Code:@Override public void notifyObserver(BleDevice bleDevice){	  for (int i=0; i < observers.size(); i++) {	    Observer o=observers.get(i);	    o.disConnected(bleDevice);	  }	}
Method Name:notify observer
API seq: observers.size observers.get Observer.disConnected
Tokens: connected observer size get ble device observers dis

ID : 705
Received Java Code:void addObserver(Observer obj);
Method Name:add observer
API seq: addObserver
Tokens: add observer obj

ID : 706
Received Java Code:void deleteObserver(Observer obj);
Method Name:delete observer
API seq: deleteObserver
Tokens: observer obj delete

ID : 707
Received Java Code:void notifyObserver(BleDevice bleDevice);
Method Name:notify observer
API seq: notifyObserver
Tokens: observer ble device notify

ID : 708
Received Java Code:private PublicSuffixPatterns(){	}
Method Name:public suffix patterns
API seq:
Tokens:

ID : 709
Received Java Code:static ImmutableMap<String,PublicSuffixType> parseTrie(CharSequence encoded){	  ImmutableMap.Builder<String,PublicSuffixType> builder=ImmutableMap.builder();	  int encodedLen=encoded.length();	  int idx=0;	  while (idx < encodedLen) {	    idx+=doParseTrieToBuilder(Lists.<CharSequence>newLinkedList(),encoded,idx,builder);	  }	  return builder.build();	}
Method Name:parse trie
API seq: ImmutableMap.builder CharSequence.length newLinkedList doParseTrieToBuilder builder.build
Tokens: length do parse suffix type trie sequence immutable len build lists builder char idx map encoded linked

ID : 710
Received Java Code:private static int doParseTrieToBuilder(List<CharSequence> stack,CharSequence encoded,int start,ImmutableMap.Builder<String,PublicSuffixType> builder){	  int encodedLen=encoded.length();	  int idx=start;	  char c='\0';	  for (; idx < encodedLen; idx++) {	    c=encoded.charAt(idx);	    if (c == '&' || c == '?' || c == '!' || c == ':' || c == ',') {	      break;	    }	  }	  stack.add(0,reverse(encoded.subSequence(start,idx)));	  if (c == '!' || c == '?' || c == ':' || c == ',') {	    String domain=PREFIX_JOINER.join(stack);	    if (domain.length() > 0) {	      builder.put(domain,PublicSuffixType.fromCode(c));	    }	  }	  idx++;	  if (c != '?' && c != ',') {	    while (idx < encodedLen) {	      idx+=doParseTrieToBuilder(stack,encoded,idx,builder);	      if (encoded.charAt(idx) == '?' || encoded.charAt(idx) == ',') {	        idx++;	        break;	      }	    }	  }	  stack.remove(0);	  return idx - start;	}
Method Name:do parse trie to builder
API seq: CharSequence.length CharSequence.charAt CharSequence.subSequence reverse stack.add PREFIX_JOINER.join String.length PublicSuffixType.fromCode builder.put doParseTrieToBuilder CharSequence.charAt CharSequence.charAt stack.remove
Tokens: sub stack code prefix do suffix type put remove len builder from join add break length start parse trie reverse sequence domain joiner char idx encoded

ID : 711
Received Java Code:private static CharSequence reverse(CharSequence s){	  return new StringBuilder(s).reverse();	}
Method Name:reverse
API seq: StringBuilder StringBuilder.reverse
Tokens: builder reverse

ID : 712
Received Java Code:private PublicSuffixPatterns(){	}
Method Name:public suffix patterns
API seq:
Tokens:

ID : 713
Received Java Code:static ImmutableMap<String,PublicSuffixType> parseTrie(CharSequence encoded){	  ImmutableMap.Builder<String,PublicSuffixType> builder=ImmutableMap.builder();	  int encodedLen=encoded.length();	  int idx=0;	  while (idx < encodedLen) {	    idx+=doParseTrieToBuilder(Lists.<CharSequence>newLinkedList(),encoded,idx,builder);	  }	  return builder.build();	}
Method Name:parse trie
API seq: ImmutableMap.builder CharSequence.length newLinkedList doParseTrieToBuilder builder.build
Tokens: length do parse suffix type trie sequence immutable len build lists builder char idx map encoded linked

ID : 714
Received Java Code:private static int doParseTrieToBuilder(List<CharSequence> stack,CharSequence encoded,int start,ImmutableMap.Builder<String,PublicSuffixType> builder){	  int encodedLen=encoded.length();	  int idx=start;	  char c='\0';	  for (; idx < encodedLen; idx++) {	    c=encoded.charAt(idx);	    if (c == '&' || c == '?' || c == '!' || c == ':' || c == ',') {	      break;	    }	  }	  stack.add(0,reverse(encoded.subSequence(start,idx)));	  if (c == '!' || c == '?' || c == ':' || c == ',') {	    String domain=PREFIX_JOINER.join(stack);	    if (domain.length() > 0) {	      builder.put(domain,PublicSuffixType.fromCode(c));	    }	  }	  idx++;	  if (c != '?' && c != ',') {	    while (idx < encodedLen) {	      idx+=doParseTrieToBuilder(stack,encoded,idx,builder);	      if (encoded.charAt(idx) == '?' || encoded.charAt(idx) == ',') {	        idx++;	        break;	      }	    }	  }	  stack.remove(0);	  return idx - start;	}
Method Name:do parse trie to builder
API seq: CharSequence.length CharSequence.charAt CharSequence.subSequence reverse stack.add PREFIX_JOINER.join String.length PublicSuffixType.fromCode builder.put doParseTrieToBuilder CharSequence.charAt CharSequence.charAt stack.remove
Tokens: sub stack code prefix do suffix type put remove len builder from join add break length start parse trie reverse sequence domain joiner char idx encoded

ID : 715
Received Java Code:private static CharSequence reverse(CharSequence s){	  return new StringBuilder(s).reverse();	}
Method Name:reverse
API seq: StringBuilder StringBuilder.reverse
Tokens: builder reverse

ID : 716
Received Java Code:@Beta public static BigInteger ceilingPowerOfTwo(BigInteger x){	  return BigInteger.ZERO.setBit(log2(x,RoundingMode.CEILING));	}
Method Name:ceiling power of two
API seq: log2 BigInteger.ZERO.setBit
Tokens: zero mode ceiling big rounding integer bit log2

ID : 717
Received Java Code:@Beta public static BigInteger floorPowerOfTwo(BigInteger x){	  return BigInteger.ZERO.setBit(log2(x,RoundingMode.FLOOR));	}
Method Name:floor power of two
API seq: log2 BigInteger.ZERO.setBit
Tokens: zero mode big rounding integer floor bit log2

ID : 718
Received Java Code:public static boolean isPowerOfTwo(BigInteger x){	  checkNotNull(x);	  return x.signum() > 0 && x.getLowestSetBit() == x.bitLength() - 1;	}
Method Name:is power of two
API seq: checkNotNull BigInteger.signum BigInteger.getLowestSetBit BigInteger.bitLength
Tokens: signum null get length check bit lowest

ID : 719
Received Java Code:@SuppressWarnings("fallthrough") public static int log2(BigInteger x,RoundingMode mode){	  checkPositive("x",checkNotNull(x));	  int logFloor=x.bitLength() - 1;	switch (mode) {	case UNNECESSARY:	    checkRoundingUnnecessary(isPowerOfTwo(x));	case DOWN:	case FLOOR:	  return logFloor;	case UP:	case CEILING:	return isPowerOfTwo(x) ? logFloor : logFloor + 1;	case HALF_DOWN:	case HALF_UP:	case HALF_EVEN:	if (logFloor < SQRT2_PRECOMPUTE_THRESHOLD) {	BigInteger halfPower=SQRT2_PRECOMPUTED_BITS.shiftRight(SQRT2_PRECOMPUTE_THRESHOLD - logFloor);	if (x.compareTo(halfPower) <= 0) {	  return logFloor;	}	 else {	  return logFloor + 1;	}	}	BigInteger x2=x.pow(2);	int logX2Floor=x2.bitLength() - 1;	return (logX2Floor < 2 * logFloor + 1) ? logFloor : logFloor + 1;	default :	throw new AssertionError();	}	}
Method Name:log2
API seq: checkNotNull checkPositive BigInteger.bitLength switch isPowerOfTwo checkRoundingUnnecessary isPowerOfTwo SQRT2_PRECOMPUTED_BITS.shiftRight BigInteger.compareTo BigInteger.pow BigInteger.bitLength return AssertionError
Tokens: big compare half log shift threshold integer bit error down two switch mode default pow assertion sqrt2 up power floor x2floor case ceiling length bits unnecessary rounding check positive right precompute null even throw x2 precomputed

ID : 720
Received Java Code:@GwtIncompatible @SuppressWarnings("fallthrough") public static int log10(BigInteger x,RoundingMode mode){	  checkPositive("x",x);	  if (fitsInLong(x)) {	    return LongMath.log10(x.longValue(),mode);	  }	  int approxLog10=(int)(log2(x,FLOOR) * LN_2 / LN_10);	  BigInteger approxPow=BigInteger.TEN.pow(approxLog10);	  int approxCmp=approxPow.compareTo(x);	  if (approxCmp > 0) {	    do {	      approxLog10--;	      approxPow=approxPow.divide(BigInteger.TEN);	      approxCmp=approxPow.compareTo(x);	    }	 while (approxCmp > 0);	  }	 else {	    BigInteger nextPow=BigInteger.TEN.multiply(approxPow);	    int nextCmp=nextPow.compareTo(x);	    while (nextCmp <= 0) {	      approxLog10++;	      approxPow=nextPow;	      approxCmp=nextCmp;	      nextPow=BigInteger.TEN.multiply(approxPow);	      nextCmp=nextPow.compareTo(x);	    }	  }	  int floorLog=approxLog10;	  BigInteger floorPow=approxPow;	  int floorCmp=approxCmp;	switch (mode) {	case UNNECESSARY:	    checkRoundingUnnecessary(floorCmp == 0);	case FLOOR:	case DOWN:	  return floorLog;	case CEILING:	case UP:	return floorPow.equals(x) ? floorLog : floorLog + 1;	case HALF_DOWN:	case HALF_UP:	case HALF_EVEN:	BigInteger x2=x.pow(2);	BigInteger halfPowerSquared=floorPow.pow(2).multiply(BigInteger.TEN);	return (x2.compareTo(halfPowerSquared) <= 0) ? floorLog : floorLog + 1;	default :	throw new AssertionError();	}	}
Method Name:log10
API seq: checkPositive fitsInLong BigInteger.longValue LongMath.log10 log2 BigInteger.TEN.pow BigInteger.compareTo BigInteger.divide BigInteger.compareTo BigInteger.TEN.multiply BigInteger.compareTo BigInteger.TEN.multiply BigInteger.compareTo switch checkRoundingUnnecessary BigInteger.equals BigInteger.pow BigInteger.pow BigInteger.multiply BigInteger.compareTo return AssertionError
Tokens: next big compare ln half log log10 cmp do integer error down long switch mode default pow assertion divide up power floor log2 multiply ten value case 10 ceiling unnecessary rounding check positive fits even throw equals squared x2 math approx

ID : 721
Received Java Code:@GwtIncompatible @SuppressWarnings("fallthrough") public static BigInteger sqrt(BigInteger x,RoundingMode mode){	  checkNonNegative("x",x);	  if (fitsInLong(x)) {	    return BigInteger.valueOf(LongMath.sqrt(x.longValue(),mode));	  }	  BigInteger sqrtFloor=sqrtFloor(x);	switch (mode) {	case UNNECESSARY:	    checkRoundingUnnecessary(sqrtFloor.pow(2).equals(x));	case FLOOR:	case DOWN:	  return sqrtFloor;	case CEILING:	case UP:	int sqrtFloorInt=sqrtFloor.intValue();	boolean sqrtFloorIsExact=(sqrtFloorInt * sqrtFloorInt == x.intValue()) && sqrtFloor.pow(2).equals(x);	return sqrtFloorIsExact ? sqrtFloor : sqrtFloor.add(BigInteger.ONE);	case HALF_DOWN:	case HALF_UP:	case HALF_EVEN:	BigInteger halfSquare=sqrtFloor.pow(2).add(sqrtFloor);	return (halfSquare.compareTo(x) >= 0) ? sqrtFloor : sqrtFloor.add(BigInteger.ONE);	default :	throw new AssertionError();	}	}
Method Name:sqrt
API seq: checkNonNegative fitsInLong BigInteger.longValue LongMath.sqrt BigInteger.valueOf sqrtFloor switch BigInteger.pow BigInteger.equals checkRoundingUnnecessary BigInteger.intValue BigInteger.intValue BigInteger.add BigInteger.pow BigInteger.add BigInteger.compareTo return BigInteger.add AssertionError
Tokens: big compare half integer error non down long switch mode default negative sqrt pow assertion up floor value case add ceiling one unnecessary rounding check fits square boolean even throw equals exact math

ID : 722
Received Java Code:@GwtIncompatible private static BigInteger sqrtFloor(BigInteger x){	  BigInteger sqrt0;	  int log2=log2(x,FLOOR);	  if (log2 < Double.MAX_EXPONENT) {	    sqrt0=sqrtApproxWithDoubles(x);	  }	 else {	    int shift=(log2 - DoubleUtils.SIGNIFICAND_BITS) & ~1;	    sqrt0=sqrtApproxWithDoubles(x.shiftRight(shift)).shiftLeft(shift >> 1);	  }	  BigInteger sqrt1=sqrt0.add(x.divide(sqrt0)).shiftRight(1);	  if (sqrt0.equals(sqrt1)) {	    return sqrt0;	  }	  do {	    sqrt0=sqrt1;	    sqrt1=sqrt0.add(x.divide(sqrt0)).shiftRight(1);	  }	 while (sqrt1.compareTo(sqrt0) < 0);	  return sqrt0;	}
Method Name:sqrt floor
API seq: log2 sqrtApproxWithDoubles BigInteger.shiftRight sqrtApproxWithDoubles sqrtApproxWithDoubles.shiftLeft BigInteger.divide BigInteger.add BigInteger.shiftRight BigInteger.equals BigInteger.divide BigInteger.add BigInteger.shiftRight BigInteger.compareTo
Tokens: add big compare max shift bits do right integer sqrt doubles left utils equals sqrt1 sqrt0 divide significand floor log2 approx exponent

ID : 723
Received Java Code:@GwtIncompatible private static BigInteger sqrtApproxWithDoubles(BigInteger x){	  return DoubleMath.roundToBigInteger(Math.sqrt(DoubleUtils.bigToDouble(x)),HALF_EVEN);	}
Method Name:sqrt approx with doubles
API seq: DoubleUtils.bigToDouble Math.sqrt DoubleMath.roundToBigInteger
Tokens: big half round sqrt even utils math integer

ID : 724
Received Java Code:@GwtIncompatible public static BigInteger divide(BigInteger p,BigInteger q,RoundingMode mode){	  BigDecimal pDec=new BigDecimal(p);	  BigDecimal qDec=new BigDecimal(q);	  return pDec.divide(qDec,0,mode).toBigIntegerExact();	}
Method Name:divide
API seq: BigDecimal BigDecimal BigDecimal.divide BigDecimal.toBigIntegerExact
Tokens: mode big dec exact divide integer decimal

ID : 725
Received Java Code:public static BigInteger factorial(int n){	  checkNonNegative("n",n);	  if (n < LongMath.factorials.length) {	    return BigInteger.valueOf(LongMath.factorials[n]);	  }	  int approxSize=IntMath.divide(n * IntMath.log2(n,CEILING),Long.SIZE,CEILING);	  ArrayList<BigInteger> bignums=new ArrayList<>(approxSize);	  int startingNumber=LongMath.factorials.length;	  long product=LongMath.factorials[startingNumber - 1];	  int shift=Long.numberOfTrailingZeros(product);	  product>>=shift;	  int productBits=LongMath.log2(product,FLOOR) + 1;	  int bits=LongMath.log2(startingNumber,FLOOR) + 1;	  int nextPowerOfTwo=1 << (bits - 1);	  for (long num=startingNumber; num <= n; num++) {	    if ((num & nextPowerOfTwo) != 0) {	      nextPowerOfTwo<<=1;	      bits++;	    }	    int tz=Long.numberOfTrailingZeros(num);	    long normalizedNum=num >> tz;	    shift+=tz;	    int normalizedBits=bits - tz;	    if (normalizedBits + productBits >= Long.SIZE) {	      bignums.add(BigInteger.valueOf(product));	      product=1;	      productBits=0;	    }	    product*=normalizedNum;	    productBits=LongMath.log2(product,FLOOR) + 1;	  }	  if (product > 1) {	    bignums.add(BigInteger.valueOf(product));	  }	  return listProduct(bignums).shiftLeft(shift);	}
Method Name:factorial
API seq: checkNonNegative BigInteger.valueOf IntMath.log2 IntMath.divide Long.numberOfTrailingZeros LongMath.log2 LongMath.log2 Long.numberOfTrailingZeros BigInteger.valueOf bignums.add LongMath.log2 BigInteger.valueOf bignums.add listProduct listProduct.shiftLeft
Tokens: next big bignums normalized tz shift num integer non two long number negative trailing factorials divide power floor log2 value add ceiling product bits length check zeros size left math starting approx

ID : 726
Received Java Code:static BigInteger listProduct(List<BigInteger> nums){	  return listProduct(nums,0,nums.size());	}
Method Name:list product
API seq: nums.size listProduct
Tokens: product size nums

ID : 727
Received Java Code:static BigInteger listProduct(List<BigInteger> nums,int start,int end){	switch (end - start) {	case 0:	    return BigInteger.ONE;	case 1:	  return nums.get(start);	case 2:	return nums.get(start).multiply(nums.get(start + 1));	case 3:	return nums.get(start).multiply(nums.get(start + 1)).multiply(nums.get(start + 2));	default :	int m=(end + start) >>> 1;	return listProduct(nums,start,m).multiply(listProduct(nums,m,end));	}	}
Method Name:list product
API seq: switch nums.get nums.get nums.get nums.multiply nums.get nums.get nums.multiply nums.get nums.multiply listProduct listProduct BigInteger.multiply
Tokens: big default product one get start end integer multiply case nums switch

ID : 728
Received Java Code:public static BigInteger binomial(int n,int k){	  checkNonNegative("n",n);	  checkNonNegative("k",k);	  checkArgument(k <= n,"k (%s) > n (%s)",k,n);	  if (k > (n >> 1)) {	    k=n - k;	  }	  if (k < LongMath.biggestBinomials.length && n <= LongMath.biggestBinomials[k]) {	    return BigInteger.valueOf(LongMath.binomial(n,k));	  }	  BigInteger accum=BigInteger.ONE;	  long numeratorAccum=n;	  long denominatorAccum=1;	  int bits=LongMath.log2(n,RoundingMode.CEILING);	  int numeratorBits=bits;	  for (int i=1; i < k; i++) {	    int p=n - i;	    int q=i + 1;	    if (numeratorBits + bits >= Long.SIZE - 1) {	      accum=accum.multiply(BigInteger.valueOf(numeratorAccum)).divide(BigInteger.valueOf(denominatorAccum));	      numeratorAccum=p;	      denominatorAccum=q;	      numeratorBits=bits;	    }	 else {	      numeratorAccum*=p;	      denominatorAccum*=q;	      numeratorBits+=bits;	    }	  }	  return accum.multiply(BigInteger.valueOf(numeratorAccum)).divide(BigInteger.valueOf(denominatorAccum));	}
Method Name:binomial
API seq: checkNonNegative checkNonNegative checkArgument LongMath.binomial BigInteger.valueOf LongMath.log2 BigInteger.valueOf BigInteger.multiply BigInteger.valueOf BigInteger.divide BigInteger.valueOf BigInteger.multiply BigInteger.valueOf BigInteger.divide
Tokens: big argument integer non long mode negative binomials biggest divide accum log2 multiply value ceiling one length bits rounding binomial check numerator denominator size math

ID : 729
Received Java Code:@GwtIncompatible static boolean fitsInLong(BigInteger x){	  return x.bitLength() <= Long.SIZE - 1;	}
Method Name:fits in long
API seq: BigInteger.bitLength
Tokens: size length bit long

ID : 730
Received Java Code:private BigIntegerMath(){	}
Method Name:big integer math
API seq:
Tokens:

ID : 731
Received Java Code:PairedStats(Stats xStats,Stats yStats,double sumOfProductsOfDeltas){	  this.xStats=xStats;	  this.yStats=yStats;	  this.sumOfProductsOfDeltas=sumOfProductsOfDeltas;	}
Method Name:paired stats
API seq:
Tokens: stats sum deltas products

ID : 732
Received Java Code:public long count(){	  return xStats.count();	}
Method Name:count
API seq: xStats.count
Tokens: stats count

ID : 733
Received Java Code:public Stats xStats(){	  return xStats;	}
Method Name:x stats
API seq:
Tokens: stats

ID : 734
Received Java Code:public Stats yStats(){	  return yStats;	}
Method Name:y stats
API seq:
Tokens: stats

ID : 735
Received Java Code:public double populationCovariance(){	  checkState(count() != 0);	  return sumOfProductsOfDeltas / count();	}
Method Name:population covariance
API seq: count checkState count
Tokens: count sum check state deltas products

